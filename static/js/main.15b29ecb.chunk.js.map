{"version":3,"sources":["components/NavigationBar/NavigationBarSC.js","components/NavigationBar/NavigationBar.tsx","pages/MoviePage/MoviePageBody/MoviePageItem/MoviePageItemSC.js","pages/MoviePage/MoviePageBody/MoviePageItem/MoviePageItem.tsx","pages/MoviePage/MoviePageBody/MoviePageBodySC.js","API/index.ts","redux-store/MoviePageReducer.ts","pages/MoviePage/MoviePageBody/MoviePageBody.tsx","pages/MoviePage/MoviePageSC.js","pages/MoviePage/VMoviePageHeader/MoviePageHeader.tsx","pages/MoviePage/MoviePage.tsx","styles/AppSC.js","styles/FavouriteMoviesSC.js","pages/FavouritesMoviesPage/FavouriteMovieItem.tsx","pages/FavouritesMoviesPage/FavouriteMoviesPage.tsx","redux-store/FavouriteMoviesReducer.ts","hooks/useLocalStorage.ts","pages/FavouritesMoviesPage/FavouriteMoviesPageContainer.tsx","pages/MoviePage/SelectedMoviePage/SelectedMoviePageSC.js","pages/MoviePage/SelectedMoviePage/SimilarMovie.tsx","pages/MoviePage/SelectedMoviePage/ModalVideo.tsx","pages/MoviePage/SelectedMoviePage/CastSC.js","pages/MoviePage/SelectedMoviePage/Cast.tsx","pages/MoviePage/SelectedMoviePage/ReviewsSC.js","pages/MoviePage/SelectedMoviePage/Reviews.tsx","pages/MoviePage/SelectedMoviePage/SelectedMoviePage.tsx","pages/MoviePage/SelectedMoviePage/SelectedMoviePageContainer.tsx","App.tsx","reportWebVitals.js","redux-store/RootReducer.ts","index.js"],"names":["NavigationContainerSC","styled","nav","NavigationLinkSC","NavLink","LinkContentSC","span","NavigationBar","props","to","MovieSC","div","TitleSC","MoviePageItem","poster","url","id","title","src","alt","height","width","MoviesListSC","MoviesPagesSC","isActive","API_KEY","movieInstance","axios","create","baseURL","listInstance","headers","movie","searchedMovie","currentPage","get","then","res","data","movieId","collectionId","movieList","setList","listName","post","getList","listId","updateList","MovieId","items","removeItems","delete","initialState","resultMoviesData","selectedMovieData","similarMoviesData","totalPages","videoKey","isTrailerOpen","collection","movieCast","reviews","actions","searchedText","type","movieData","similarMovieData","page","selectedMovie","collectionData","castData","reviewsData","reviewsTotalPages","reviewPage","MoviePageReducer","state","action","MoviePageBody","dispatch","useDispatch","history","useHistory","useSelector","setCurrentPage","setMovieData","MovieData","parsed","queryString","location","search","substr","useEffect","searchMovie","response","results","setTotalPages","push","pathname","resultMoviesDataArr","map","item","index","poster_path","selectPage","range","totalPagesArr","i","mapping","arr","onClick","extremePages","num","neighbours","rightLimit","length","filter","pagination","WrapperSC","MoviePageHeader","useState","isSearched","setIsSearched","onSearch","console","log","onChange","event","target","value","onKeyPress","key","MoviePage","BodySC","ContentSC","NavigationWrapperSC","ListWrapperSC","PageTitleSC","h1","ListSC","BackdropSC","bg","SortSC","WrapperItemSC","HoveredSC","flag","content","EmptyListSC","p","FavouriteMovieItem","removeFromFavourite","hover","setHover","isFavourite","setIsFavourite","onMouseEnter","onMouseLeave","xmlns","fill","stroke","className","viewBox","d","FavouriteMoviePage","favouritesMovies","listData","setType","FavouriteMoviesList","sort","a","b","popularity","vote_average","reverse","backdrop_path","e","currentTarget","isCreated","isFetching","FMactions","FavouriteMoviesReducer","useLocalStorage","initialValue","readValue","window","localStorage","getItem","JSON","parse","error","warn","storedValue","setStoredValue","handleStorageChange","addEventListener","removeEventListener","newValue","Function","setItem","stringify","dispatchEvent","Event","LIST_KEY","FavouriteMoviesPageContainer","createFavouriteMoviesList","moviesData","WrapperSPSC","MainTitleSC","SubTitleSC","BackDropSC","InfoWrapperSC","InfoContentSC","GradientSC","WatchTrailerButtonSC","button","ToggleFavouriteSC","disabled","DescriptionSC","BackdropSectionSC","VoteContainerSC","VoteScoreCS","score","GenresSC","GenreSC","ProductionSC","ProductionContainerSC","RecommendedMoviesListSC","SimilarMoviesItemSC","RecommendedTitleSC","ModalWrappSC","VideoFrameSC","VideoCloseSC","FooterSC","footer","SocialLinksSC","LinkSC","FooterWrapperSC","FooterInfoSC","CreatedSC","MailSC","SimilarMovie","setSimilarMovieData","setCurrentMovie","similar","splice","ModalVideo","isTrailer","setVideoKey","video","name","includes","alert","frameBorder","allow","allowFullScreen","PersonAvatarSC","AvatarWrapper","AvatarsListSC","PersonSC","NameSC","CharacterSC","CastTitleSC","CastWrapperSC","Cast","setCast","cast","movieCastArr","character","CastPerson","AvatarSC","img","attrs","InfoSC","DateSC","isHidden","ToggleSC","ReviewSectionSC","ReviewTitleSC","PaginationSC","PaginationNumberSC","NoCommSC","Reviews","setReviews","reviewsList","Review","author","date","author_details","myRef","useRef","current","scrollIntoView","ref","ReviewsMemo","React","memo","avatar_path","noSrc","isOpen","setStyle","slice","indexOf","SelectedMoviePage","addedToListInProgress","setFavouriteMoviesList","favouriteData","setFavouriteMovie","toggleFetch","original_title","overview","status","genres","production_companies","release_date","backdrop","similarMovies","production","forEach","join","split","SetInLocalStorage","addToFavourite","list","releaseDate","genresArr","genresFunc","href","size","SelectedMoviePageContainer","setCollectionId","setCollectionData","useParams","selectedFilm","some","App","exact","path","render","from","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15b29ecb.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport {NavLink} from \"react-router-dom\";\n\n\nexport const NavigationContainerSC = styled.nav`\nposition: fixed;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nheight: 100%;\nalign-items: center;\nwidth: 90px;\nborder-right: 1px solid white;\nz-index: 10;\nbackground: black;\n`;\n\nexport const NavigationLinkSC = styled(NavLink)`\n\n`;\n\nexport const LinkContentSC = styled.span`\ncolor:#fff\n`;","import React from 'react';\nimport {LinkContentSC, NavigationContainerSC, NavigationLinkSC } from './NavigationBarSC';\n\n\nexport const NavigationBar: React.FC = (props) => {\n    return (\n        <NavigationContainerSC>\n            <NavigationLinkSC to=\"/Vapi\"><LinkContentSC>Main Page</LinkContentSC></NavigationLinkSC>\n            <NavigationLinkSC to=\"/favourite\"><LinkContentSC> Favourite Movies</LinkContentSC></NavigationLinkSC>\n        </NavigationContainerSC>\n    )\n};","import styled from 'styled-components'\r\n\r\nexport const MovieSC = styled.div`\r\n    height: 480px;\r\n    border: 1px solid black;\r\n    position: relative;\r\n    margin: 0 0 45px 0;\r\n    \r\n`;\r\nexport const TitleSC = styled.div`\r\n    position: absolute;\r\n`;\r\n","import React from 'react'\r\nimport {MovieSC, TitleSC} from \"./MoviePageItemSC\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    poster: string\r\n    url: string\r\n    id: number\r\n    title: string\r\n}\r\n\r\nexport const MoviePageItem: React.FC<PropsType> = (props) => {\r\n    const {poster, url, id, title} = props;\r\n\r\n    const src = `https://image.tmdb.org/t/p/w300/${poster}`;\r\n\r\n    return (\r\n        <NavLink to={url + '/movie/' + id}>\r\n                <MovieSC src={src}>\r\n                    <img\r\n                        src={poster ? src : 'https://prikolnye-kartinki.ru/img/picture/Sep/23/9d857169c84422fdaa28df62667a1467/8.jpg'}\r\n                        alt=\"\" height='100%' width='300'/>\r\n                    <TitleSC>{title}</TitleSC>\r\n                </MovieSC>\r\n        </NavLink>\r\n    )\r\n};","import styled from 'styled-components'\r\n\r\nexport const MoviesListSC = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    justify-content: space-around;\r\n`;\r\n\r\nexport const MoviesPagesSC = styled.span`\r\n    font-weight: ${props => props.isActive};\r\n    margin-left: 2px;\r\n    color: #fff;\r\n`;\r\n\r\nexport const Page = styled.span`\r\ncolor: #fff;\r\n`;","import axios from \"axios\";\r\nimport {CastPersonType, CollectionType, MovieBySearch, ReviewDetails, SelectedMovieType} from \"../types/types\";\r\n\r\nconst API_KEY = '5b9377492f02937b4e7cf2b6508ab19f';\r\nconst ACCESS_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYmYiOjE2MTYxNzA1NjEsImF1ZCI6IjViOTM3NzQ5MmYwMjkzN2I0ZTdjZjJiNjUwOGFiMTlmIiwianRpIjoiMjkxNDIzNyIsInNjb3BlcyI6WyJhcGlfcmVhZCIsImFwaV93cml0ZSJdLCJ2ZXJzaW9uIjoxLCJzdWIiOiI2MDJlN2ZiYjIyM2UyMDAwM2U5ODU2ODUifQ.BaLxvYlC7YsKu-tmY6dMv2nYkRzlbTeYElXT4V3e_Rw'\r\n\r\nexport const movieInstance = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/',\r\n\r\n});\r\nexport const listInstance = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/4/list/',\r\n    headers: {\r\n        \"authorization\": `Bearer ${ACCESS_KEY}`,\r\n        \"content-type\": \"application/json;charset=utf-8\",\r\n\r\n    }\r\n});\r\n\r\nexport const movie = {\r\n    getFilmsBySearch(searchedMovie: string, currentPage: number) {\r\n        return movieInstance.get<MoviesBySearchType>(`search/movie?api_key=${API_KEY}&language=en-US&query=${searchedMovie}&page=${currentPage}&include_adult=false`).then(res => res.data)\r\n    },\r\n    getSelectedFilm(movieId: number) {\r\n        return movieInstance.get<SelectedMovieType>(`movie/${movieId}?api_key=${API_KEY}&language=en-US`).then(res => res.data)\r\n    },\r\n\r\n    getSimilarMovies(movieId: number) {\r\n        return movieInstance.get<SimilarMoviesType>(`/movie/${movieId}/recommendations?api_key=${API_KEY}&language=en-US&page=1`).then(res => res.data)\r\n    },\r\n    getVideo(movieId: number) {\r\n        return movieInstance.get<VideoType>(`/movie/${movieId}/videos?api_key=${API_KEY}&language=en-US`).then(res => res.data)\r\n    },\r\n    getCollection(collectionId: number) {\r\n        return movieInstance.get<CollectionType>(`/collection/${collectionId}?api_key=${API_KEY}&language=en-US`).then(res => res.data)\r\n    },\r\n    getCastAndCrew(collectionId: number) {\r\n        return movieInstance.get<CastType>(`/movie/${collectionId}/credits?api_key=${API_KEY}&language=en-US`).then(res => res.data)\r\n    },\r\n    getReviews(movieId: number, currentPage: number) {\r\n        return movieInstance.get<ReviewsType>(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=${currentPage}`).then(res => res.data)\r\n    },\r\n\r\n};\r\n\r\nexport const movieList = {\r\n    setList(listName: string) {\r\n        return listInstance.post(`https://api.themoviedb.org/4/list`, {\r\n            \"name\": listName,\r\n            \"iso_639_1\": \"en\"\r\n        })\r\n    },\r\n    getList(listId: number) {\r\n        return listInstance.get<ListType>(`${listId}?page=1&api_key=${API_KEY}`).then(res => res.data)\r\n    },\r\n    updateList(listId: number, MovieId: number) {\r\n        return listInstance.post<ResponseType>(`${listId}/items`, {\r\n            items: [\r\n                {\r\n                    \"media_type\": \"movie\",\r\n                    \"media_id\": MovieId\r\n                },\r\n            ]\r\n        })\r\n    },\r\n    removeItems(listId: number, MovieId: number) {\r\n        return listInstance.delete<ResponseType>(`${listId}/items`, {\r\n            data: {\r\n                items: [\r\n                    {\r\n                        \"media_type\": \"movie\",\r\n                        \"media_id\": MovieId\r\n                    }\r\n                ]\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport type MoviesBySearchType = {\r\n    page: number\r\n    results: Array<MovieBySearch>\r\n    total_pages: number\r\n    total_results: number\r\n}\r\ntype SimilarMoviesType = {\r\n    page: number\r\n    results: Array<MovieBySearch>\r\n    total_pages: number\r\n    total_results: number\r\n}\r\ntype VideoType = {\r\n    id: number\r\n    results: Array<{\r\n        id: string\r\n        iso_639_1: string\r\n        iso_3166_1: string\r\n        key: string\r\n        name: string\r\n        site: string\r\n        size: number\r\n        type: string\r\n    }>\r\n}\r\ntype CastType = {\r\n    id: number\r\n    cast: Array<CastPersonType>\r\n    crew: Array<object>\r\n}\r\ntype ReviewsType = {\r\n    id: number\r\n    page: number\r\n    results: Array<ReviewDetails>\r\n    total_pages: number\r\n    total_results: number\r\n}\r\ntype ListType = {\r\n    average_rating: number\r\n    backdrop_path: null | string\r\n    comments: object\r\n    created_by: {gravatar_hash: string, id: string, name: string, username: string}\r\n    description: string\r\n    id: number\r\n    iso_639_1: string\r\n    iso_3166_1: string\r\n    name: string\r\n    object_ids: object\r\n    page: number\r\n    poster_path: null | string\r\n    public: boolean\r\n    results: Array<MovieBySearch>\r\n    length: number\r\n    revenue: number\r\n    runtime: number\r\n    sort_by: string\r\n    total_pages: number\r\n    total_results: number\r\n}\r\ntype ResponseType = {\r\n    \"status_message\": string\r\n    \"results\": [\r\n        {\r\n            \"media_type\": string\r\n            \"media_id\": number\r\n            \"success\": boolean\r\n        }\r\n    ],\r\n    \"success\": boolean\r\n    \"status_code\": number\r\n}\r\n","import {\r\n    CastPersonType,\r\n    CollectionType,\r\n    MovieBySearch,\r\n    ReviewDetails,\r\n    SelectedMovieType\r\n} from \"../types/types\";\r\nimport { InferActionsTypes} from \"./RootReducer\";\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nlet initialState = {\r\n    searchedMovie: '',\r\n    resultMoviesData: [] as Array<MovieBySearch>,\r\n    selectedMovieData: {} as SelectedMovieType,\r\n    similarMoviesData: [] as Array<MovieBySearch>,\r\n    currentPage: null as number | null,\r\n    totalPages: null as number | null,\r\n    videoKey: null as string | null,\r\n    isTrailerOpen: false,\r\n    collection: {\r\n        id: null as number | null,\r\n        data: {} as CollectionType | null\r\n    },\r\n    movieCast: [] as Array<CastPersonType>,\r\n    reviews: {\r\n        data: [] as Array<ReviewDetails> ,\r\n        currentPage: 1,\r\n        totalPages: null as number | null,\r\n    },\r\n\r\n};\r\n\r\n const MoviePageReducer = (state = initialState, action: InferActionsTypes<typeof actions>): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'ON_SEARCH_MOVIE':\r\n            return {...state, searchedMovie: action.searchedText};\r\n        case 'SET_MOVIES':\r\n            return {...state, resultMoviesData: action.movieData};\r\n        case 'SET_CURRENT_MOVIE':\r\n            return {...state, selectedMovieData: action.selectedMovie};\r\n        case 'SET_TOTAL_PAGES':\r\n            return {...state, totalPages: action.totalPages};\r\n        case 'SET_SIMILAR_MOVIES':\r\n            return {...state, similarMoviesData: action.similarMovieData};\r\n        case 'SET_CURRENT_PAGE':\r\n            return {...state, currentPage: action.page};\r\n        case 'SET_COLLECTION_ID':\r\n            return {...state, collection: {...state.collection, id: action.collectionId}};\r\n        case 'SET_COLLECTION_DATA':\r\n            return {...state, collection: {...state.collection, data: action.collectionData}};\r\n        case 'SET_VIDEO_KEY':\r\n            return {...state, videoKey: action.videoKey};\r\n        case 'TOGGLE_VIDEO':\r\n            return {...state, isTrailerOpen: !state.isTrailerOpen};\r\n        case 'SET_CAST':\r\n            return {...state, movieCast: action.castData};\r\n        case 'SET_REVIEWS':\r\n            return {\r\n                ...state,\r\n                reviews: {\r\n                    ...state.reviews,\r\n                    data: action.reviewsData,\r\n                    totalPages: action.reviewsTotalPages\r\n                }\r\n            };\r\n        case 'SET_CURRENT_REVIEW_PAGE':\r\n            return {\r\n                ...state,\r\n                reviews: {\r\n                    ...state.reviews,\r\n                    currentPage: action.reviewPage,\r\n                }\r\n            };\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport const actions = {\r\n    searchMovie: (searchedText: string) => ({type: 'ON_SEARCH_MOVIE', searchedText} as const),\r\n    setMovieData:  (movieData: Array<MovieBySearch>)  => ({type: 'SET_MOVIES', movieData} as const),\r\n    setSimilarMovieData:  (similarMovieData: Array<MovieBySearch>) => ({type: 'SET_SIMILAR_MOVIES', similarMovieData} as const),\r\n    setTotalPages:  (totalPages: number) => ({type: 'SET_TOTAL_PAGES', totalPages} as const),\r\n    setCurrentPage:  (page: number) => ({type: 'SET_CURRENT_PAGE', page} as const),\r\n    setCurrentMovie:  (selectedMovie: SelectedMovieType)  => ({type: 'SET_CURRENT_MOVIE', selectedMovie} as const),\r\n    setCollectionId:  (collectionId: number | null)  => ({type: 'SET_COLLECTION_ID', collectionId} as const),\r\n    setCollectionData:  (collectionData: CollectionType ) => ({type: 'SET_COLLECTION_DATA', collectionData} as const),\r\n    setCast:  (castData: Array<CastPersonType>) => ({type: 'SET_CAST', castData} as const),\r\n    setReviews:  (reviewsData: Array<ReviewDetails>, reviewsTotalPages: number) => ({type: 'SET_REVIEWS', reviewsData, reviewsTotalPages} as const),\r\n    setCurrentReviewPage:  (reviewPage: number) => ({type: 'SET_CURRENT_REVIEW_PAGE', reviewPage} as const),\r\n    setVideoKey:  (videoKey: string | null) => ({type: 'SET_VIDEO_KEY', videoKey} as const),\r\n    openModuleVideo:  () => ({type: 'TOGGLE_VIDEO'} as const),\r\n };\r\n\r\n\r\n\r\nexport default MoviePageReducer","import React, {useEffect} from 'react'\r\nimport {MoviePageItem} from \"./MoviePageItem/MoviePageItem\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {MoviesListSC, MoviesPagesSC} from \"./MoviePageBodySC\";\r\nimport {movie} from \"../../../API\";\r\nimport {CombinedStateType} from \"../../../redux-store/RootReducer\";\r\nimport {MovieBySearch} from '../../../types/types';\r\nimport {actions} from \"../../../redux-store/MoviePageReducer\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport * as queryString from \"querystring\";\r\n\r\nexport const MoviePageBody: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const searchedMovie = useSelector((state: CombinedStateType) => state.MoviePageReducer.searchedMovie);\r\n    const currentPage = useSelector((state: CombinedStateType) => state.MoviePageReducer.currentPage);\r\n    const totalPages = useSelector((state: CombinedStateType) => state.MoviePageReducer.totalPages);\r\n    const resultMoviesData = useSelector((state: CombinedStateType) => state.MoviePageReducer.resultMoviesData);\r\n\r\n    const searchMovie = (searchedMovie: string) => dispatch(actions.searchMovie(searchedMovie));\r\n    const setCurrentPage = (page: number) => dispatch(actions.setCurrentPage(page));\r\n    const setMovieData = (MovieData: Array<MovieBySearch>) => dispatch(actions.setMovieData(MovieData));\r\n    const setTotalPages = (totalPages: number) => dispatch(actions.setTotalPages(totalPages));\r\n\r\n    const parsed = queryString.parse(history.location.search.substr(1)) as {movie: string, page: string};\r\n\r\n    useEffect(() => {\r\n        if(parsed.movie && parsed.page){\r\n            setCurrentPage(+parsed.page);\r\n            searchMovie(parsed.movie);\r\n            movie.getFilmsBySearch(parsed.movie, +parsed.page)\r\n                .then((response) => {\r\n                    setMovieData(response.results);\r\n                    setTotalPages(response['total_pages']);\r\n                });\r\n            history.push({\r\n                pathname: '/Vapi',\r\n                search: `?movie=${parsed.movie}&page=${parsed.page}`\r\n            })\r\n        }\r\n    }, [parsed.movie, parsed.page]);\r\n\r\n    const resultMoviesDataArr = resultMoviesData.map((item, index) => <MoviePageItem poster={item.poster_path}\r\n                                                                                   id={item.id}\r\n                                                                                   url={history.location.pathname}\r\n                                                                                   title={item.title}\r\n                                                                                   key={index}\r\n    /> );\r\n\r\n    const pagination = (range: number) => {\r\n        const totalPagesArr = [];\r\n        if(totalPages !== null)\r\n        for (let i = 1; i <= totalPages; i++) {\r\n            totalPagesArr.push(i)\r\n        }\r\n        const mapping = (arr: Array<number>) => arr.map(\r\n            (item, index) =>\r\n                <MoviesPagesSC key={index} onClick={() => selectPage(item)} isActive={item === currentPage ? '800' : '500'}>\r\n                    {item}\r\n                </MoviesPagesSC>\r\n        );\r\n        const extremePages = (num: number) => <MoviesPagesSC onClick={() => selectPage(num)}>{num}</MoviesPagesSC>;\r\n        const neighbours = (range - 1) / 2;\r\n        const rightLimit = totalPagesArr.length - neighbours;\r\n        if(currentPage !== null)\r\n        if (currentPage >= neighbours + 1 && currentPage < rightLimit) {\r\n            return (\r\n                <div>\r\n                    {\r\n                         currentPage >= neighbours + 2 ? extremePages(1) : ''\r\n                    }\r\n                    {\r\n                        mapping(totalPagesArr.filter(i => i >= currentPage - neighbours && i <= currentPage + neighbours))\r\n                    }\r\n                    {extremePages(totalPagesArr.length)}\r\n                </div>\r\n            )\r\n        } else if (currentPage < neighbours + 1) {\r\n            return (\r\n                <div>\r\n                    {\r\n                        mapping(totalPagesArr.filter(i => i <= range))\r\n                    }\r\n                    {currentPage !== null && extremePages(totalPagesArr.length)}\r\n                </div>\r\n            )\r\n        } else if (currentPage >= rightLimit) {\r\n            return (\r\n                <div>\r\n                    {extremePages(1)}\r\n                    {\r\n                        mapping(totalPagesArr.filter(i => i >= (totalPagesArr.length - neighbours * 2) && i <= totalPagesArr.length))\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    const selectPage = (item: number) => {\r\n        setCurrentPage(item);\r\n        movie.getFilmsBySearch(searchedMovie, item)\r\n            .then((response) => {\r\n                setMovieData(response.results);\r\n            })\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                pagination(9)\r\n            }\r\n            <MoviesListSC>\r\n                {resultMoviesDataArr}\r\n            </MoviesListSC>\r\n        </>\r\n    )\r\n};\r\n\r\n","import styled from 'styled-components'\r\n\r\nexport let MaxWidth = 100;\r\n\r\nexport const WrapperSC = styled.div`\r\n    max-width: ${MaxWidth}%;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n`;\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {actions} from \"../../../redux-store/MoviePageReducer\";\r\nimport {CombinedStateType} from \"../../../redux-store/RootReducer\";\r\nimport {MovieBySearch} from \"../../../types/types\";\r\nimport {movie} from \"../../../API\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport * as queryString from \"querystring\";\r\n\r\n\r\n\r\nexport const MoviePageHeader: React.FC = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [isSearched, setIsSearched] = useState(false);\r\n\r\n    const searchedMovie = useSelector((state: CombinedStateType) => state.MoviePageReducer.searchedMovie);\r\n    const currentPage = useSelector((state: CombinedStateType) => state.MoviePageReducer.currentPage);\r\n\r\n    const searchMovie = (searchedMovie: string) => dispatch(actions.searchMovie(searchedMovie));\r\n    const setMovieData = (movieData: Array<MovieBySearch>) => dispatch(actions.setMovieData(movieData));\r\n    const setTotalPages = (totalPages: number) => dispatch(actions.setTotalPages(totalPages));\r\n    const setCurrentPage = (page: number) => dispatch(actions.setCurrentPage(page));\r\n\r\n\r\n    const onSearch = () => {\r\n        setCurrentPage(1);\r\n        setIsSearched(!isSearched);\r\n        movie.getFilmsBySearch(searchedMovie, 1)\r\n            .then(response => {\r\n                setMovieData(response.results);\r\n                setTotalPages(response['total_pages']);\r\n            });\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        history.push({\r\n            pathname: '/Vapi',\r\n            search: `?movie=${searchedMovie}&page=${currentPage}`\r\n        })\r\n    }, [isSearched, currentPage]);\r\n\r\n    const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        searchMovie(event.target.value)\r\n    };\r\n\r\n    const onKeyHandler = (event: React.KeyboardEvent) => {\r\n        if(event.key === 'Enter') {\r\n            onSearch();\r\n        }\r\n    };\r\n\r\n    console.log('render header')\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" onChange={onInputChange} onKeyPress={onKeyHandler} value={searchedMovie}/>\r\n            <button onClick={onSearch}>search</button>\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\nimport {MoviePageBody} from \"./MoviePageBody/MoviePageBody\";\r\nimport {WrapperSC} from \"./MoviePageSC\";\r\nimport { MoviePageHeader } from './VMoviePageHeader/MoviePageHeader';\r\n\r\ntype PropsType = {}\r\n\r\n\r\nexport const MoviePage: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <WrapperSC>\r\n            <MoviePageHeader/>\r\n            <MoviePageBody/>\r\n        </WrapperSC>\r\n    )\r\n};\r\n","import styled from 'styled-components'\r\n\r\nexport const BodySC = styled.div`\r\ndisplay: flex;\r\nwidth: 100%;\r\nheight: 100%;\r\nposition: relative;\r\n`;\r\nexport const ContentSC = styled.div`\r\nwidth: 100%;\r\n\r\n`;\r\nexport const NavigationWrapperSC = styled.div`\r\nposition: relative;\r\nmin-width: 90px;\r\n`;\r\n","import styled from 'styled-components'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const ListWrapperSC = styled.div`\r\npadding: 0 15px;\r\n`;\r\nexport const PageTitleSC = styled.h1`\r\ncolor: white;\r\nmargin: 0;\r\npadding: 0;\r\nfont-weight: 300;\r\n`;\r\nexport const ListSC = styled.div`\r\ndisplay: flex;\r\nmax-width: 1700px;\r\nmargin: 0 auto;\r\nflex-wrap: wrap;\r\nflex-start: left;\r\n`;\r\nexport const BackdropSC = styled(NavLink)`\r\n    display: block;\r\n    width: 400px;\r\n    height: 220px;\r\n    background: url(${props => props.bg});\r\n    background-size: cover;\r\n`;\r\nexport const TitleSC = styled.div`\r\ncolor: white;\r\n`;\r\nexport const WrapperSC = styled.div`\r\n\r\n`;\r\nexport const SortSC = styled.div`\r\n    color: #fff;\r\n`;\r\nexport const WrapperItemSC = styled.div`\r\n    display: block;\r\n    margin: 20px 2px;\r\n    color: #fff;    \r\n    position: relative;\r\n`;\r\nexport const HoveredSC = styled.div`\r\n    display: ${props => props.flag ? 'block' : 'none'};\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 2px;\r\n    opacity: 80%;\r\n    &:hover {\r\n    opacity: 100%;\r\n    cursor: pointer;\r\n    }\r\n    &:hover::before{\r\n        top: -30px;\r\n        display: block;\r\n        background: #2e2d2d;\r\n        width: 150px;\r\n        text-align: center;\r\n        border-radius: 4px; \r\n        content: '${props => props.content ? 'Remove from the list' : 'Add to the list'}';\r\n        position: absolute;\r\n    } \r\n    &:hover::after{\r\n        top: -12px;\r\n        left: 3px;\r\n        display: block;\r\n        width: 0;\r\n        height: 0;\r\n        border-style: solid;\r\n        border-width: 9px 8px 0 8px;\r\n        border-color: #2e2d2d transparent transparent transparent;\r\n        content: '';\r\n        position: absolute;\r\n    }\r\n`;\r\nexport const EmptyListSC = styled.p`\r\ncolor: white;\r\n`;","import React, {useState} from 'react'\r\nimport {BackdropSC, HoveredSC, TitleSC, WrapperItemSC} from '../../styles/FavouriteMoviesSC';\r\n\r\ntype PropsType = {\r\n    id: number\r\n    title: string\r\n    poster: string\r\n    removeFromFavourite: (flag: boolean, movieId: number) => void\r\n}\r\n\r\nexport const FavouriteMovieItem: React.FC<PropsType> = (props) => {\r\n\r\n    const {id, title, poster, removeFromFavourite} = props;\r\n    const [hover, setHover] = useState(false);\r\n    const [isFavourite, setIsFavourite] = useState(true);\r\n\r\n    const toggleFavouriteMovie = (flag: boolean): void => {\r\n        setIsFavourite(flag);\r\n        removeFromFavourite(isFavourite, id);\r\n    };\r\n\r\n    return (\r\n            <WrapperItemSC onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} >\r\n\r\n                    <BackdropSC bg={`https://image.tmdb.org/t/p/w780` + poster} to={`/Vapi/movie/${id}`}>\r\n                    </BackdropSC>\r\n                    <TitleSC>\r\n                        {title}\r\n                    </TitleSC>\r\n\r\n                    <HoveredSC flag={hover} content={isFavourite} to={`/Vapi/movie/${id}`} onClick={() => toggleFavouriteMovie(!isFavourite)}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"33\" height=\"33\" fill={isFavourite ? `white` : 'transparent'}\r\n                             stroke=\"white\"\r\n                             className=\"bi bi-bookmark-fill\" viewBox=\"0 0 16 16\">\r\n                            <path\r\n                                d=\"M2 2v13.5a.5.5 0 0 0 .74.439L8 13.069l5.26 2.87A.5.5 0 0 0 14 15.5V2a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2z\"/>\r\n                        </svg>\r\n                    </HoveredSC>\r\n            </WrapperItemSC>\r\n    )\r\n};","import React, {ReactNode, useState} from 'react'\r\nimport {ListSC, ListWrapperSC, PageTitleSC, SortSC} from \"../../styles/FavouriteMoviesSC\";\r\nimport {FavouriteMoviesType, MovieBySearch} from '../../types/types';\r\nimport { FavouriteMovieItem } from './FavouriteMovieItem';\r\n\r\ntype PropsType = {\r\n    favouritesMovies: FavouriteMoviesType\r\n    removeFromFavourite: (flag: boolean, movieId: number) => void\r\n}\r\n\r\nexport const FavouriteMoviePage: React.FC<PropsType> = (props) => {\r\n\r\n    const {favouritesMovies, removeFromFavourite} = props;\r\n    const listData = [...favouritesMovies.listData];\r\n\r\n    const [type, setType] = useState('default');\r\n\r\n        const sort = ():Array<MovieBySearch> => {\r\n            switch (type) {\r\n                case \"popularity\":\r\n                    return listData.sort((a:MovieBySearch,b:MovieBySearch) => b.popularity - a.popularity);\r\n                case \"vote\":\r\n                    return listData.sort((a:MovieBySearch,b:MovieBySearch) => b.vote_average - a.vote_average);\r\n                case \"reverse\":\r\n                    return listData.reverse();\r\n                default:\r\n                    return [...favouritesMovies.listData]\r\n            }\r\n        };\r\n    const FavouriteMoviesList: Array<ReactNode> =  sort().map(item => <FavouriteMovieItem key={`key_${item.id}`}\r\n                                                                         id={item.id}\r\n                                                                         title={item.title}\r\n                                                                         poster={item.backdrop_path}\r\n                                                                         removeFromFavourite={removeFromFavourite}\r\n    />);\r\n\r\n    return (\r\n        <ListWrapperSC>\r\n            <div>\r\n                <PageTitleSC>Your Picked Movies:</PageTitleSC>\r\n                <SortSC>Sorted by: <select onChange={(e:React.FormEvent<HTMLSelectElement>) => setType(e.currentTarget.value)}>\r\n                    <option value='default'>Newest</option>\r\n                    <option value='reverse'>Oldest</option>\r\n                    <option value='popularity'>Most popular</option>\r\n                    <option value='vote'>Votes</option>\r\n                </select></SortSC>\r\n            </div>\r\n            <ListSC>\r\n                {FavouriteMoviesList}\r\n            </ListSC>\r\n        </ListWrapperSC>\r\n    )\r\n};","import {MovieBySearch} from \"../types/types\";\r\nimport { InferActionsTypes} from \"./RootReducer\";\r\n\r\ntype InitialStateType = typeof initialState\r\nconst initialState = {\r\n    favouritesMovies: {\r\n        listId: null as number | null,\r\n        listData: [] as Array<MovieBySearch>,\r\n        isFavourite: false,\r\n        isCreated: false,\r\n    },\r\n    isFetching: false,\r\n};\r\n\r\n const FavouriteMoviesReducer = (state = initialState, action: InferActionsTypes<typeof FMactions>): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'CREATE_FAVOURITE_MOVIES_LIST':\r\n            return {\r\n                ...state,\r\n                favouritesMovies: {\r\n                    ...state.favouritesMovies,\r\n                    listId: action.listId,\r\n                    isCreated: true\r\n                }\r\n            };\r\n        case 'SET_FAVOURITE_MOVIES_LIST':\r\n            return {\r\n                ...state,\r\n                favouritesMovies: {\r\n                    ...state.favouritesMovies,\r\n                    listData: action.listData,\r\n                }\r\n            };\r\n        case 'SET_AS_FAVOURITE':\r\n            return {\r\n                ...state,\r\n                favouritesMovies: {\r\n                    ...state.favouritesMovies,\r\n                    isFavourite: action.isFavourite,\r\n                }\r\n            };\r\n        case 'TOGGLE_FETCH':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        default: return {...state}\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const FMactions = {\r\n    createFavouriteMoviesList: (listId: number) => ({type: 'CREATE_FAVOURITE_MOVIES_LIST', listId} as const),\r\n    setFavouriteMoviesList: (listData: Array<MovieBySearch>) => ({type: 'SET_FAVOURITE_MOVIES_LIST', listData}  as const),\r\n    setFavouriteMovie: (isFavourite: boolean) => ({type: 'SET_AS_FAVOURITE', isFavourite}  as const),\r\n    toggleFetch: (isFetching: boolean) => ({type: 'TOGGLE_FETCH', isFetching}  as const),\r\n};\r\n\r\nexport default FavouriteMoviesReducer","import { useEffect, useState } from 'react'\r\n\r\nfunction useLocalStorage<T>(\r\n    key: string,\r\n    initialValue: T,\r\n): [T, (value: T) => void] {\r\n    // Get from local storage then\r\n    // parse stored json or return initialValue\r\n    const readValue = () => {\r\n        // Prevent build error \"window is undefined\" but keep keep working\r\n        if (typeof window === 'undefined') {\r\n            return initialValue\r\n        }\r\n\r\n        try {\r\n            const item = window.localStorage.getItem(key)\r\n            return item ? JSON.parse(item) : initialValue\r\n        } catch (error) {\r\n            console.warn(`Error reading localStorage key “${key}”:`, error)\r\n            return initialValue\r\n        }\r\n    }\r\n\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState<T>(readValue)\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = (value: T) => {\r\n        // Prevent build error \"window is undefined\" but keeps working\r\n        if (typeof window == 'undefined') {\r\n            console.warn(\r\n                `Tried setting localStorage key “${key}” even though environment is not a client`,\r\n            )\r\n        }\r\n\r\n        try {\r\n            // Allow value to be a function so we have the same API as useState\r\n            const newValue = value instanceof Function ? value(storedValue) : value\r\n\r\n            // Save to local storage\r\n            window.localStorage.setItem(key, JSON.stringify(newValue))\r\n\r\n            // Save state\r\n            setStoredValue(newValue)\r\n\r\n            // We dispatch a custom event so every useLocalStorage hook are notified\r\n            window.dispatchEvent(new Event('local-storage'))\r\n        } catch (error) {\r\n            console.warn(`Error setting localStorage key “${key}”:`, error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStoredValue(readValue())\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const handleStorageChange = () => {\r\n            setStoredValue(readValue())\r\n        }\r\n\r\n        // this only works for other documents, not the current one\r\n        window.addEventListener('storage', handleStorageChange)\r\n\r\n        // this is a custom event, triggered in writeValueToLocalStorage\r\n        window.addEventListener('local-storage', handleStorageChange)\r\n\r\n        return () => {\r\n            window.removeEventListener('storage', handleStorageChange)\r\n            window.removeEventListener('local-storage', handleStorageChange)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return [storedValue, setValue]\r\n}\r\n\r\nexport default useLocalStorage","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {FavouriteMoviePage} from \"./FavouriteMoviesPage\";\r\nimport {movieList} from \"../../API\";\r\nimport {CombinedStateType} from \"../../redux-store/RootReducer\";\r\nimport {MovieBySearch} from \"../../types/types\";\r\nimport {FMactions} from '../../redux-store/FavouriteMoviesReducer'\r\nimport {EmptyListSC, WrapperSC} from '../../styles/FavouriteMoviesSC';\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\n\r\nexport const LIST_KEY = 'Favourite Movies list id';\r\n\r\nexport const FavouriteMoviesPageContainer: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const favouritesMovies = useSelector((state: CombinedStateType) => state.FavouriteMoviesReducer.favouritesMovies);\r\n    const createFavouriteMoviesList = (listId: number) => dispatch(FMactions.createFavouriteMoviesList(listId));\r\n\r\n    const setFavouriteMoviesList = (moviesData: Array<MovieBySearch>) => dispatch(FMactions.setFavouriteMoviesList(moviesData));\r\n\r\n    const listId = +useLocalStorage(LIST_KEY, '')[0];\r\n\r\n    useEffect(() => {\r\n                (async () => {\r\n                    createFavouriteMoviesList(listId);\r\n                    const listData = await movieList.getList(listId);\r\n                    setFavouriteMoviesList(listData.results);\r\n                })();\r\n        },\r\n        []\r\n    );\r\n\r\n    const removeFromFavourite = async (flag: boolean, id: number) => {\r\n        await movieList[flag ? `removeItems` : `updateList`](favouritesMovies.listId!, id)\r\n    };\r\n\r\n    return (\r\n            favouritesMovies.listData.length ?\r\n                <WrapperSC>\r\n                    <FavouriteMoviePage removeFromFavourite={removeFromFavourite} favouritesMovies={favouritesMovies}/>\r\n                </WrapperSC> :\r\n                <EmptyListSC>you haven't added anything to your favorite movies list</EmptyListSC>\r\n\r\n    )\r\n};\r\n","import styled from 'styled-components'\r\nimport {WrapperSC} from \"../MoviePageSC\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nexport const WrapperSPSC = styled(WrapperSC)`\r\n    box-shadow: 1px 1px 50px 20px #000000;\r\n    border-radius: 15px 15px 0 0;\r\n    background: linear-gradient(270deg, rgba(20,20,20,1) 0%, rgba(0,0,0,1) 100%);\r\n`;\r\nexport const MainTitleSC = styled.h1`\r\n    color: #fff;\r\n    margin: 20px 0 2px 0;\r\n    padding: 0;\r\n`;\r\nexport const SubTitleSC = styled.div`\r\n    font-size: 18px;\r\n    color: #fff;\r\n    opacity: 80%;\r\n    padding-left: 5px;\r\n`;\r\nexport const BackDropSC = styled.div`\r\n    border-radius: 2px 15px 0 0;\r\n    background: url(${props => props.src ? props.src : ''}) center center;\r\n    height: 700px;\r\n    background-size: cover;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    position: relative;\r\n    box-shadow: inset 4px -36px 6px -30px #000000;\r\n`;\r\nexport const InfoWrapperSC = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 470px;\r\n    background: black;\r\n    position: relative;\r\n    z-index: 1;\r\n`;\r\nexport const InfoContentSC = styled.div`\r\n    position: absolute;\r\n    padding: 20px;\r\n    width: 600px;\r\n    margin: 0;\r\n`;\r\nexport const GradientSC = styled.div`\r\n    background: rgb(0,0,0);\r\n    background: linear-gradient(90deg, rgba(0, 0, 0, 1) 20%, rgba(255, 255, 255, 0) 60%);\r\n    height: 100%;\r\n    width: 900px;   \r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n`;\r\nexport const WatchTrailerButtonSC = styled.button`\r\n    width: 150px;\r\n    outline: none;\r\n    border: 1px solid ${`#a90000`};\r\n    background: transparent;\r\n    color: white;\r\n    height: 45px;\r\n    margin-top: 40px;\r\n    margin-left: 40px;\r\n    position: relative;\r\n    border-radius: 5px;\r\n    &:hover {\r\n      cursor: pointer; \r\n    }\r\n`;\r\nexport const ToggleFavouriteSC = styled(WatchTrailerButtonSC)`\r\n    color: ${props => props.disabled ? 'rgba(255,255,255,0.5)' : 'white'};\r\n`;\r\nexport const DescriptionSC = styled.div`\r\n      color: #fff;  \r\n      font-size: 20px;\r\n      text-shadow: 5px 3px 9px rgba(0, 0, 0, 1);\r\n      padding-left: 5px;\r\n      font-weight: 500;\r\n`;\r\nexport const BackdropSectionSC = styled.div`\r\n    display: flex;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    box-shadow: 1px 13px 20px 5px #000000;\r\n`;\r\nexport const VoteContainerSC = styled.div`\r\n    margin: 10px 0;\r\n    color: white;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    padding-left: 5px;\r\n`;\r\nexport const VoteScoreCS = styled.span`\r\n    color: ${props => {\r\n    if (props.score <= 3.9) {\r\n        return '#FF0000'\r\n    } else if (props.score >= 4 && props.score <= 5.9) {\r\n        return '#FF6600'\r\n    } else if (props.score >= 6 && props.score <= 7.9) {\r\n        return '#FFFF00'\r\n    } else if (props.score >= 8 && props.score <= 9.9) {\r\n        return '#66E100'\r\n    } else {\r\n        return '#00CC00'\r\n    }\r\n}}\r\n`;\r\nexport const GenresSC = styled.div`\r\n    padding-left: 5px;\r\n    margin-top: 10px;\r\n`;\r\nexport const GenreSC = styled(NavLink)`\r\n    opacity: 80%;\r\n    padding-left: 5px;\r\n    color: #ffffff;\r\n    &:hover {\r\n    opacity: 100%;\r\n    color: ${`#a90000`};\r\n    }\r\n`;\r\nexport const ProductionSC = styled.span`\r\n    font-size: 12px;\r\n    margin-left: 4px;\r\n    color: #fff;\r\n    opacity: 80%;\r\n`;\r\nexport const ProductionContainerSC = styled(GenresSC)`\r\n    margin-bottom: 10px;\r\n`;\r\nexport const RecommendedMoviesListSC = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin-top: 20px;\r\n    max-width: 1700px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const SimilarMoviesItemSC = styled(NavLink)`\r\n    margin: 4px 12px;\r\n    background: url(${props => props.poster}); \r\n    background-size: cover;\r\n    height: 270px;\r\n    width: 180px;\r\n    &:hover {\r\n    transform: scale(1.1,1.1);\r\n    transition: .2s ease;\r\n    }\r\n    transition: .2s ease;\r\n`;\r\nexport const RecommendedTitleSC = styled.div`\r\n    color: #ffffff;\r\n    font-size: 24px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-weight: 500;\r\n    margin-bottom: 30px;\r\n`;\r\n//video\r\nexport const ModalWrappSC = styled.div`\r\n    top: 0;\r\n    position: fixed;\r\n    height: 100vh;\r\n    width: 100%;\r\n    z-index: 10;\r\n    background: rgba(0,0,0, 0.9);\r\n`;\r\nexport const VideoFrameSC = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin-right: -50%;\r\n    transform: translate(-50%, -50%)\r\n`;\r\nexport const VideoCloseSC = styled.div`\r\n    top: 14px;\r\n    right: -54px;\r\n   width: 32px;\r\n   height: 32px;\r\n   position: absolute;\r\n   opacity: 70%;\r\n   &:before {\r\n        content: '';\r\n        width: 2px;\r\n        height: 33px;\r\n        background: white;\r\n        left: 15px;\r\n        position: absolute;\r\n        transform: rotate(45deg);\r\n   }\r\n   &:after {\r\n        content: '';\r\n        width: 2px;\r\n        height: 33px;\r\n                left: 15px;\r\n        background: white;\r\n        position: absolute;\r\n        transform: rotate(-45deg);\r\n   }\r\n   &:hover{\r\n    opacity: 1;\r\n    }\r\n`;\r\n// FOOTER\r\nexport const FooterSC = styled.footer`\r\n    background: ${`#292828`};\r\n    padding: 20px;\r\n`;\r\nexport const SocialLinksSC = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100%;\r\n    color: white;\r\n    max-width: 100px;\r\n    width: 100%;\r\n    justify-content: space-around;\r\n`;\r\nexport const LinkSC = styled.a`\r\n    color: white;\r\n    display: block;\r\n`;\r\nexport const FooterWrapperSC = styled.div`\r\n    max-width: 1400px;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\nexport const FooterInfoSC = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\nexport const CreatedSC = styled.span`\r\n    color: white;\r\n    opacity: 80%;\r\n    font-weight: 500;\r\n    margin: 4px 0;\r\n`;\r\nexport const MailSC = styled.span`\r\n    color: white;\r\n    font-weight: 500;\r\n`;","import React from 'react'\r\nimport {SimilarMoviesItemSC,} from \"./SelectedMoviePageSC\";\r\nimport {movie} from \"../../../API\";\r\nimport {MovieBySearch, SelectedMovieType} from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n    poster: string\r\n    movieId: number\r\n    setSimilarMovieData: (similarMovieData: Array<MovieBySearch>) => void\r\n    setCurrentMovie: (selectedMovie: SelectedMovieType) => void\r\n}\r\n\r\nexport const SimilarMovie: React.FC<PropsType> = (props) => {\r\n    const {poster, movieId, setSimilarMovieData, setCurrentMovie} = props;\r\n\r\n    const src: string = `https://image.tmdb.org/t/p/w300/${poster}`;\r\n\r\n    const selectMovie = () => {\r\n        movie.getSelectedFilm(movieId)\r\n            .then((response: any) => setCurrentMovie(response))\r\n            .then(() => {\r\n                movie.getSimilarMovies(movieId)\r\n                    .then((similar: any) => setSimilarMovieData((similar.results).splice(0, 8)))\r\n            })\r\n    };\r\n    return (\r\n        <SimilarMoviesItemSC to={`${movieId}`}\r\n                             poster={poster ? src : 'https://prikolnye-kartinki.ru/img/picture/Sep/23/9d857169c84422fdaa28df62667a1467/8.jpg'}\r\n                             onClick={() => selectMovie()}/>\r\n    )\r\n};\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ModalWrappSC, VideoCloseSC, VideoFrameSC} from \"./SelectedMoviePageSC\";\r\nimport {movie} from \"../../../API\";\r\nimport {actions} from \"../../../redux-store/MoviePageReducer\";\r\nimport {CombinedStateType} from \"../../../redux-store/RootReducer\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    movieId: number\r\n}\r\n\r\ntype PropsType = OwnPropsType\r\n\r\nexport const ModalVideo: React.FC<PropsType> = (props) => {\r\n    const {movieId} = props;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const isTrailer = useSelector((state: CombinedStateType) => state.MoviePageReducer.isTrailerOpen);\r\n    const videoKey = useSelector((state: CombinedStateType) => state.MoviePageReducer.videoKey);\r\n\r\n    const setVideoKey = (videoKey: string) => dispatch(actions.setVideoKey(videoKey));\r\n    const openModuleVideo = () => dispatch(actions.openModuleVideo());\r\n\r\n    useEffect(() => {\r\n        (async ()=>{\r\n            try {\r\n                const video = await movie.getVideo(movieId);\r\n                    setVideoKey(video.results\r\n                        .sort(item => item.name.includes('Trailer') ? -1 : 1)[0].key)\r\n            } catch(e) {\r\n                alert(e)\r\n            }\r\n        })()\r\n        }, [movieId]\r\n    );\r\n   const src = `https://www.youtube.com/embed/${videoKey}?mute=1&autoplay=1`;\r\n    return (\r\n        isTrailer ?\r\n            <ModalWrappSC onClick={openModuleVideo}>\r\n                <VideoFrameSC>\r\n                    <iframe width='1300' height='700' src={src}\r\n                            frameBorder=\"0\"\r\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                            allowFullScreen>\r\n                    </iframe>\r\n                    <VideoCloseSC/>\r\n                </VideoFrameSC>\r\n            </ModalWrappSC>\r\n        : <></>\r\n    )\r\n};\r\n","import styled from 'styled-components'\r\n\r\n\r\nexport const PersonAvatarSC = styled.div`\r\n  width: 140px;\r\n  border-radius: 50%;\r\n  height: 140px;\r\n  background: url(${props => props.src}) center center;\r\n  background-size: cover;\r\n`;\r\nexport const AvatarWrapper = styled(PersonAvatarSC)`\r\n    background: ${`#131313`};\r\n`;\r\nexport const AvatarsListSC = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n`;\r\nexport const PersonSC = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 20px;\r\n    width: 140px;\r\n    align-items: center;\r\n`;\r\nexport const NameSC = styled.div`\r\n    color: #ffffff;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    padding-top: 3px;\r\n`;\r\nexport const CharacterSC = styled.div`\r\n    color: #ffffff;\r\n    width: 120px;\r\n    font-size: 14px;\r\n    text-align: center;\r\n    opacity: 0.8;\r\n`;\r\nexport const CastTitleSC = styled.div`\r\n    color: #ffffff;\r\n    font-size: 24px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-weight: 500;\r\n    margin-bottom: 30px;\r\n`;\r\nexport const CastWrapperSC = styled.div`\r\n    padding: 50px 0;\r\n    max-width: 1500px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    `;","import React, {useEffect} from 'react'\r\nimport {movie} from \"../../../API\";\r\nimport {AvatarsListSC, AvatarWrapper, PersonAvatarSC, PersonSC, CastTitleSC, CastWrapperSC, CharacterSC, NameSC} from \"./CastSC\";\r\nimport {CastPersonType} from \"../../../types/types\";\r\n\r\ntype MovieCastObjType = {\r\n    id: number,\r\n    profile_path: string,\r\n    character: string,\r\n    name: string\r\n}\r\n\r\ntype PropsType = {\r\n    movieCast: Array<MovieCastObjType>,\r\n    setCast: (castData: Array<CastPersonType>) => void,\r\n    movieId: number\r\n}\r\n\r\nexport const Cast: React.FC<PropsType> = (props) => {\r\n    const {movieCast, setCast, movieId} = props;\r\n\r\n    useEffect(() => {\r\n            (async () => {\r\n                const castData = await movie.getCastAndCrew(movieId);\r\n                setCast(castData.cast.splice(0, 8));\r\n            })()\r\n        }, [movieId]\r\n    );\r\n\r\n    const movieCastArr = movieCast.map(item => <CastPerson\r\n        key={item.id}\r\n        src={item['profile_path']}\r\n        character={item.character}\r\n        name={item.name}\r\n    />);\r\n\r\n    return (\r\n        <CastWrapperSC>\r\n            <CastTitleSC>MOVIE CAST</CastTitleSC>\r\n            <AvatarsListSC>\r\n                {movieCastArr}\r\n            </AvatarsListSC>\r\n        </CastWrapperSC>\r\n    )\r\n\r\n};\r\n\r\ntype PropsItemType = {\r\n    src: string,\r\n    character: string,\r\n    name: string\r\n}\r\n\r\nconst CastPerson: React.FC<PropsItemType> = (props) => {\r\n\r\n    const {src, character, name} = props;\r\n    const noSrc = 'https://socpartnerstvo.org/img/avatar_male.png';\r\n\r\n    return (\r\n        <PersonSC>\r\n            <AvatarWrapper>\r\n                <PersonAvatarSC src={src ? 'https://image.tmdb.org/t/p/w500' + src : noSrc}/>\r\n            </AvatarWrapper>\r\n            <NameSC>{name}</NameSC>\r\n            <CharacterSC>{character}</CharacterSC>\r\n        </PersonSC>\r\n    )\r\n};\r\n\r\n","import styled from 'styled-components'\r\nimport {CastTitleSC} from \"./CastSC\";\r\n\r\nexport const WrapperSC = styled.div`\r\n     background: ${`rgba(24,23,25,1)`};\r\n    width: 100%;\r\n    display: flex;\r\n    margin: 8px 0;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const AvatarSC = styled.img.attrs(props => ({\r\n    src: props.src,\r\n}))`\r\n    height: 32px;\r\n    min-width: 32px;\r\n    background-size: contain;\r\n    border-radius: 50%;\r\n`;\r\n\r\nexport const BodySC = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    width: 100%;\r\n    margin-left: 15px;\r\n`;\r\nexport const InfoSC = styled.div`\r\n    display: flex;\r\n`;\r\nexport const NameSC = styled.div`\r\n    margin-right: 8px;\r\n    font-weight: 700;\r\n    color: #ffffff;\r\n`;\r\nexport const DateSC = styled.div`\r\n    color: #ffffff;\r\n    opacity: 80%;\r\n\r\n`;\r\nexport const ContentSC = styled.div`\r\n    padding-top: 10px;\r\n    color: #ffffff;\r\n    opacity: 80%;\r\n    font-weight: 500;\r\n    line-height: 22px;\r\n    max-height: ${props => props.isHidden ? '100%' : '220px'};\r\n    overflow: hidden;\r\n`;\r\nexport const ToggleSC = styled.div`\r\n    padding: 5px 0;\r\n    margin-right: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    font-weight: 500;\r\n    color: ${`#cbcbcb`};\r\n    &:hover {\r\n        color: #fff;\r\n        cursor: pointer;        \r\n    }\r\n    background: ${`#2e2d2d`};\r\n`;\r\nexport const ReviewSectionSC = styled.div`\r\n    padding: 50px 0;\r\n    width: 700px;\r\n    margin: 0 auto;\r\n`;\r\nexport const ReviewTitleSC = styled(CastTitleSC)`\r\n`;\r\nexport const PaginationSC = styled.div`\r\n    height: 50px;\r\n    width: 100%;\r\n`;\r\nexport const PaginationNumberSC = styled.span`\r\n    height: 50px;\r\n    color: ${props => props.isActive};\r\n    font-size: 18px;\r\n    margin: 0 1px;\r\n    font-weight: 500;\r\n`;\r\n\r\nexport const NoCommSC = styled.div`\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 20px;\r\n    color: #fff;\r\n`;\r\n","import React, {useEffect, useRef, useState} from 'react'\r\nimport {AuthorDetailsType, ReviewDetails} from '../../../types/types';\r\nimport {movie,} from \"../../../API\";\r\nimport {\r\n    AvatarSC,\r\n    BodySC,\r\n    ContentSC,\r\n    DateSC,\r\n    InfoSC,\r\n    NameSC, NoCommSC, PaginationNumberSC, PaginationSC,\r\n    ReviewSectionSC,\r\n    ReviewTitleSC,\r\n    ToggleSC,\r\n    WrapperSC\r\n} from \"./ReviewsSC\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {CombinedStateType} from \"../../../redux-store/RootReducer\";\r\nimport {actions} from \"../../../redux-store/MoviePageReducer\";\r\n\r\ntype PropsReviewsType = {\r\n    setReviews: (reviews: Array<ReviewDetails>, totalPages: number) => void\r\n    movieId: number\r\n}\r\n\r\nconst Reviews: React.FC<PropsReviewsType> = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const reviews = useSelector((state: CombinedStateType) => state.MoviePageReducer.reviews);\r\n\r\n    const setCurrentReviewPage = (reviewPage: number) => dispatch(actions.setCurrentReviewPage(reviewPage));\r\n\r\n    const {setReviews, movieId} = props;\r\n    useEffect(() => {\r\n            movie.getReviews(movieId, reviews.currentPage)\r\n                .then(response => {\r\n                    setReviews(response.results, response['total_pages']);\r\n                })\r\n        }, [movieId]\r\n    );\r\n\r\n    const reviewsList = reviews.data.map((item, index) => <Review key={index}\r\n                                                                      author={item.author}\r\n                                                                      date={item['created_at']}\r\n                                                                      author_details={item.author_details}\r\n                                                                      content={item.content}\r\n    />);\r\n\r\n    const myRef = useRef(null as any);\r\n\r\n    const scrollTo = (): void => myRef.current.scrollIntoView();\r\n\r\n    const selectPage = (page: number): void => {\r\n        scrollTo();\r\n        setCurrentReviewPage(page);\r\n        reviews.currentPage !== page &&\r\n        movie.getReviews(movieId, page)\r\n            .then(response => {\r\n                setReviews(response.results, response['total_pages']);\r\n            })\r\n    };\r\n\r\n    let totalPagesArr = [];\r\n    const totalPages = reviews.totalPages;\r\n\r\n    if (totalPages)\r\n        for (let i = 1; i <= totalPages; i++) {\r\n            totalPagesArr.push(i)\r\n        }\r\n\r\n    totalPagesArr = totalPagesArr.map((item, index) =>\r\n        <PaginationNumberSC key={index}\r\n                            onClick={() => selectPage(item)}\r\n                            isActive={item === reviews.currentPage ? 'red' : 'white'}>\r\n            {item}\r\n        </PaginationNumberSC>);\r\n\r\n    return (\r\n        <ReviewSectionSC>\r\n            <ReviewTitleSC ref={myRef}>\r\n                COMMENTARIES\r\n            </ReviewTitleSC>\r\n            {\r\n                reviews.data.length ?\r\n                    <>\r\n                        {reviewsList}\r\n                        <PaginationSC>\r\n                            {totalPagesArr}\r\n                        </PaginationSC>\r\n                    </> :\r\n                    <NoCommSC>\r\n                        No Commentaries :(\r\n                    </NoCommSC>\r\n            }\r\n        </ReviewSectionSC>\r\n    )\r\n};\r\n\r\nexport const ReviewsMemo = React.memo(Reviews);\r\n\r\ntype ItemPropsType = {\r\n    author: string\r\n    date: string\r\n    author_details: AuthorDetailsType\r\n    content: string\r\n}\r\n\r\nconst Review: React.FC<ItemPropsType> = React.memo(props => {\r\n    const {author, date, author_details, content} = props;\r\n    const src = 'https://image.tmdb.org/t/p/original/' + author_details.avatar_path;\r\n    const noSrc = 'https://socpartnerstvo.org/img/avatar_male.png';\r\n\r\n    const [isOpen, setStyle] = useState(false);\r\n\r\n    return (\r\n        <WrapperSC>\r\n            <AvatarSC src={author_details.avatar_path && author_details.avatar_path.includes('.com') ?\r\n                noSrc : author_details.avatar_path ? src : noSrc}/>\r\n            <BodySC>\r\n                <InfoSC>\r\n                    <NameSC>\r\n                        {author}\r\n                    </NameSC>\r\n                    <DateSC>\r\n                        {date.slice(0, date.indexOf('T'))}\r\n                    </DateSC>\r\n                </InfoSC>\r\n                <ContentSC isHidden={isOpen}>\r\n                    {content}\r\n                </ContentSC>\r\n                {\r\n                    content.length > 1500 ?\r\n                        <ToggleSC onClick={() => setStyle(!isOpen)}>\r\n                            {isOpen ? 'Hide' : 'Show more'}\r\n                        </ToggleSC> : ''\r\n                }\r\n            </BodySC>\r\n        </WrapperSC>\r\n    )\r\n});\r\n\r\n","import React from 'react'\r\nimport {\r\n    BackdropSectionSC,\r\n    CreatedSC,\r\n    DescriptionSC,\r\n    FooterInfoSC,\r\n    FooterSC,\r\n    FooterWrapperSC,\r\n    GenreSC,\r\n    GenresSC,\r\n    InfoContentSC,\r\n    InfoWrapperSC,\r\n    LinkSC,\r\n    MailSC,\r\n    ProductionSC,\r\n    ProductionContainerSC,\r\n    RecommendedMoviesListSC,\r\n    RecommendedTitleSC,\r\n    SocialLinksSC,\r\n    BackDropSC,\r\n    GradientSC,\r\n    MainTitleSC,\r\n    VoteContainerSC,\r\n    VoteScoreCS,\r\n    SubTitleSC,\r\n    WrapperSPSC,\r\n    WatchTrailerButtonSC,\r\n    ToggleFavouriteSC\r\n} from \"./SelectedMoviePageSC\";\r\nimport {SimilarMovie} from \"./SimilarMovie\";\r\nimport {ModalVideo} from \"./ModalVideo\";\r\nimport {Cast} from \"./Cast\";\r\nimport {ReviewsMemo} from \"./Reviews\";\r\nimport {FaGithub, FaInstagram, FaLinkedin} from 'react-icons/fa';\r\nimport {movieList} from \"../../../API\";\r\nimport {\r\n    CastPersonType,\r\n    GenresType,\r\n    MovieBySearch,\r\n    ProdactionCompaniesType,\r\n    ReviewDetails,\r\n    SelectedMovieType\r\n} from '../../../types/types';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {CombinedStateType} from \"../../../redux-store/RootReducer\";\r\nimport {actions} from \"../../../redux-store/MoviePageReducer\";\r\nimport {FMactions} from \"../../../redux-store/FavouriteMoviesReducer\";\r\nimport useLocalStorage from \"../../../hooks/useLocalStorage\";\r\nimport {LIST_KEY} from \"../../FavouritesMoviesPage/FavouriteMoviesPageContainer\";\r\n\r\ntype PropsType = {\r\n    movieId: number\r\n}\r\n\r\nexport const SelectedMoviePage: React.FC<PropsType> = (props) => {\r\n    const {movieId} = props;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const selectedMovieData = useSelector((state: CombinedStateType) => state.MoviePageReducer.selectedMovieData);\r\n    const similarMoviesData = useSelector((state: CombinedStateType) => state.MoviePageReducer.similarMoviesData);\r\n    const collection = useSelector((state: CombinedStateType) => state.MoviePageReducer.collection);\r\n    const movieCast = useSelector((state: CombinedStateType) => state.MoviePageReducer.movieCast);\r\n    const favouritesMovies = useSelector((state: CombinedStateType) => state.FavouriteMoviesReducer.favouritesMovies);\r\n    const addedToListInProgress = useSelector((state: CombinedStateType) => state.FavouriteMoviesReducer.isFetching);\r\n\r\n    const openModuleVideo = () => dispatch(actions.openModuleVideo());\r\n    const setCurrentMovie = (selectedMovie: SelectedMovieType) => dispatch(actions.setCurrentMovie(selectedMovie));\r\n    const setSimilarMovieData = (similarMovieData: Array<MovieBySearch>) => dispatch(actions.setSimilarMovieData(similarMovieData));\r\n    const setCast = (castData: Array<CastPersonType>) => dispatch(actions.setCast(castData));\r\n    const setReviews = (reviewsData: Array<ReviewDetails>, reviewsTotalPages: number) => dispatch(actions.setReviews(reviewsData, reviewsTotalPages));\r\n    const createFavouriteMoviesList = (listId: number) => dispatch(FMactions.createFavouriteMoviesList(listId));\r\n    const setFavouriteMoviesList = (favouriteData: Array<MovieBySearch>) => dispatch(FMactions.setFavouriteMoviesList(favouriteData));\r\n    const setFavouriteMovie = (flag: boolean) => dispatch(FMactions.setFavouriteMovie(flag));\r\n    const toggleFetch = (isFetching: boolean) => dispatch(FMactions.toggleFetch(isFetching));\r\n\r\n    const {\r\n        title, original_title, vote_average, overview, backdrop_path,\r\n        status, genres, production_companies, release_date\r\n    } = selectedMovieData;\r\n\r\n    const baseSrc = 'https://image.tmdb.org/t/p/original/';\r\n    const backdrop = `${baseSrc}${backdrop_path}`;\r\n\r\n    const similarMovies = similarMoviesData.map((item, index) => <SimilarMovie\r\n        poster={item['poster_path']}\r\n        key={index}\r\n        movieId={item.id}\r\n        setSimilarMovieData={setSimilarMovieData}\r\n        setCurrentMovie={setCurrentMovie}\r\n    />);\r\n    const genresFunc = (data = [] as GenresType): React.ReactNode => {\r\n        let genresArr: Array<string> = [];\r\n        data.forEach(item => genresArr.push(item.name));\r\n        return genresArr.join(', ').split(' ').map((item, index) => <GenreSC key={index}\r\n                                                                             to={`/${item}`}>{item}</GenreSC>);\r\n    };\r\n    const production = (data = [] as ProdactionCompaniesType): React.ReactNode => {\r\n        let arr: Array<string> = [];\r\n        data.forEach(item => arr.push(item.name));\r\n        return arr.join(', ').split(' ').map((item, index) => <ProductionSC key={index} to='/'>{item}</ProductionSC>);\r\n    };\r\n    const releaseDate = (releaseDate = ''): string => releaseDate.slice(0, 4);\r\n\r\n    const SetInLocalStorage = (listId: string) => useLocalStorage(LIST_KEY, listId);\r\n\r\n    const addToFavourite = (listId = favouritesMovies.listId): void => {\r\n        favouritesMovies.listId ?\r\n            (async () => {\r\n                if (listId) {\r\n                    toggleFetch(true);\r\n                    await movieList.updateList(listId, movieId);\r\n                    const listData = await movieList.getList(listId);\r\n                    setFavouriteMoviesList(listData.results);\r\n                    setFavouriteMovie(true);\r\n                    toggleFetch(false);\r\n                }\r\n            })() :\r\n            (async () => {\r\n                const list = await movieList.setList('test');\r\n                createFavouriteMoviesList(list.data.id);\r\n                const listId = await list.data.id;\r\n                SetInLocalStorage(list.data.id);\r\n                addToFavourite(listId)\r\n            })()\r\n    };\r\n    const removeFromFavourite = (): void => {\r\n        (async () => {\r\n            if (favouritesMovies.listId) {\r\n                toggleFetch(true);\r\n                await movieList.removeItems(favouritesMovies.listId, movieId);\r\n                const listData = await movieList.getList(favouritesMovies.listId);\r\n                setFavouriteMoviesList(listData.results);\r\n                setFavouriteMovie(false)\r\n                toggleFetch(false);\r\n            }\r\n        })()\r\n    };\r\n\r\n    return (\r\n        <WrapperSPSC>\r\n            <ModalVideo movieId={movieId}/>\r\n            <BackdropSectionSC>\r\n                <InfoWrapperSC>\r\n                    <InfoContentSC>\r\n                        <MainTitleSC>\r\n                            {title}\r\n                        </MainTitleSC>\r\n                        <SubTitleSC>\r\n                            {releaseDate(release_date)}, {original_title}\r\n                        </SubTitleSC>\r\n                        {\r\n                            status === 'Released' ?\r\n                                <VoteContainerSC>\r\n                                    VOTE AVERAGE: <VoteScoreCS score={vote_average}>{vote_average}</VoteScoreCS>\r\n                                </VoteContainerSC> :\r\n                                <VoteContainerSC>{status}</VoteContainerSC>\r\n                        }\r\n                        {\r\n                            production(production_companies) ?\r\n                                <ProductionContainerSC>\r\n                                    {production(production_companies)}\r\n                                </ProductionContainerSC> :\r\n                                ''\r\n                        }\r\n                        <DescriptionSC>\r\n                            {overview}\r\n                        </DescriptionSC>\r\n                        <GenresSC>\r\n                            {\r\n                                collection.data?.id ?\r\n                                    <GenreSC to='/'>{collection.data.name},</GenreSC> :\r\n                                    ''\r\n                            }\r\n                            {genresFunc(genres)}\r\n                        </GenresSC>\r\n                        <WatchTrailerButtonSC onClick={openModuleVideo}>\r\n                            WATCH TRAILER\r\n                        </WatchTrailerButtonSC>\r\n                        {\r\n                            favouritesMovies.isFavourite ?\r\n                                <ToggleFavouriteSC onClick={() => removeFromFavourite()} disabled={addedToListInProgress}>\r\n                                    REMOVE FROM LIST\r\n                                </ToggleFavouriteSC> :\r\n                                <ToggleFavouriteSC onClick={() => addToFavourite()} disabled={addedToListInProgress}>\r\n                                    ADD TO LIST\r\n                                </ToggleFavouriteSC>\r\n                        }\r\n                    </InfoContentSC>\r\n                </InfoWrapperSC>\r\n                <BackDropSC src={backdrop}>\r\n                    <GradientSC>\r\n                    </GradientSC>\r\n                </BackDropSC>\r\n            </BackdropSectionSC>\r\n            <Cast movieId={+movieId}\r\n                  setCast={setCast}\r\n                  movieCast={movieCast}\r\n            />\r\n            <RecommendedMoviesListSC>\r\n                <RecommendedTitleSC>\r\n                    RECOMMENDED MOVIES\r\n                </RecommendedTitleSC>\r\n                {similarMovies}\r\n            </RecommendedMoviesListSC>\r\n            <ReviewsMemo movieId={+movieId} setReviews={setReviews}/>\r\n            <FooterSC>\r\n                <FooterWrapperSC>\r\n                    <FooterInfoSC>\r\n                        <SocialLinksSC>\r\n                            <LinkSC target=\"_blank\" href={'https://github.com/crazze16'}>\r\n                                <FaGithub size={'24px'}/>\r\n                            </LinkSC>\r\n                            <LinkSC target=\"_blank\" href={'https://www.instagram.com/because_nekoz/'}>\r\n                                <FaInstagram size={'24px'}/>\r\n                            </LinkSC>\r\n                            <LinkSC target=\"_blank\" href={'https://www.linkedin.com/in/vladimir-nekoz-099173204/'}>\r\n                                <FaLinkedin size={'24px'}/>\r\n                            </LinkSC>\r\n                        </SocialLinksSC>\r\n                        <CreatedSC>created by</CreatedSC>\r\n                        <MailSC>vladimirnekoz16@gmail.com</MailSC>\r\n                    </FooterInfoSC>\r\n                </FooterWrapperSC>\r\n            </FooterSC>\r\n        </WrapperSPSC>\r\n    )\r\n};","import React, {useEffect} from 'react'\r\nimport {movie, movieList} from \"../../../API\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../../redux-store/MoviePageReducer\";\r\nimport {FMactions} from \"../../../redux-store/FavouriteMoviesReducer\";\r\n\r\nimport {useParams} from \"react-router\";\r\nimport {CollectionType, MovieBySearch, SelectedMovieType} from \"../../../types/types\";\r\nimport useLocalStorage from \"../../../hooks/useLocalStorage\";\r\nimport {LIST_KEY} from \"../../FavouritesMoviesPage/FavouriteMoviesPageContainer\";\r\nimport { SelectedMoviePage } from './SelectedMoviePage';\r\n\r\n\r\nexport const SelectedMoviePageContainer: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setCurrentMovie = (selectedMovie: SelectedMovieType) => dispatch(actions.setCurrentMovie(selectedMovie));\r\n    const setCollectionId = (collectionId: number | null) => dispatch(actions.setCollectionId(collectionId));\r\n    const setCollectionData = (collectionData: CollectionType) => dispatch(actions.setCollectionData(collectionData));\r\n    const setSimilarMovieData = (similarMovieData: Array<MovieBySearch>) => dispatch(actions.setSimilarMovieData(similarMovieData));\r\n    const setFavouriteMoviesList = (listData: Array<MovieBySearch>) => dispatch(FMactions.setFavouriteMoviesList(listData));\r\n    const setFavouriteMovie = (isFavourite: boolean) => dispatch(FMactions.setFavouriteMovie(isFavourite));\r\n    const createFavouriteMoviesList = (listId: number) => dispatch(FMactions.createFavouriteMoviesList(listId));\r\n\r\n    // @ts-ignore\r\n    const { movieId } = useParams();\r\n\r\n    const listId = +useLocalStorage(LIST_KEY, '')[0];\r\n\r\n    useEffect(() => {\r\n\r\n        (async () => {\r\n                //set selected data\r\n                const selectedFilm = await movie.getSelectedFilm(movieId);\r\n                setCurrentMovie(selectedFilm);\r\n\r\n                //set similar data\r\n                const similar = await movie.getSimilarMovies(movieId);\r\n                setSimilarMovieData((similar.results).splice(0, 8));\r\n\r\n                //set favourite data\r\n                await createFavouriteMoviesList(listId);\r\n                const listData = await movieList.getList(listId);\r\n                setFavouriteMoviesList(listData.results);\r\n\r\n                if (listData.results.some(id => id.id === +movieId)) {\r\n                    setFavouriteMovie(true);\r\n                } else {\r\n                    setFavouriteMovie(false);\r\n                }\r\n                //set collection\r\n                if (selectedFilm['belongs_to_collection']) {\r\n                    setCollectionId(selectedFilm['belongs_to_collection'].id);\r\n                    const collection = await movie.getCollection(selectedFilm['belongs_to_collection'].id);\r\n                    setCollectionData(collection);\r\n                } else {\r\n                    setCollectionId(null);\r\n                    setCollectionData({} as CollectionType);\r\n                }\r\n            })();\r\n        }, [movieId]\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <SelectedMoviePage movieId={+movieId}/>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n","import {NavigationBar} from \"./components/NavigationBar/NavigationBar\";\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {MoviePage} from \"./pages/MoviePage/MoviePage\";\nimport {BodySC, ContentSC, NavigationWrapperSC} from \"./styles/AppSC\";\nimport {FavouriteMoviesPageContainer} from \"./pages/FavouritesMoviesPage/FavouriteMoviesPageContainer\";\nimport  {SelectedMoviePageContainer} from \"./pages/MoviePage/SelectedMoviePage/SelectedMoviePageContainer\";\n\nfunction App() {\n    return (\n        <BodySC>\n            <NavigationWrapperSC>\n                <NavigationBar/>\n            </NavigationWrapperSC>\n            <ContentSC>\n                <Switch>\n                    <Route exact path='/Vapi' render={() => <MoviePage/>}/>\n                    <Route path='/home' render={() => <div>home</div>}/>\n                    <Route path='/about' render={() => <div>about</div>}/>\n                    <Route path='/Vapi/movie/:movieId?' render={() => <SelectedMoviePageContainer/>}/>\n                    <Route path='/favourite' render={() => <FavouriteMoviesPageContainer/>}/>\n                    <Route path=\"/404\" render={() => <div>not found 404</div>}/>\n                    <Redirect exact from=\"/\" to=\"/home\" />\n                    <Redirect to=\"/404\"/>\n                </Switch>\n            </ContentSC>\n        </BodySC>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport MoviePageReducer from \"./MoviePageReducer\";\r\nimport FavouriteMoviesReducer from \"./FavouriteMoviesReducer\";\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type CombinedStateType = ReturnType<RootReducerType>\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    MoviePageReducer,\r\n    FavouriteMoviesReducer\r\n});\r\n\r\n//explanation\r\n// type actionsType = ReturnType<SomeType<typeof actions>>;\r\n// type SomeType<T extends {[key: string]: (...args: any[]) => any}> = T extends {[key: string]: infer U} ? U : never\r\nexport type InferActionsTypes<T> = T extends { [key: string]: (...args: any[]) => infer U} ? U : never\r\n\r\nexport const store = createStore(rootReducer);\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {store} from \"./redux-store/RootReducer\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n\r\n    <BrowserRouter>\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </React.StrictMode>\r\n    </BrowserRouter>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}