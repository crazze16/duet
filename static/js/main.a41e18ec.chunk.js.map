{"version":3,"sources":["components/Header/styles.js","components/Header/index.tsx","pages/MoviePage/VMoviePageHeader/index.tsx","VMoviePageApi/index.ts","redux-store/MoviePageReducer.ts","pages/MoviePage/VMoviePageHeader/VMoviePageHeaderContainer/index.tsx","pages/MoviePage/VMoviePageBodyContainer/VMoviePageBody/VMoviePageItem/styles.js","pages/MoviePage/VMoviePageBodyContainer/VMoviePageBody/VMoviePageItem/index.tsx","pages/MoviePage/VMoviePageBodyContainer/VMoviePageBody/styles.js","pages/MoviePage/VMoviePageBodyContainer/VMoviePageBody/index.tsx","pages/MoviePage/styles.js","pages/MoviePage/index.tsx","fire.js","redux-store/AuthPageReducer.ts","components/User/index.jsx","components/Login/index.jsx","components/AuthForm/index.jsx","pages/Auth/index.jsx","styles/AppSC.js","styles/FavouriteMoviesSC.js","pages/FavouritesMoviesPage/FavouriteMovieItem.tsx","pages/FavouritesMoviesPage/FavouriteMoviesPage.tsx","redux-store/FavouriteMoviesReducer.ts","pages/FavouritesMoviesPage/FavouriteMoviesPageContainer.tsx","pages/MoviePage/VSelectedMoviePage/styles.js","pages/MoviePage/VSelectedMoviePage/VSimilarMovieItem.tsx","pages/MoviePage/VSelectedMoviePage/VModalVideo.tsx","pages/MoviePage/VSelectedMoviePage/CastSC.js","pages/MoviePage/VSelectedMoviePage/VCast.tsx","pages/MoviePage/VSelectedMoviePage/ReviewsSC.js","pages/MoviePage/VSelectedMoviePage/VReviews.tsx","pages/MoviePage/VSelectedMoviePage/VSelectedMoviePage.tsx","pages/MoviePage/VSelectedMoviePage/VSelectedMoviePageContainer.tsx","App.tsx","reportWebVitals.js","redux-store/index.ts","index.js"],"names":["NavSC","styled","nav","NavItemSC","NavLink","SpanSC","span","Navigation","props","to","VMoviePageHeader","onSearch","searchMovie","searchedMovie","type","onChange","event","target","value","onKeyPress","key","onClick","API_KEY","instance","axios","create","baseURL","list","headers","movie","currentPage","get","then","res","data","movieId","collectionId","listName","post","listId","MovieId","items","delete","initialState","resultMoviesData","selectedMovieData","similarMoviesData","totalPages","videoKey","isTrailerOpen","collection","id","movieCast","reviews","actions","searchedText","setMovieData","movieData","setSimilarMovieData","similarMovieData","setTotalPages","setCurrentPage","page","setCurrentMovie","selectedMovie","setCollectionId","setCollectionData","collectionData","setCast","castData","setReviews","reviewsData","reviewsTotalPages","setCurrentReviewPage","reviewPage","setVideoKey","openModuleVideo","MoviePageReducer","state","action","compose","connect","response","results","VMovieItemSC","div","VTitleSC","VMoviePageItem","poster","url","title","src","alt","height","width","VMoviesListSC","VMoviesPagesSC","isActive","VMoviePageBodyContainer","location","useLocation","resultMoviesDataArr","map","item","index","poster_path","pathname","selectPage","range","totalPagesArr","i","push","mapping","arr","extremePages","num","neighbours","rightLimit","length","filter","pagination","VWrapperSC","VMoviePage","fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ON_AUTH","OFF_AUTH","isAuth","AuthPageReducer","something","UserContainer","authFlag","onAuth","offAuth","handleLogout","useEffect","Login","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","autoFocus","required","e","AuthForm","useState","user","setUser","setEmailError","setPasswordError","clearErrors","authListener","auth","onAuthStateChanged","signOut","signInWithEmailAndPassword","catch","err","code","message","createUserWithEmailAndPassword","Auth","React","Component","BodySC","ContentSC","NavigationWrapperSC","ListWrapperSC","PageTitleSC","h1","ListSC","BackdropSC","bg","TitleSC","WrapperSC","SortSC","WrapperItemSC","HoveredSC","flag","content","EmptyListSC","p","FavouriteMovieItem","removeFromFavourite","hover","setHover","handler","setHandler","onMouseEnter","onMouseLeave","xmlns","fill","stroke","className","viewBox","d","FavouriteMoviePage","favouritesMovies","listData","setType","sort","a","b","popularity","vote_average","reverse","backdrop_path","currentTarget","isFavourite","isCreated","FMactions","createFavouriteMoviesList","setFavouriteMoviesList","setFavouriteMovie","FavouriteMoviesReducer","LIST_ID","localStorage","getItem","VWrapperSPSC","VMainMoviePageTitleSC","VSubMoviePageTitleSC","VBackDropSC","InfoSC","InfoContentSC","VGradientSC","WatchMovieSC","button","DescriptionSC","BackdropSectionSC","VoteAvarageSC","VoteScoreCS","score","GenresSC","GenreSC","ProductionSC","ProductionsSC","RecommendedMoviesListSC","SimilarMoviesItemSC","RecommendedTitleSC","ModalWrappSC","VideoFrameSC","VideoCloseSC","CollectionContainerSC","FooterSC","SocialSC","LinkSC","FooterWrapperSC","FooterInfoSC","CreatedSC","MailSC","VSimilarMovieItem","similar","splice","VModalVideoContainer","isTrailer","video","name","includes","alert","frameBorder","allow","allowFullScreen","CastAvatarSC","AvatarWrapper","AvatarsListSC","CastItemSC","NameSC","CharacterSC","CastTitleSC","CastWrapperSC","VCast","cast","movieCastArr","character","VCastItem","AvatarSC","img","attrs","DateSC","isHidden","ToggleSC","ReviewSectionSC","ReviewTitleSC","PaginationSC","PaginationItemSC","NoCommSC","VReviews","reviewsList","ReviewItem","author","date","author_details","myRef","useRef","current","scrollIntoView","ref","VReviewsMemo","memo","avatar_path","noSrc","isOpen","setStyle","slice","indexOf","VSelectedMoviePage","original_title","overview","status","genres","production_companies","release_date","backdrop","similarMovies","production","forEach","join","split","addToFavourite","setItem","releaseDate","genresArr","genresFunc","href","size","useParams","selectedFilm","some","App","path","render","exact","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a41e18ec.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport {NavLink} from \"react-router-dom\";\n\n\nexport const NavSC = styled.nav`\nposition: fixed;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nheight: 100%;\nalign-items: center;\nwidth: 90px;\nborder-right: 1px solid white;\nz-index: 9999;\nbackground: black;\n`;\n\nexport const NavItemSC = styled(NavLink)`\n\n`;\n\nexport const SpanSC = styled.span`\ncolor:#fff\n`;","import React from 'react';\nimport {NavItemSC, NavSC, SpanSC} from \"./styles\";\n\n\nexport const Navigation: React.FC = (props) => {\n    return (\n        <NavSC>\n            {/*<NavItemSC to=\"/home\"><FontAwesomeIcon icon={faHome} color='white' /> <SpanSC>Home</SpanSC></NavItemSC>*/}\n            <NavItemSC to=\"/Vapi\"><SpanSC>Main Page</SpanSC></NavItemSC>\n            {/*<NavItemSC to=\"/about\"><FontAwesomeIcon icon={faAddressCard} color='white' /><SpanSC> About</SpanSC></NavItemSC>*/}\n            <NavItemSC to=\"/favourite\"><SpanSC> Favourite Movies</SpanSC></NavItemSC>\n        </NavSC>\n    )\n};","import React from 'react'\r\n\r\ntype PropsType = {\r\n    onSearch: () => void\r\n    searchMovie: (searchedMovie: string) => void\r\n    searchedMovie: string\r\n}\r\n\r\nexport const VMoviePageHeader: React.FC<PropsType> = (props) => {\r\n\r\n    const {onSearch, searchMovie, searchedMovie} = props;\r\n\r\n    const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        searchMovie(event.target.value)\r\n    };\r\n\r\n    const onKeyHandler = (event: React.KeyboardEvent) => {\r\n        if(event.key === 'Enter') {\r\n            onSearch();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" onChange={onInputChange} onKeyPress={onKeyHandler} value={searchedMovie}/>\r\n            <button onClick={onSearch}>search</button>\r\n        </div>\r\n    )\r\n};","import axios from \"axios\";\r\nimport {CastPersonType, CollectionType, MovieBySearch, ReviewDetails, SelectedMovieType} from \"../types/types\";\r\n\r\nconst API_KEY = '5b9377492f02937b4e7cf2b6508ab19f';\r\nconst ACCESS_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYmYiOjE2MTYxNzA1NjEsImF1ZCI6IjViOTM3NzQ5MmYwMjkzN2I0ZTdjZjJiNjUwOGFiMTlmIiwianRpIjoiMjkxNDIzNyIsInNjb3BlcyI6WyJhcGlfcmVhZCIsImFwaV93cml0ZSJdLCJ2ZXJzaW9uIjoxLCJzdWIiOiI2MDJlN2ZiYjIyM2UyMDAwM2U5ODU2ODUifQ.BaLxvYlC7YsKu-tmY6dMv2nYkRzlbTeYElXT4V3e_Rw'\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/',\r\n\r\n});\r\nexport const list = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/4/list/',\r\n    headers: {\r\n        \"authorization\": `Bearer ${ACCESS_KEY}`,\r\n        \"content-type\": \"application/json;charset=utf-8\",\r\n\r\n    }\r\n});\r\n\r\n\r\nexport const movie = {\r\n    getFilmsBySearch(searchedMovie: string, currentPage: number) {\r\n        return instance.get<MoviesBySearchType>(`search/movie?api_key=${API_KEY}&language=en-US&query=${searchedMovie}&page=${currentPage}&include_adult=false`).then(res => res.data)\r\n    },\r\n    getSelectedFilm(movieId: number) {\r\n        return instance.get<SelectedMovieType>(`movie/${movieId}?api_key=${API_KEY}&language=en-US`).then(res => res.data)\r\n    },\r\n\r\n    getSimilarMovies(movieId: number) {\r\n        return instance.get<SimilarMoviesType>(`/movie/${movieId}/recommendations?api_key=${API_KEY}&language=en-US&page=1`).then(res => res.data)\r\n    },\r\n    getVideo(movieId: number) {\r\n        return instance.get<VideoType>(`/movie/${movieId}/videos?api_key=${API_KEY}&language=en-US`).then(res => res.data)\r\n    },\r\n    getCollection(collectionId: number) {\r\n        return instance.get<CollectionType>(`/collection/${collectionId}?api_key=${API_KEY}&language=en-US`).then(res => res.data)\r\n    },\r\n    getCastAndCrew(collectionId: number) {\r\n        return instance.get<CastType>(`/movie/${collectionId}/credits?api_key=${API_KEY}&language=en-US`).then(res => res.data)\r\n    },\r\n    getReviews(movieId: number, currentPage: number) {\r\n        return instance.get<ReviewsType>(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=${currentPage}`).then(res => res.data)\r\n    },\r\n    setList(listName: string) {\r\n        return list.post(`https://api.themoviedb.org/4/list`, {\r\n            \"name\": listName,\r\n            \"iso_639_1\": \"en\"\r\n        })\r\n    },\r\n    getList(listId: number) {\r\n        return list.get<ListType>(`${listId}?page=1&api_key=${API_KEY}`).then(res => res.data)\r\n    },\r\n    updateList(listId: number, MovieId: number) {\r\n        return list.post<ResponseType>(`${listId}/items`, {\r\n            items: [\r\n                {\r\n                    \"media_type\": \"movie\",\r\n                    \"media_id\": MovieId\r\n                },\r\n            ]\r\n        })\r\n    },\r\n    removeItems(listId: number, MovieId: number) {\r\n        return list.delete<ResponseType>(`${listId}/items`, {\r\n            data: {\r\n                items: [\r\n                    {\r\n                        \"media_type\": \"movie\",\r\n                        \"media_id\": MovieId\r\n                    }\r\n                ]\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport type MoviesBySearchType = {\r\n    page: number\r\n    results: Array<MovieBySearch>\r\n    total_pages: number\r\n    total_results: number\r\n}\r\ntype SimilarMoviesType = {\r\n    page: number\r\n    results: Array<MovieBySearch>\r\n    total_pages: number\r\n    total_results: number\r\n}\r\ntype VideoType = {\r\n    id: number\r\n    results: Array<{\r\n        id: string\r\n        iso_639_1: string\r\n        iso_3166_1: string\r\n        key: string\r\n        name: string\r\n        site: string\r\n        size: number\r\n        type: string\r\n    }>\r\n}\r\ntype CastType = {\r\n    id: number\r\n    cast: Array<CastPersonType>\r\n    crew: Array<object>\r\n}\r\ntype ReviewsType = {\r\n    id: number\r\n    page: number\r\n    results: Array<ReviewDetails>\r\n    total_pages: number\r\n    total_results: number\r\n}\r\ntype ListType = {\r\n    average_rating: number\r\n    backdrop_path: null | string\r\n    comments: object\r\n    created_by: {gravatar_hash: string, id: string, name: string, username: string}\r\n    description: string\r\n    id: number\r\n    iso_639_1: string\r\n    iso_3166_1: string\r\n    name: string\r\n    object_ids: object\r\n    page: number\r\n    poster_path: null | string\r\n    public: boolean\r\n    results: Array<MovieBySearch>\r\n    length: number\r\n    revenue: number\r\n    runtime: number\r\n    sort_by: string\r\n    total_pages: number\r\n    total_results: number\r\n}\r\ntype ResponseType = {\r\n    \"status_message\": string\r\n    \"results\": [\r\n        {\r\n            \"media_type\": string\r\n            \"media_id\": number\r\n            \"success\": boolean\r\n        }\r\n    ],\r\n    \"success\": boolean\r\n    \"status_code\": number\r\n}\r\n","import {\r\n    CastPersonType,\r\n    CollectionType,\r\n    MovieBySearch,\r\n    ReviewDetails,\r\n    SelectedMovieType\r\n} from \"../types/types\";\r\nimport { InferActionsTypes} from \"./index\";\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nlet initialState = {\r\n    searchedMovie: '',\r\n    resultMoviesData: [] as Array<MovieBySearch>,\r\n    selectedMovieData: {} as SelectedMovieType,\r\n    similarMoviesData: [] as Array<MovieBySearch>,\r\n    currentPage: null as number | null,\r\n    totalPages: null as number | null,\r\n    videoKey: null as string | null,\r\n    isTrailerOpen: false,\r\n    collection: {\r\n        id: null as number | null,\r\n        data: {} as CollectionType\r\n    },\r\n    movieCast: [] as Array<CastPersonType>,\r\n    reviews: {\r\n        data: [] as Array<ReviewDetails> ,\r\n        currentPage: 1,\r\n        totalPages: null as number | null,\r\n    },\r\n\r\n};\r\n\r\n const MoviePageReducer = (state = initialState, action: InferActionsTypes<typeof actions>): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'ON_SEARCH_MOVIE':\r\n            return {...state, searchedMovie: action.searchedText};\r\n        case 'SET_MOVIES':\r\n            return {...state, resultMoviesData: action.movieData};\r\n        case 'SET_CURRENT_MOVIE':\r\n            return {...state, selectedMovieData: action.selectedMovie};\r\n        case 'SET_TOTAL_PAGES':\r\n            return {...state, totalPages: action.totalPages};\r\n        case 'SET_SIMILAR_MOVIES':\r\n            return {...state, similarMoviesData: action.similarMovieData};\r\n        case 'SET_CURRENT_PAGE':\r\n            return {...state, currentPage: action.page};\r\n        case 'SET_COLLECTION_ID':\r\n            return {...state, collection: {...state.collection, id: action.collectionId}};\r\n        case 'SET_COLLECTION_DATA':\r\n            return {...state, collection: {...state.collection, data: action.collectionData}};\r\n        case 'SET_VIDEO_KEY':\r\n            return {...state, videoKey: action.videoKey};\r\n        case 'TOGGLE_VIDEO':\r\n            return {...state, isTrailerOpen: !state.isTrailerOpen};\r\n        case 'SET_CAST':\r\n            return {...state, movieCast: action.castData};\r\n        case 'SET_REVIEWS':\r\n            return {\r\n                ...state,\r\n                reviews: {\r\n                    ...state.reviews,\r\n                    data: action.reviewsData,\r\n                    totalPages: action.reviewsTotalPages\r\n                }\r\n            };\r\n        case 'SET_CURRENT_REVIEW_PAGE':\r\n            return {\r\n                ...state,\r\n                reviews: {\r\n                    ...state.reviews,\r\n                    currentPage: action.reviewPage,\r\n                }\r\n            };\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport const actions = {\r\n    searchMovie: (searchedText: string) => ({type: 'ON_SEARCH_MOVIE', searchedText} as const),\r\n    setMovieData:  (movieData: Array<MovieBySearch>)  => ({type: 'SET_MOVIES', movieData} as const),\r\n    setSimilarMovieData:  (similarMovieData: Array<MovieBySearch>) => ({type: 'SET_SIMILAR_MOVIES', similarMovieData} as const),\r\n    setTotalPages:  (totalPages: number) => ({type: 'SET_TOTAL_PAGES', totalPages} as const),\r\n    setCurrentPage:  (page: number) => ({type: 'SET_CURRENT_PAGE', page} as const),\r\n    setCurrentMovie:  (selectedMovie: SelectedMovieType)  => ({type: 'SET_CURRENT_MOVIE', selectedMovie} as const),\r\n    setCollectionId:  (collectionId: number | null)  => ({type: 'SET_COLLECTION_ID', collectionId} as const),\r\n    setCollectionData:  (collectionData: CollectionType) => ({type: 'SET_COLLECTION_DATA', collectionData} as const),\r\n    setCast:  (castData: Array<CastPersonType>) => ({type: 'SET_CAST', castData} as const),\r\n    setReviews:  (reviewsData: Array<ReviewDetails>, reviewsTotalPages: number) => ({type: 'SET_REVIEWS', reviewsData, reviewsTotalPages} as const),\r\n    setCurrentReviewPage:  (reviewPage: number) => ({type: 'SET_CURRENT_REVIEW_PAGE', reviewPage} as const),\r\n    setVideoKey:  (videoKey: string | null) => ({type: 'SET_VIDEO_KEY', videoKey} as const),\r\n    openModuleVideo:  () => ({type: 'TOGGLE_VIDEO'} as const),\r\n };\r\n\r\n\r\n\r\nexport default MoviePageReducer","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {VMoviePageHeader} from \"../index\";\r\nimport {movie} from \"../../../../VMoviePageApi\";\r\nimport {CombinedStateType} from '../../../../redux-store';\r\nimport {compose} from \"redux\";\r\nimport {actions} from \"../../../../redux-store/MoviePageReducer\";\r\nimport {MovieBySearch} from \"../../../../types/types\";\r\n\r\ntype MapStatePropsType = {\r\n    searchedMovie: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    setMovieData: (movieData: Array<MovieBySearch>) => void\r\n    setTotalPages: (totalPages: number) => void\r\n    setCurrentPage: (page: number) => void\r\n    searchMovie: (searchedMovie: string) => void\r\n}\r\n\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType\r\n\r\nconst VMoviePageHeaderAPI: React.FC<PropsType> = (props) => {\r\n\r\n    const {searchedMovie, setMovieData, setTotalPages, setCurrentPage} = props;\r\n\r\n   let onSearch = () => {\r\n        movie.getFilmsBySearch(searchedMovie, 1)\r\n            .then(response => {\r\n                setCurrentPage(1);\r\n                setMovieData(response.results);\r\n                setTotalPages(response['total_pages']);\r\n            });\r\n    };\r\n        return (\r\n            <div>\r\n                <VMoviePageHeader {...props} onSearch={onSearch}/>\r\n            </div>\r\n        )\r\n};\r\n\r\nlet mapStateToProps = (state: CombinedStateType):MapStatePropsType => ({\r\n    searchedMovie: state.MoviePageReducer.searchedMovie,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {...actions}))\r\n(VMoviePageHeaderAPI)\r\n\r\n","import styled from 'styled-components'\r\n\r\nexport const VMovieItemSC = styled.div`\r\n    height: 480px;\r\n    border: 1px solid black;\r\n    position: relative;\r\n    margin: 0 0 45px 0;\r\n    \r\n`;\r\nexport const VTitleSC = styled.div`\r\n    position: absolute;\r\n \r\n`;\r\n","import React from 'react'\r\nimport {VMovieItemSC, VTitleSC} from \"./styles\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    poster: string\r\n    url: string\r\n    id: number\r\n    title: string\r\n}\r\n\r\nexport const VMoviePageItem: React.FC<PropsType> = (props) => {\r\n    const {poster, url, id, title} = props;\r\n\r\n    let src = `https://image.tmdb.org/t/p/w300/${poster}`;\r\n    return (\r\n        <NavLink to={url + '/movie/' + id}>\r\n                <VMovieItemSC src={src}>\r\n                    <img\r\n                        src={poster ? src : 'https://prikolnye-kartinki.ru/img/picture/Sep/23/9d857169c84422fdaa28df62667a1467/8.jpg'}\r\n                        alt=\"\" height='100%' width='300'/>\r\n                    <VTitleSC>{title}</VTitleSC>\r\n                </VMovieItemSC>\r\n        </NavLink>\r\n    )\r\n};","import styled from 'styled-components'\r\n\r\nexport const VMoviesListSC = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    justify-content: space-around;\r\n`;\r\n\r\nexport const VMoviesPagesSC = styled.span`\r\n    font-weight: ${props => props.isActive};\r\n    margin-left: 2px;\r\n    color: #fff;\r\n`;\r\n\r\nexport const Page = styled.span`\r\ncolor: #fff;\r\n`;","import React from 'react'\r\nimport {VMoviePageItem} from \"./VMoviePageItem\";\r\nimport {connect} from \"react-redux\";\r\nimport {VMoviesListSC, VMoviesPagesSC} from \"./styles\";\r\nimport {movie} from \"../../../../VMoviePageApi\";\r\nimport {CombinedStateType} from \"../../../../redux-store\";\r\nimport {MovieBySearch, MovieItemType} from '../../../../types/types';\r\nimport {actions} from \"../../../../redux-store/MoviePageReducer\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\ntype MapStatePropsType = {\r\n    searchedMovie: string\r\n    totalPages: number | null\r\n    resultMoviesData: Array<MovieItemType>\r\n    currentPage: number | null\r\n\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    setCurrentPage: (page: number) => void\r\n    setMovieData: (MovieData: Array<MovieBySearch>) => void\r\n}\r\n\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType\r\n\r\n\r\n\r\nconst VMoviePageBody: React.FC<PropsType> = (props) => {\r\n\r\n    let location = useLocation();\r\n    const {totalPages, resultMoviesData, setCurrentPage, searchedMovie, setMovieData, currentPage} = props;\r\n\r\n    let resultMoviesDataArr = resultMoviesData.map((item, index) => <VMoviePageItem poster={item.poster_path}\r\n                                                                                    id={item.id}\r\n                                                                                    url={location.pathname}\r\n                                                                                    title={item.title}\r\n                                                                                    key={index}\r\n    /> );\r\n\r\n\r\n\r\n    const pagination = (range: number) => {\r\n        const totalPagesArr = [];\r\n        if(totalPages !== null)\r\n        for (let i = 1; i <= totalPages; i++) {\r\n            totalPagesArr.push(i)\r\n        }\r\n        const mapping = (arr: Array<number>) => arr.map(\r\n            (item, index) =>\r\n                <VMoviesPagesSC key={index} onClick={() => selectPage(item)} isActive={item === currentPage ? '800' : '500'}>\r\n                    {item}\r\n                </VMoviesPagesSC>\r\n        );\r\n        const extremePages = (num: number) => <VMoviesPagesSC onClick={() => selectPage(num)}>{num}</VMoviesPagesSC>;\r\n        const neighbours = (range - 1) / 2;\r\n        const rightLimit = totalPagesArr.length - neighbours;\r\n        if(currentPage !== null)\r\n        if (currentPage >= neighbours + 1 && currentPage < rightLimit) {\r\n            return (\r\n                <div>\r\n                    {\r\n                         currentPage >= neighbours + 2 ? extremePages(1) : ''\r\n                    }\r\n                    {\r\n                        mapping(totalPagesArr.filter(i => i >= currentPage - neighbours && i <= currentPage + neighbours))\r\n                    }\r\n                    {extremePages(totalPagesArr.length)}\r\n                </div>\r\n            )\r\n        } else if (currentPage < neighbours + 1) {\r\n            return (\r\n                <div>\r\n                    {\r\n                        mapping(totalPagesArr.filter(i => i <= range))\r\n                    }\r\n                    {currentPage !== null && extremePages(totalPagesArr.length)}\r\n                </div>\r\n            )\r\n        } else if (currentPage >= rightLimit) {\r\n            return (\r\n                <div>\r\n                    {extremePages(1)}\r\n                    {\r\n                        mapping(totalPagesArr.filter(i => i >= (totalPagesArr.length - neighbours * 2) && i <= totalPagesArr.length))\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    let selectPage = (item: number) => {\r\n        setCurrentPage(item);\r\n        movie.getFilmsBySearch(searchedMovie, item)\r\n            .then((response) => {\r\n                setMovieData(response.results);\r\n            })\r\n    };\r\n    return (\r\n        <>\r\n            {\r\n                pagination(9)\r\n            }\r\n            <VMoviesListSC>\r\n                {resultMoviesDataArr}\r\n            </VMoviesListSC>\r\n        </>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state: CombinedStateType): MapStatePropsType => ({\r\n    resultMoviesData: state.MoviePageReducer.resultMoviesData,\r\n    totalPages: state.MoviePageReducer.totalPages,\r\n    searchedMovie: state.MoviePageReducer.searchedMovie,\r\n    currentPage: state.MoviePageReducer.currentPage,\r\n});\r\n\r\nexport const VMoviePageBodyContainer = connect(mapStateToProps, {...actions})(VMoviePageBody);","import styled from 'styled-components'\r\n\r\nexport let VmaxWidth = 100;\r\n\r\nexport const VWrapperSC = styled.div`\r\n    max-width: ${VmaxWidth}%;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n`;\r\n\r\n","import React from 'react';\r\nimport VMoviePageHeaderAPI from \"./VMoviePageHeader/VMoviePageHeaderContainer\";\r\nimport {VMoviePageBodyContainer} from \"./VMoviePageBodyContainer/VMoviePageBody\";\r\nimport {VWrapperSC} from \"./styles\";\r\n\r\ntype PropsType = {}\r\n\r\n\r\nexport const VMoviePage: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <VWrapperSC>\r\n            <VMoviePageHeaderAPI/>\r\n            <VMoviePageBodyContainer/>\r\n        </VWrapperSC>\r\n    )\r\n};\r\n","import firebase from 'firebase';\n\n\nlet firebaseConfig = {\n    apiKey: \"AIzaSyAuk10owd8HSTuUHi4Xnwg6oEp7KyfFVnI\",\n    authDomain: \"dva-react-app.firebaseapp.com\",\n    projectId: \"dva-react-app\",\n    storageBucket: \"dva-react-app.appspot.com\",\n    messagingSenderId: \"450946863814\",\n    appId: \"1:450946863814:web:df289356c0822259c97dc7\",\n    measurementId: \"G-HW787PQNGC\"\n\n};\nconst fire = firebase.initializeApp(firebaseConfig);\nexport default fire;","const ON_AUTH = \"ON_AUTH\";\nconst OFF_AUTH = \"OFF_AUTH\";\n\ntype InitialStateType = {\n    isAuth: boolean,\n}\n\nlet initialState: InitialStateType = {\n    isAuth: false,\n\n};\n\nconst AuthPageReducer = (state:InitialStateType = initialState, action: any): InitialStateType => {\n    switch (action.type) {\n        case ON_AUTH:\n            return {...state, isAuth: action.something};\n\n        case OFF_AUTH:\n            return {...state, isAuth: false};\n\n        default:\n            return {...state}\n\n    }\n};\n\ntype OnAuthType = {\n    type: typeof ON_AUTH\n}\n\nexport const onAuth = (): OnAuthType => ({type: ON_AUTH});\n\nexport const offAuth = () => ({type: OFF_AUTH});\n\nexport default AuthPageReducer\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { onAuth, offAuth } from '../../redux-store/AuthPageReducer'\n\n\nconst User = (props) => {\n    const { handleLogout } = props;\n\n\n    useEffect(() => {\n        props.onAuth()\n    }, []\n    )\n    return (\n        <section>\n            <h2>Welcome</h2>\n            <button onClick={() => handleLogout()}>Logout</button>\n        </section>\n    )\n}\nconst mapStateToProps = (state) => ({\n    authFlag: state.AuthPageReducer.isAuth,\n})\nexport const UserContainer = connect(mapStateToProps, { onAuth, offAuth })(User);","import React from 'react';\n\nexport const Login = (props) => {\n\n    const { email, setEmail, password, setPassword, handleLogin, handleSignup, hasAccount, setHasAccount, emailError, passwordError } = props;\n\n    return (\n        <section>\n            <div>\n                <label>Username</label>\n                <input type=\"text\"\n                    autoFocus\n                    required\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)} />\n                <p>{emailError}</p>\n                <label>Password</label>\n                <input\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)} />\n                <p>{passwordError}</p>\n\n                <div>\n                    {hasAccount ? (\n                        <>\n                            <button onClick={handleLogin}>Sign in</button>\n                            <p>\n                                Dont have an account?\n                                    <span onClick={() => setHasAccount(!hasAccount)}>Sign Up</span>\n                            </p>\n                        </>\n                    ) : (\n                            <>\n                                <button onClick={handleSignup}>Sign Up</button>\n                                <p>\n                                    Have an account?\n                                    <span onClick={() => setHasAccount(!hasAccount)}>Sign In</span>\n                                </p>\n                            </>\n                        )\n                    }\n\n                </div>\n            </div>\n        </section>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport fire from '../../fire'\nimport { UserContainer } from '../User'\nimport { Login } from '../Login';\n\nexport const AuthForm = () => {\n    const [user, setUser] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [hasAccount, setHasAccount] = useState('');\n\n\n    const clearInputs = () => {\n        setEmail('');\n        setPassword('');\n    };\n\n    const clearErrors = () => {\n        setEmailError('');\n        setPasswordError('');\n    };\n\n    const handleLogin = () => {\n        clearErrors();\n        fire\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .catch(err => {\n                switch (err.code) {\n                    case \"auth/invalid-email\":\n                    case \"auth/user-disabled\":\n                    case \"auth/user-not-found\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/wrong-password\":\n                        setPasswordError(err.message);\n                }\n            })\n    };\n\n    const handleSignup = () => {\n        clearErrors();\n        fire\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .catch(err => {\n                switch (err.code) {\n                    case \"auth/email-already-in-use\":\n                    case \"auth/invalid-email\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/weak-password\":\n                        setPasswordError(err.message);\n                }\n            })\n\n    };\n\n    const handleLogout = () => {\n        fire.auth().signOut();\n    };\n\n    const authListener = () => {\n        fire.auth().onAuthStateChanged(user => {\n            if (user) {\n                clearInputs();\n                setUser(user)\n            } else {\n                setUser('')\n            }\n        })\n    }\n\n    useEffect(() => {\n        authListener();\n\n    }, []\n\n    );\n\n    return (\n        <div>\n            {user ? (\n                <UserContainer handleLogout={handleLogout} />\n            ) : (\n                    <Login\n                        email={email}\n                        setEmail={setEmail}\n                        password={password}\n                        setPassword={setPassword}\n                        handleLogin={handleLogin}\n                        handleSignup={handleSignup}\n                        hasAccount={hasAccount}\n                        setHasAccount={setHasAccount}\n                        emailError={emailError}\n                        passwordError={passwordError}\n                    />\n                )}\n        </div>\n    )\n};\n\n","import React from 'react';\nimport { AuthForm } from '../../components/AuthForm';\n\nexport class Auth extends React.Component {\n    render() {\n\n        return (\n            <div>\n                <AuthForm />\n            </div>\n        )\n    }\n} ","import styled from 'styled-components'\r\n\r\nexport const BodySC = styled.div`\r\ndisplay: flex;\r\nwidth: 100%;\r\nheight: 100%;\r\nposition: relative;\r\n`;\r\nexport const ContentSC = styled.div`\r\nwidth: 100%;\r\n\r\n`;\r\nexport const NavigationWrapperSC = styled.div`\r\nposition: relative;\r\nmin-width: 90px;\r\n`;\r\n","import styled from 'styled-components'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const ListWrapperSC = styled.div`\r\n    padding: 0 15px;\r\n`;\r\nexport const PageTitleSC = styled.h1`\r\ncolor: white;\r\nmargin: 0;\r\npadding: 0;\r\nfont-weight: 300;\r\n`;\r\nexport const ListSC = styled.div`\r\ndisplay: flex;\r\nmax-width: 1700px;\r\nmargin: 0 auto;\r\nflex-wrap: wrap;\r\n// justify-content: center;\r\nflex-start: left;\r\n`;\r\nexport const BackdropSC = styled(NavLink)`\r\n    display: block;\r\n    width: 400px;\r\n    height: 220px;\r\n    background: url(${props => props.bg});\r\n    background-size: cover;\r\n`;\r\nexport const TitleSC = styled.div`\r\ncolor: white;\r\n`;\r\nexport const WrapperSC = styled.div`\r\n\r\n`;\r\nexport const SortSC = styled.div`\r\n    color: #fff;\r\n`;\r\nexport const WrapperItemSC = styled.div`\r\n    display: block;\r\n    margin: 20px 2px;\r\n    color: #fff;    \r\n    position: relative;\r\n`;\r\nexport const HoveredSC = styled.div`\r\n    display: ${props => props.flag ? 'block' : 'none'};\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 2px;\r\n    opacity: 80%;\r\n    &:hover {\r\n    opacity: 100%;\r\n    cursor: pointer;\r\n    }\r\n    &:hover::before{\r\n        top: -30px;\r\n        display: block;\r\n        background: #2e2d2d;\r\n        width: 150px;\r\n        text-align: center;\r\n        border-radius: 4px; \r\n        content: '${props => props.content ? 'Remove from the list' : 'Add to the list'}';\r\n        position: absolute;\r\n    } \r\n    &:hover::after{\r\n        top: -12px;\r\n        left: 3px;\r\n        display: block;\r\n        width: 0;\r\n        height: 0;\r\n        border-style: solid;\r\n        border-width: 9px 8px 0 8px;\r\n        border-color: #2e2d2d transparent transparent transparent;\r\n        content: '';\r\n        position: absolute;\r\n    }\r\n`;\r\nexport const EmptyListSC = styled.p`\r\ncolor: white;\r\n`;","import React, {useState} from 'react'\r\nimport {BackdropSC, HoveredSC, TitleSC, WrapperItemSC} from '../../styles/FavouriteMoviesSC';\r\n\r\ntype PropsType = {\r\n    id: number\r\n    title: string\r\n    poster: string\r\n    removeFromFavourite: (flag: boolean, movieId: number) => void\r\n}\r\n\r\nexport const FavouriteMovieItem: React.FC<PropsType> = (props) => {\r\n\r\n    const {id, title, poster, removeFromFavourite} = props;\r\n    const [hover, setHover] = useState(false);\r\n    const [handler, setHandler] = useState(true);\r\n\r\n    const favouriteMovieToggle = (flag: boolean) => {\r\n        setHandler(flag);\r\n        removeFromFavourite(handler, id);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <WrapperItemSC onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} >\r\n\r\n                    <BackdropSC bg={`https://image.tmdb.org/t/p/w780` + poster} to={`/Vapi/movie/${id}`}>\r\n                    </BackdropSC>\r\n                    <TitleSC>\r\n                        {title}\r\n                    </TitleSC>\r\n\r\n                    <HoveredSC flag={hover} content={handler} to={`/Vapi/movie/${id}`} onClick={() => favouriteMovieToggle(!handler)}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"33\" height=\"33\" fill={handler ? `white` : 'transparent'}\r\n                             stroke=\"white\"\r\n                             className=\"bi bi-bookmark-fill\" viewBox=\"0 0 16 16\">\r\n                            <path\r\n                                d=\"M2 2v13.5a.5.5 0 0 0 .74.439L8 13.069l5.26 2.87A.5.5 0 0 0 14 15.5V2a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2z\"/>\r\n                        </svg>\r\n                    </HoveredSC>\r\n            </WrapperItemSC>\r\n\r\n        </>\r\n    )\r\n};","import React, {ReactNode, useState} from 'react'\r\nimport {ListSC, ListWrapperSC, PageTitleSC, SortSC} from \"../../styles/FavouriteMoviesSC\";\r\nimport {FavouriteMoviesType, MovieBySearch} from '../../types/types';\r\nimport { FavouriteMovieItem } from './FavouriteMovieItem';\r\n\r\ntype PropsType = {\r\n    favouritesMovies: FavouriteMoviesType\r\n    removeFromFavourite: (flag: boolean, movieId: number) => void\r\n}\r\n\r\nexport const FavouriteMoviePage: React.FC<PropsType> = (props) => {\r\n\r\n    const {favouritesMovies, removeFromFavourite} = props;\r\n    let listData = [...favouritesMovies.listData];\r\n\r\n    const [type, setType] = useState('default')\r\n\r\n        const sort = ():Array<MovieBySearch> => {\r\n            switch (type) {\r\n                case \"popularity\":\r\n                    return listData.sort((a:MovieBySearch,b:MovieBySearch) => b.popularity - a.popularity);\r\n                case \"vote\":\r\n                    return listData.sort((a:MovieBySearch,b:MovieBySearch) => b.vote_average - a.vote_average);\r\n                case \"reverse\":\r\n                    return listData.reverse();\r\n                default:\r\n                    return [...favouritesMovies.listData]\r\n            }\r\n        };\r\n    const arr: Array<ReactNode> =  sort().map(i => <FavouriteMovieItem key={`key_${i.id}`}\r\n                                                                         id={i.id}\r\n                                                                         title={i.title}\r\n                                                                         poster={i.backdrop_path}\r\n                                                                         removeFromFavourite={removeFromFavourite}\r\n    />);\r\n\r\n    return (\r\n        <ListWrapperSC>\r\n            <div>\r\n                <PageTitleSC>Your Picked Movies:</PageTitleSC>\r\n                <SortSC>Sorted by: <select onChange={(e:React.FormEvent<HTMLSelectElement>) => setType(e.currentTarget.value)}>\r\n                    <option value='default'>Newest</option>\r\n                    <option value='reverse'>Oldest</option>\r\n                    <option value='popularity'>Most popular</option>\r\n                    <option value='vote'>Votes</option>\r\n                </select></SortSC>\r\n            </div>\r\n            <ListSC>\r\n                {arr}\r\n            </ListSC>\r\n        </ListWrapperSC>\r\n    )\r\n};","import {MovieBySearch} from \"../types/types\";\r\nimport { InferActionsTypes} from \"./index\";\r\n\r\ntype InitialStateType = typeof initialState\r\nconst initialState = {\r\n    favouritesMovies: {\r\n        listId: null as number | null,\r\n        listData: [] as Array<MovieBySearch>,\r\n        isFavourite: false,\r\n        isCreated: false,\r\n    },\r\n};\r\n\r\n const FavouriteMoviesReducer = (state = initialState, action: InferActionsTypes<typeof FMactions>): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'CREATE_FAVOURITE_MOVIES_LIST':\r\n            return {\r\n                ...state,\r\n                favouritesMovies: {\r\n                    ...state.favouritesMovies,\r\n                    listId: action.listId,\r\n                    isCreated: true\r\n                }\r\n            };\r\n        case 'SET_FAVOURITE_MOVIES_LIST':\r\n            return {\r\n                ...state,\r\n                favouritesMovies: {\r\n                    ...state.favouritesMovies,\r\n                    listData: action.listData,\r\n                }\r\n            };\r\n        case 'SET_AS_FAVOURITE':\r\n            return {\r\n                ...state,\r\n                favouritesMovies: {\r\n                    ...state.favouritesMovies,\r\n                    isFavourite: action.isFavourite,\r\n                }\r\n            };\r\n        default: return {...state}\r\n    }\r\n};\r\n\r\n// type actionsType = ReturnType<SomeType<typeof actions>>;\r\n// type SomeType<T extends {[key: string]: (...args: any[]) => any}> = T extends {[key: string]: infer U} ? U : never\r\n\r\nexport const FMactions = {\r\n    createFavouriteMoviesList: (listId: number) => ({type: 'CREATE_FAVOURITE_MOVIES_LIST', listId} as const),\r\n    setFavouriteMoviesList: (listData: Array<MovieBySearch>) => ({type: 'SET_FAVOURITE_MOVIES_LIST', listData}  as const),\r\n    setFavouriteMovie: (isFavourite: boolean) => ({type: 'SET_AS_FAVOURITE', isFavourite}  as const),\r\n};\r\n\r\nexport default FavouriteMoviesReducer","import React, {useEffect, useRef, useState} from 'react'\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {FavouriteMoviePage} from \"./FavouriteMoviesPage\";\r\nimport {movie} from \"../../VMoviePageApi\";\r\nimport {CombinedStateType} from \"../../redux-store\";\r\nimport {FavouriteMoviesType, MovieBySearch} from \"../../types/types\";\r\nimport {Loader} from '../../components/Loader/Loader';\r\nimport {FMactions} from '../../redux-store/FavouriteMoviesReducer'\r\nimport {EmptyListSC, WrapperSC} from '../../styles/FavouriteMoviesSC';\r\n\r\ntype MapState = {\r\n    favouritesMovies: FavouriteMoviesType\r\n}\r\ntype MapDispatch = {\r\n    setFavouriteMoviesList: (moviesData: Array<MovieBySearch>) => void\r\n    createFavouriteMoviesList: (listId: number) => void\r\n}\r\ntype PropsType = MapState & MapDispatch\r\n\r\nconst FavouriteMoviesPageContainer: React.FC<PropsType> = (props) => {\r\n\r\n    const {createFavouriteMoviesList, setFavouriteMoviesList, favouritesMovies} = props;\r\n    const LIST_ID = 'Favourite Movies list id';\r\n    // const [fetching, setFetching] = useState(false);\r\n\r\n    // const prevCountRef = useRef<any>();\r\n    // prevCountRef.current = favouritesMovies.listData;\r\n    // const prev = prevCountRef.current;\r\n    // console.log('prev:', prev);\r\n    // console.log('current:', favouritesMovies.listData);\r\n\r\n    useEffect(() => {\r\n            if (+localStorage.getItem(LIST_ID)!) {\r\n                const listId: number = +localStorage.getItem(LIST_ID)!;\r\n                (async () => {\r\n                    // setFetching(true);\r\n                    createFavouriteMoviesList(listId);\r\n                    const listData = await movie.getList(listId);\r\n                    setFavouriteMoviesList(listData.results);\r\n                    // setFetching(false);\r\n                })();\r\n            }\r\n        },\r\n        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n        []\r\n        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n    );\r\n    const removeFromFavourite = (flag: boolean, id: number): void => {\r\n        flag ?\r\n            (async () => {\r\n                await movie.removeItems(favouritesMovies.listId!, id);\r\n            })() :\r\n            (async () => {\r\n                await movie.updateList(favouritesMovies.listId!, id);\r\n            })()\r\n    };\r\n\r\n    return (\r\n        // fetching ?\r\n        //     <Loader/> :\r\n            favouritesMovies.listData.length > 0 ?\r\n                <WrapperSC>\r\n                    <FavouriteMoviePage {...props} removeFromFavourite={removeFromFavourite}/>\r\n                </WrapperSC> : <EmptyListSC>you haven't added anything to your favorite movies list</EmptyListSC>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state: CombinedStateType): MapState => ({\r\n    favouritesMovies: state.FavouriteMoviesReducer.favouritesMovies\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {...FMactions}),\r\n)(FavouriteMoviesPageContainer)","import styled from 'styled-components'\r\nimport {VWrapperSC} from \"../styles\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nexport const VWrapperSPSC = styled(VWrapperSC)`\r\n    box-shadow: 1px 1px 50px 20px #000000;\r\n    border-radius: 15px 15px 0 0;\r\n    background: linear-gradient(270deg, rgba(20,20,20,1) 0%, rgba(0,0,0,1) 100%);\r\n    \r\n`;\r\n\r\nexport const VMainMoviePageTitleSC = styled.h1`\r\n    color: #fff;\r\n    margin: 20px 0 2px 0;\r\n    padding: 0;\r\n`;\r\nexport const VSubMoviePageTitleSC = styled.div`\r\n    font-size: 18px;\r\n    color: #fff;\r\n    opacity: 80%;\r\n    padding-left: 5px;\r\n    \r\n`;\r\n\r\nexport const VBackDropSC = styled.div`\r\n    border-radius: 2px 15px 0 0;\r\n    background: url(${props => props.src ? props.src : ''}) center center;\r\n    height: 700px;\r\n    background-size: cover;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    position: relative;\r\n    box-shadow: inset 4px -36px 6px -30px #000000;\r\n`;\r\nexport const InfoSC = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 470px;\r\n    background: black;\r\n    position: relative;\r\n    z-index: 999;\r\n    \r\n`;\r\n\r\nexport const InfoContentSC = styled.div`\r\n    position: absolute;\r\n    padding: 20px;\r\n    width: 600px;\r\n    margin: 0;\r\n    \r\n`;\r\nexport const VGradientSC = styled.div`\r\n    background: rgb(0,0,0);\r\n    background: linear-gradient(90deg, rgba(0, 0, 0, 1) 20%, rgba(255, 255, 255, 0) 60%);\r\n    height: 100%;\r\n    width: 900px;   \r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n`;\r\nexport const WatchMovieSC = styled.button`\r\n    width: 150px;\r\n    background: transparent;\r\n    outline: none;\r\n    border: 1px solid ${`#a90000`};\r\n    color: white;\r\n    height: 45px;\r\n    margin-top: 40px;\r\n    margin-left: 40px;\r\n    position: relative;\r\n    border-radius: 5px;\r\n    &:before {\r\n    content:'';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 0;\r\n    height: 42px;\r\n    background: rgba(255,255,255,0.1);\r\n    border-radius: 3px;\r\n    transition: all .5s ease;\r\n    }\r\n    &:hover:before {\r\n    width: 100%;\r\n    }\r\n    &:hover {\r\n      cursor: pointer; \r\n    }\r\n`;\r\nexport const DescriptionSC = styled.div`\r\n      color: #fff;  \r\n      font-size: 20px;\r\n      text-shadow: 5px 3px 9px rgba(0, 0, 0, 1);\r\n      padding-left: 5px;\r\n      font-weight: 500;\r\n`;\r\nexport const BackdropSectionSC = styled.div`\r\n    display: flex;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    box-shadow: 1px 13px 20px 5px #000000;\r\n`;\r\nexport const VoteAvarageSC = styled.div`\r\n    margin: 10px 0;\r\n    color: white;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    padding-left: 5px;\r\n\r\n`;\r\nexport const VoteScoreCS = styled.span`\r\n\r\n    color: ${props => {\r\n    if (props.score <= 3.9) {\r\n        return '#FF0000'\r\n    } else if (props.score >= 4 && props.score <= 5.9) {\r\n        return '#FF6600'\r\n    } else if (props.score >= 6 && props.score <= 7.9) {\r\n        return '#FFFF00'\r\n    } else if (props.score >= 8 && props.score <= 9.9) {\r\n        return '#66E100'\r\n    } else {\r\n        return '#00CC00'\r\n    }\r\n}}\r\n`;\r\n\r\nexport const GenresSC = styled.div`\r\n    padding-left: 5px;\r\n    margin-top: 10px;\r\n`;\r\nexport const GenreSC = styled(NavLink)`\r\n    opacity: 80%;\r\n    padding-left: 5px;\r\n    color: #ffffff;\r\n    &:hover {\r\n    opacity: 100%;\r\n    color: ${`#a90000`};\r\n    }\r\n`;\r\nexport const ProductionSC = styled.span`\r\n    font-size: 12px;\r\n    margin-left: 4px;\r\n    color: #fff;\r\n    opacity: 80%;\r\n`;\r\nexport const ProductionsSC = styled(GenresSC)`\r\n    margin-bottom: 10px;\r\n`;\r\nexport const RecommendedMoviesListSC = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin-top: 20px;\r\n    max-width: 1700px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const SimilarMoviesItemSC = styled(NavLink)`\r\n    margin: 4px 12px;\r\n    background: url(${props => props.poster}); \r\n    background-size: cover;\r\n    height: 270px;\r\n    width: 180px;\r\n    &:hover {\r\n    transform: scale(1.1,1.1);\r\n    transition: .2s ease;\r\n    }\r\n    transition: .2s ease;\r\nz-index: 9999;\r\n`;\r\n\r\nexport const RecommendedTitleSC = styled.div`\r\n    color: #ffffff;\r\n    font-size: 24px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-weight: 500;\r\n    margin-bottom: 30px;\r\n`;\r\n\r\n\r\n//video\r\nexport const ModalWrappSC = styled.div`\r\n    top: 0;\r\n    position: fixed;\r\n    height: 100vh;\r\n    width: 100%;\r\n    z-index: 999999;\r\n    background: rgba(0,0,0, 0.9);\r\n`;\r\nexport const VideoFrameSC = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin-right: -50%;\r\n    transform: translate(-50%, -50%)\r\n`;\r\nexport const VideoCloseSC = styled.div`\r\n    top: 14px;\r\n    right: -54px;\r\n   width: 32px;\r\n   height: 32px;\r\n   position: absolute;\r\n   opacity: 70%;\r\n   &:before {\r\n        content: '';\r\n        width: 2px;\r\n        height: 33px;\r\n        background: white;\r\n        left: 15px;\r\n        position: absolute;\r\n        transform: rotate(45deg);\r\n   }\r\n   &:after {\r\n        content: '';\r\n        width: 2px;\r\n        height: 33px;\r\n                left: 15px;\r\n        background: white;\r\n        position: absolute;\r\n        transform: rotate(-45deg);\r\n   }\r\n   &:hover{\r\n    opacity: 1;\r\n    }\r\n`;\r\n\r\nexport const CollectionContainerSC = styled.div`\r\n        color: white;\r\n        padding-left: 10px;\r\n        margin-top: 4px;\r\n        font-size: 16px;\r\n        opacity: 0.8;\r\n    `;\r\n// FOOTER\r\n\r\nexport const FooterSC = styled.div`\r\n    background: ${`#292828`};\r\n    padding: 20px;\r\n\r\n`;\r\nexport const SocialSC = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100%;\r\n    color: white;\r\n    max-width: 100px;\r\n    width: 100%;\r\n    justify-content: space-around;\r\n`;\r\nexport const LinkSC = styled.a`\r\n    color: white;\r\n    display: block;\r\n`;\r\nexport const FooterWrapperSC = styled.div`\r\n    max-width: 1400px;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\nexport const FooterInfoSC = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\nexport const CreatedSC = styled.span`\r\n    color: white;\r\n    opacity: 80%;\r\n    font-weight: 500;\r\n    margin: 4px 0;\r\n`;\r\nexport const MailSC = styled.span`\r\n    color: white;\r\n    font-weight: 500;\r\n`;","import React from 'react'\r\nimport {SimilarMoviesItemSC, } from \"./styles\";\r\nimport {movie} from \"../../../VMoviePageApi\";\r\nimport {MovieBySearch, SelectedMovieType} from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n    poster: string\r\n    movieId: number\r\n    setSimilarMovieData: (similarMovieData: Array<MovieBySearch>) => void\r\n    setCurrentMovie: (selectedMovie: SelectedMovieType) => void\r\n}\r\n\r\nexport const VSimilarMovieItem: React.FC<PropsType> = (props) => {\r\n    const {poster, movieId, setSimilarMovieData, setCurrentMovie} = props;\r\n\r\n    const src: string = `https://image.tmdb.org/t/p/w300/${poster}`;\r\n\r\n    let selectMovie = () => {\r\n        movie.getSelectedFilm(movieId)\r\n            .then((response: any) => setCurrentMovie(response))\r\n            .then(() => {\r\n                movie.getSimilarMovies(movieId)\r\n                    .then((similar: any) => setSimilarMovieData((similar.results).splice(0,8)))\r\n            })\r\n};\r\n    return (\r\n    <SimilarMoviesItemSC to={`${movieId}`} poster={ poster ? src : 'https://prikolnye-kartinki.ru/img/picture/Sep/23/9d857169c84422fdaa28df62667a1467/8.jpg'} onClick={() => selectMovie()}/>\r\n    )\r\n};\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {ModalWrappSC, VideoCloseSC, VideoFrameSC} from \"./styles\";\r\nimport {movie} from \"../../../VMoviePageApi\";\r\nimport {actions} from \"../../../redux-store/MoviePageReducer\";\r\nimport {CombinedStateType} from \"../../../redux-store\";\r\n\r\ntype MapDispatchPropsType = {\r\n    setVideoKey: (videoKey: string) => void\r\n    openModuleVideo: () => void\r\n}\r\ntype MapStatePropsType = {\r\n    isTrailer: boolean,\r\n    videoKey: string | null\r\n}\r\ntype OwnPropsType = {\r\n    movieId: number\r\n}\r\n\r\ntype PropsType = OwnPropsType & MapStatePropsType & MapDispatchPropsType\r\n\r\nconst VModalVideo: React.FC<PropsType> = (props) => {\r\n    const {setVideoKey, videoKey, openModuleVideo, isTrailer, movieId} = props;\r\n\r\n\r\n    useEffect(() => {\r\n        (async ()=>{\r\n            try {\r\n                const video = await movie.getVideo(movieId);\r\n                    setVideoKey(video.results\r\n                        .sort(item => item.name.includes('Trailer') ? -1 : 1)[0].key)\r\n            } catch(e) {\r\n                alert(e)\r\n            }\r\n        })()\r\n        }, [movieId]\r\n    );\r\n   const src = `https://www.youtube.com/embed/${videoKey}?mute=1&autoplay=1`;\r\n    return (\r\n        isTrailer ?\r\n            <ModalWrappSC onClick={openModuleVideo}>\r\n                <VideoFrameSC>\r\n                    <iframe width='1300' height='700' src={src}\r\n                            frameBorder=\"0\"\r\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                            allowFullScreen>\r\n                    </iframe>\r\n                    <VideoCloseSC/>\r\n                </VideoFrameSC>\r\n            </ModalWrappSC>\r\n        : <></>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state: CombinedStateType): MapStatePropsType => ({\r\n    isTrailer: state.MoviePageReducer.isTrailerOpen,\r\n    videoKey: state.MoviePageReducer.videoKey\r\n});\r\n\r\n\r\nexport const VModalVideoContainer = connect(mapStateToProps, {...actions})(VModalVideo);","import styled from 'styled-components'\r\n\r\n\r\nexport const CastAvatarSC = styled.div`\r\n  width: 140px;\r\n  border-radius: 50%;\r\n  height: 140px;\r\n  background: url(${props => props.src}) center center;\r\n  background-size: cover;\r\n`;\r\nexport const AvatarWrapper = styled(CastAvatarSC)`\r\n    background: ${`#131313`};\r\n`;\r\nexport const AvatarsListSC = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n`;\r\nexport const CastItemSC = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 20px;\r\n    width: 140px;\r\n    align-items: center;\r\n`;\r\nexport const NameSC = styled.div`\r\n    color: #ffffff;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    padding-top: 3px;\r\n`;\r\nexport const CharacterSC = styled.div`\r\n    color: #ffffff;\r\n    width: 120px;\r\n    font-size: 14px;\r\n    text-align: center;\r\n    opacity: 0.8;\r\n`;\r\nexport const CastTitleSC = styled.div`\r\n    color: #ffffff;\r\n    font-size: 24px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-weight: 500;\r\n    margin-bottom: 30px;\r\n`;\r\nexport const CastWrapperSC = styled.div`\r\n    padding: 50px 0;\r\n    max-width: 1500px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    `;","import React, {useEffect} from 'react'\r\nimport {movie} from \"../../../VMoviePageApi\";\r\nimport {AvatarsListSC, AvatarWrapper, CastAvatarSC, CastItemSC, CastTitleSC, CastWrapperSC, CharacterSC, NameSC} from \"./CastSC\";\r\nimport {CastPersonType} from \"../../../types/types\";\r\n\r\ntype MovieCastObjType = {\r\n    id: number,\r\n    profile_path: string,\r\n    character: string,\r\n    name: string\r\n}\r\n\r\ntype PropsType = {\r\n    movieCast: Array<MovieCastObjType>,\r\n    setCast: (castData: Array<CastPersonType>) => void,\r\n    movieId: number\r\n}\r\n\r\nexport const VCast: React.FC<PropsType> = (props) => {\r\n    const {movieCast, setCast, movieId} = props;\r\n\r\n    useEffect(() => {\r\n            (async () => {\r\n                let castData = await movie.getCastAndCrew(movieId);\r\n                setCast(castData.cast.splice(0, 8));\r\n            })()\r\n        }, [movieId]\r\n    );\r\n\r\n    const movieCastArr = movieCast.map(item => <VCastItem\r\n        key={item.id}\r\n        src={item['profile_path']}\r\n        character={item.character}\r\n        name={item.name}\r\n    />);\r\n\r\n    return (\r\n        <CastWrapperSC>\r\n            <CastTitleSC>MOVIE CAST</CastTitleSC>\r\n            <AvatarsListSC>\r\n                {movieCastArr}\r\n            </AvatarsListSC>\r\n        </CastWrapperSC>\r\n    )\r\n\r\n};\r\n\r\ntype PropsItemType = {\r\n    src: string,\r\n    character: string,\r\n    name: string\r\n}\r\n\r\nconst VCastItem: React.FC<PropsItemType> = (props) => {\r\n\r\n    const {src, character, name} = props;\r\n    const noSrc = 'https://socpartnerstvo.org/img/avatar_male.png';\r\n\r\n\r\n    return (\r\n        <CastItemSC>\r\n            <AvatarWrapper>\r\n                <CastAvatarSC src={src ? 'https://image.tmdb.org/t/p/w500' + src : noSrc}/>\r\n            </AvatarWrapper>\r\n            <NameSC>{name}</NameSC>\r\n            <CharacterSC>{character}</CharacterSC>\r\n        </CastItemSC>\r\n    )\r\n};\r\n\r\n","import styled from 'styled-components'\r\nimport {CastTitleSC} from \"./CastSC\";\r\n\r\nexport const WrapperSC = styled.div`\r\n     background: ${`rgba(24,23,25,1)`};\r\n    width: 100%;\r\n    display: flex;\r\n    margin: 8px 0;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const AvatarSC = styled.img.attrs(props => ({\r\n    src: props.src,\r\n}))`\r\n    height: 32px;\r\n    min-width: 32px;\r\n    background-size: contain;\r\n    border-radius: 50%;\r\n`;\r\n\r\nexport const BodySC = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    width: 100%;\r\n    margin-left: 15px;\r\n`;\r\nexport const InfoSC = styled.div`\r\n    display: flex;\r\n`;\r\nexport const NameSC = styled.div`\r\n    margin-right: 8px;\r\n    font-weight: 700;\r\n    color: #ffffff;\r\n`;\r\nexport const DateSC = styled.div`\r\n    color: #ffffff;\r\n    opacity: 80%;\r\n\r\n`;\r\nexport const ContentSC = styled.div`\r\n    padding-top: 10px;\r\n    color: #ffffff;\r\n    opacity: 80%;\r\n    font-weight: 500;\r\n    line-height: 22px;\r\n    max-height: ${props => props.isHidden ? '100%' : '220px'};\r\n    overflow: hidden;\r\n`;\r\nexport const ToggleSC = styled.div`\r\n    padding: 5px 0;\r\n    margin-right: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    font-weight: 500;\r\n    color: ${`#cbcbcb`};\r\n    &:hover {\r\n        color: #fff;\r\n        cursor: pointer;        \r\n    }\r\n    background: ${`#2e2d2d`};\r\n`;\r\nexport const ReviewSectionSC = styled.div`\r\n    padding: 50px 0;\r\n    width: 700px;\r\n    margin: 0 auto;\r\n`;\r\nexport const ReviewTitleSC = styled(CastTitleSC)`\r\n`;\r\nexport const PaginationSC = styled.div`\r\n    height: 50px;\r\n    width: 100%;\r\n`;\r\nexport const PaginationItemSC = styled.span`\r\n    height: 50px;\r\n    color: ${props => props.isActive};\r\n    font-size: 18px;\r\n    margin: 0 1px;\r\n    font-weight: 500;\r\n`;\r\n\r\nexport const NoCommSC = styled.div`\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 20px;\r\n    color: #fff;\r\n`;\r\n","import React, {useEffect, useRef, useState} from 'react'\r\nimport {AuthorDetailsType, ReviewDetails, ReviewsType} from '../../../types/types';\r\nimport {movie,} from \"../../../VMoviePageApi\";\r\nimport {\r\n    AvatarSC,\r\n    BodySC,\r\n    ContentSC,\r\n    DateSC,\r\n    InfoSC,\r\n    NameSC, NoCommSC, PaginationItemSC, PaginationSC,\r\n    ReviewSectionSC,\r\n    ReviewTitleSC,\r\n    ToggleSC,\r\n    WrapperSC\r\n} from \"./ReviewsSC\";\r\n\r\ntype PropsReviewsType = {\r\n    setReviews: (reviews: Array<ReviewDetails>, totalPages: number) => void\r\n    reviews: ReviewsType\r\n    movieId: number\r\n    setCurrentReviewPage: (page: number) => void\r\n}\r\n\r\nconst VReviews: React.FC<PropsReviewsType> = (props) => {\r\n    const {setReviews, reviews, movieId, setCurrentReviewPage} = props;\r\n    useEffect(() => {\r\n            movie.getReviews(movieId, reviews.currentPage)\r\n                .then(response => {\r\n                    setReviews(response.results, response['total_pages']);\r\n                })\r\n        }, [movieId]\r\n    );\r\n\r\n\r\n    const reviewsList = reviews.data.map((item, index) => <ReviewItem key={index}\r\n                                                                      author={item.author}\r\n                                                                      date={item['created_at']}\r\n                                                                      author_details={item.author_details}\r\n                                                                      content={item.content}\r\n    />);\r\n\r\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n    const myRef = useRef(null as any);\r\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n    const scrollTo = (): void => myRef.current.scrollIntoView();\r\n\r\n    const selectPage = (page: number): void => {\r\n        scrollTo();\r\n        setCurrentReviewPage(page);\r\n        reviews.currentPage !== page &&\r\n        movie.getReviews(movieId, page)\r\n            .then(response => {\r\n                setReviews(response.results, response['total_pages']);\r\n            })\r\n    };\r\n    let totalPagesArr = [];\r\n    const totalPages = reviews.totalPages;\r\n    if (totalPages)\r\n        for (let i = 1; i <= totalPages; i++) {\r\n            totalPagesArr.push(i)\r\n        }\r\n    totalPagesArr = totalPagesArr.map((item, index) =>\r\n        <PaginationItemSC key={index}\r\n                          onClick={() => selectPage(item)}\r\n                          isActive={item === reviews.currentPage ? 'red' : 'white'}>\r\n            {item}\r\n        </PaginationItemSC>);\r\n\r\n    return (\r\n        <ReviewSectionSC>\r\n            <ReviewTitleSC ref={myRef}>\r\n                COMMENTARIES\r\n            </ReviewTitleSC>\r\n            {reviews.data.length !== 0 ? <>{reviewsList}\r\n                <PaginationSC>\r\n                    {totalPagesArr}\r\n                </PaginationSC>\r\n            </> : <NoCommSC>\r\n                No Commentaries :(\r\n            </NoCommSC>}\r\n\r\n        </ReviewSectionSC>\r\n    )\r\n};\r\n\r\nexport const VReviewsMemo = React.memo(VReviews);\r\n\r\ntype ItemPropsType = {\r\n    author: string\r\n    date: string\r\n    author_details: AuthorDetailsType\r\n    content: string\r\n}\r\n\r\nconst ReviewItem: React.FC<ItemPropsType> = React.memo(props => {\r\n    const {author, date, author_details, content} = props;\r\n    const src = 'https://image.tmdb.org/t/p/original/' + author_details.avatar_path;\r\n    const noSrc = 'https://socpartnerstvo.org/img/avatar_male.png';\r\n\r\n    const [isOpen, setStyle] = useState(false);\r\n\r\n    return (\r\n        <WrapperSC>\r\n            <AvatarSC src={author_details.avatar_path && author_details.avatar_path.includes('.com') ?\r\n                noSrc : author_details.avatar_path ? src : noSrc}/>\r\n            <BodySC>\r\n                <InfoSC>\r\n                    <NameSC>\r\n                        {author}\r\n                    </NameSC>\r\n                    <DateSC>\r\n                        {date.slice(0, date.indexOf('T'))}\r\n                    </DateSC>\r\n                </InfoSC>\r\n                <ContentSC isHidden={isOpen}>\r\n                    {content}\r\n                </ContentSC>\r\n                {\r\n                    content.length > 1500 ?\r\n                        <ToggleSC onClick={() => setStyle(!isOpen)}>\r\n                            {isOpen ? 'Hide' : 'Show more'}\r\n                        </ToggleSC> : ''\r\n                }\r\n            </BodySC>\r\n        </WrapperSC>\r\n    )\r\n});\r\n\r\n","import React from 'react'\r\nimport {\r\n    BackdropSectionSC,\r\n    CollectionContainerSC,\r\n    CreatedSC,\r\n    DescriptionSC,\r\n    FooterInfoSC,\r\n    FooterSC,\r\n    FooterWrapperSC,\r\n    GenreSC,\r\n    GenresSC,\r\n    InfoContentSC,\r\n    InfoSC,\r\n    LinkSC,\r\n    MailSC,\r\n    ProductionSC,\r\n    ProductionsSC,\r\n    RecommendedMoviesListSC,\r\n    RecommendedTitleSC,\r\n    SocialSC,\r\n    VBackDropSC,\r\n    VGradientSC,\r\n    VMainMoviePageTitleSC,\r\n    VoteAvarageSC,\r\n    VoteScoreCS,\r\n    VSubMoviePageTitleSC,\r\n    VWrapperSPSC,\r\n    WatchMovieSC\r\n} from \"./styles\";\r\nimport {VSimilarMovieItem} from \"./VSimilarMovieItem\";\r\nimport {VModalVideoContainer} from \"./VModalVideo\";\r\nimport {VCast} from \"./VCast\";\r\nimport {VReviewsMemo} from \"./VReviews\";\r\nimport {FaGithub, FaInstagram, FaLinkedin} from 'react-icons/fa';\r\nimport {movie} from \"../../../VMoviePageApi\";\r\nimport {\r\n    CastPersonType,\r\n    CollectionType,\r\n    GenresType, MovieBySearch, ProdactionCompaniesType, ReviewDetails, ReviewsType, SelectedMovieType\r\n} from '../../../types/types';\r\nimport { NoCommSC } from './ReviewsSC';\r\n\r\ntype PropsType = {\r\n    selectedMovieData: SelectedMovieType\r\n    similarMoviesData: Array<MovieBySearch>\r\n    movieCast: Array<CastPersonType>\r\n    movieId: number\r\n    reviews: ReviewsType\r\n    collection: {\r\n        id: number | null,\r\n        data: CollectionType\r\n    },\r\n    favouritesMovies: {\r\n        listId: number | null,\r\n        listData: Array<MovieBySearch>\r\n        isFavourite: boolean\r\n    }\r\n    openModuleVideo: () => void\r\n    setCurrentMovie: (selectedMovie: SelectedMovieType) => void\r\n    setSimilarMovieData: (similarMovieData: Array<MovieBySearch>) => void\r\n    setCast: (castData: Array<CastPersonType>) => void\r\n    setReviews: (reviewsData: Array<ReviewDetails>, reviewsTotalPages: number) => void\r\n    setCurrentReviewPage: (reviewPage: number) => void\r\n    createFavouriteMoviesList: (listId: number) => void\r\n    setFavouriteMovie: (flag: boolean) => void\r\n    setFavouriteMoviesList: (favouriteData: Array<MovieBySearch>) => void\r\n}\r\n\r\nexport const VSelectedMoviePage: React.FC<PropsType> = (props) => {\r\n    const {\r\n        title, original_title, vote_average, overview, backdrop_path, status,\r\n        genres, production_companies, release_date\r\n    } = props.selectedMovieData;\r\n    const {\r\n        similarMoviesData, openModuleVideo, setCurrentMovie, setSimilarMovieData,\r\n        collection, movieId, setCast, movieCast, setReviews, reviews, setCurrentReviewPage,\r\n        favouritesMovies, createFavouriteMoviesList, setFavouriteMoviesList, setFavouriteMovie\r\n    } = props;\r\n    const baseSrc = 'https://image.tmdb.org/t/p/original/';\r\n    const backdrop = `${baseSrc}${backdrop_path}`;\r\n\r\n    const similarMovies = similarMoviesData.map((item, index) => <VSimilarMovieItem\r\n        poster={item['poster_path']}\r\n        key={index}\r\n        movieId={item.id}\r\n        setSimilarMovieData={setSimilarMovieData}\r\n        setCurrentMovie={setCurrentMovie}\r\n    />);\r\n\r\n    let genresFunc = (data = [] as GenresType): React.ReactNode => {\r\n        let genresArr: Array<string> = [];\r\n        data.forEach(item => genresArr.push(item.name));\r\n        return genresArr.join(', ').split(' ').map((item, index) => <GenreSC key={index}\r\n                                                                             to={`/${item}`}>{item}</GenreSC>);\r\n    };\r\n    let production = (data = [] as ProdactionCompaniesType): React.ReactNode => {\r\n        let arr: Array<string> = [];\r\n        data.forEach(item => arr.push(item.name));\r\n        return arr.join(', ').split(' ').map((item, index) => <ProductionSC key={index} to='/'>{item}</ProductionSC>);\r\n    };\r\n    let releaseDate = (releaseDate = ''): string => releaseDate.slice(0, 4);\r\n\r\n    const addToFavourite = (listId = favouritesMovies.listId): void => {\r\n        favouritesMovies.listId ?\r\n            (async () => {\r\n                if (listId) {\r\n                    await movie.updateList(listId, +movieId);\r\n                    const listData = await movie.getList(listId);\r\n                    setFavouriteMoviesList(listData.results);\r\n                    setFavouriteMovie(true)\r\n                }\r\n            })() :\r\n            (async () => {\r\n                const list = await movie.setList('test');\r\n                createFavouriteMoviesList(list.data.id);\r\n                const listId = await list.data.id;\r\n                localStorage.setItem('Favourite Movies list id', list.data.id);\r\n                addToFavourite(listId)\r\n            })()\r\n    };\r\n    const removeFromFavourite = (): void => {\r\n        (async () => {\r\n            if (favouritesMovies.listId) {\r\n                await movie.removeItems(favouritesMovies.listId, +movieId);\r\n                const listData = await movie.getList(favouritesMovies.listId);\r\n                setFavouriteMoviesList(listData.results);\r\n                setFavouriteMovie(false)\r\n            }\r\n        })()\r\n    };\r\n\r\n    return (\r\n        <VWrapperSPSC>\r\n            <VModalVideoContainer movieId={movieId}/>\r\n            <BackdropSectionSC>\r\n                <InfoSC>\r\n                    <InfoContentSC>\r\n                        <VMainMoviePageTitleSC>\r\n                            {title}\r\n\r\n                        </VMainMoviePageTitleSC>\r\n                        <VSubMoviePageTitleSC>\r\n                            {releaseDate(release_date)}, {original_title}\r\n                        </VSubMoviePageTitleSC>\r\n                        {status === 'Released' ?\r\n                            <VoteAvarageSC>\r\n                                VOTE AVERAGE: <VoteScoreCS score={vote_average}>{vote_average}</VoteScoreCS>\r\n                            </VoteAvarageSC>\r\n                            : <VoteAvarageSC>{status}</VoteAvarageSC>\r\n                        }\r\n                        {\r\n                            production(production_companies) ? <ProductionsSC>\r\n                                {production(production_companies)}\r\n                            </ProductionsSC> : ''\r\n                        }\r\n                        <DescriptionSC>\r\n                            {overview}\r\n                        </DescriptionSC>\r\n                        <CollectionContainerSC>\r\n                        </CollectionContainerSC>\r\n                        <GenresSC>\r\n                            {collection.id ? <GenreSC to='/'>{collection.data.name}</GenreSC> : ''}\r\n                            {genresFunc(genres)}\r\n                        </GenresSC>\r\n                        <WatchMovieSC onClick={openModuleVideo}>\r\n                            WATCH TRAILER\r\n                        </WatchMovieSC>\r\n                        {\r\n                            favouritesMovies.isFavourite ? <WatchMovieSC onClick={() => removeFromFavourite()}>\r\n                                REMOVE FROM LIST\r\n                            </WatchMovieSC> : <WatchMovieSC onClick={() => addToFavourite()}>\r\n                                ADD TO LIST\r\n                            </WatchMovieSC>\r\n                        }\r\n                    </InfoContentSC>\r\n                </InfoSC>\r\n                <VBackDropSC src={backdrop}>\r\n                    <VGradientSC>\r\n                    </VGradientSC>\r\n                </VBackDropSC>\r\n            </BackdropSectionSC>\r\n            <VCast movieId={+movieId}\r\n                   setCast={setCast}\r\n                   movieCast={movieCast}\r\n            />\r\n            <RecommendedMoviesListSC>\r\n                <RecommendedTitleSC>\r\n                    RECOMMENDED MOVIES\r\n                </RecommendedTitleSC>\r\n                {similarMovies}\r\n            </RecommendedMoviesListSC>\r\n            <VReviewsMemo movieId={+movieId} setReviews={setReviews} reviews={reviews}\r\n                          setCurrentReviewPage={setCurrentReviewPage}/>\r\n            <FooterSC>\r\n                <FooterWrapperSC>\r\n                    <FooterInfoSC>\r\n                        <SocialSC>\r\n                            <LinkSC target=\"_blank\" href={'https://github.com/crazze16'}>\r\n                                <FaGithub size={'24px'}/>\r\n                            </LinkSC>\r\n                            <LinkSC target=\"_blank\" href={'https://www.instagram.com/because_nekoz/'}>\r\n                                <FaInstagram size={'24px'}/>\r\n                            </LinkSC>\r\n                            <LinkSC target=\"_blank\" href={'https://www.linkedin.com/in/vladimir-nekoz-099173204/'}>\r\n                                <FaLinkedin size={'24px'}/>\r\n                            </LinkSC>\r\n                        </SocialSC>\r\n                        <CreatedSC>created by</CreatedSC>\r\n                        <MailSC>vladimirnekoz16@gmail.com</MailSC>\r\n                    </FooterInfoSC>\r\n                </FooterWrapperSC>\r\n            </FooterSC>\r\n        </VWrapperSPSC>\r\n    )\r\n};","import React, {useEffect, useState} from 'react'\r\nimport {movie} from \"../../../VMoviePageApi\";\r\nimport {connect} from \"react-redux\";\r\nimport {actions} from \"../../../redux-store/MoviePageReducer\";\r\nimport {FMactions} from \"../../../redux-store/FavouriteMoviesReducer\";\r\nimport {VSelectedMoviePage} from \"./VSelectedMoviePage\";\r\nimport {compose} from \"redux\";\r\nimport {useParams} from \"react-router\";\r\nimport {\r\n    CastPersonType,\r\n    CollectionType,\r\n    FavouriteMoviesType,\r\n    MovieBySearch,\r\n    ReviewDetails, ReviewsType,\r\n    SelectedMovieType\r\n} from \"../../../types/types\";\r\nimport {CombinedStateType} from \"../../../redux-store\";\r\nimport { Loader } from '../../../components/Loader/Loader';\r\n\r\ntype MapState = {\r\n    selectedMovieData: SelectedMovieType\r\n    similarMoviesData: Array<MovieBySearch>\r\n    collection: {\r\n        id: number | null,\r\n        data: CollectionType\r\n    },\r\n    movieCast: Array<CastPersonType>\r\n    reviews: ReviewsType\r\n    favouritesMovies: FavouriteMoviesType\r\n}\r\n\r\ntype MapDispatch = {\r\n    setSimilarMovieData: (similarMovieData: Array<MovieBySearch>) => void\r\n    openModuleVideo: () => void\r\n    setCollectionId: (collectionId: number | null) => void\r\n    setCollectionData: (collectionData: CollectionType | {}) => void\r\n    setCast: (castData: Array<CastPersonType>) => void\r\n    setReviews: (reviewsData: Array<ReviewDetails>, reviewsTotalPages: number) => void\r\n    setCurrentReviewPage: (reviewPage: number) => void\r\n    createFavouriteMoviesList: (listId: number) => void\r\n    setFavouriteMoviesList: (listData: Array<MovieBySearch>) => void\r\n    setFavouriteMovie: (isFavourite: boolean) => void\r\n    setCurrentMovie: (selectedMovie: SelectedMovieType) => void\r\n}\r\n\r\ntype PropsType = MapState & MapDispatch\r\n\r\nconst VSelectedMoviePageContainer: React.FC<PropsType> = (props) => {\r\n\r\n    const {setCurrentMovie, setCollectionId, setCollectionData, setSimilarMovieData, setFavouriteMoviesList, setFavouriteMovie, createFavouriteMoviesList} = props;\r\n\r\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n    // @ts-ignore\r\n    const { movieId } = useParams();\r\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n    useEffect(() => {\r\n        const listId = +localStorage.getItem('Favourite Movies list id')!;\r\n\r\n            (async () => {\r\n                //set selected data\r\n                const selectedFilm = await movie.getSelectedFilm(movieId);\r\n                setCurrentMovie(selectedFilm);\r\n\r\n                //set similar data\r\n                const similar = await movie.getSimilarMovies(movieId);\r\n                setSimilarMovieData((similar.results).splice(0, 8));\r\n\r\n                //set favourite data\r\n                await createFavouriteMoviesList(listId);\r\n                const listData = await movie.getList(listId);\r\n                setFavouriteMoviesList(listData.results);\r\n\r\n                if (listData.results.some(id => id.id === +movieId)) {\r\n                    setFavouriteMovie(true);\r\n                } else {\r\n                    setFavouriteMovie(false);\r\n                }\r\n                //set collection\r\n                if (selectedFilm['belongs_to_collection']) {\r\n                    setCollectionId(selectedFilm['belongs_to_collection'].id);\r\n                    const collection = await movie.getCollection(selectedFilm['belongs_to_collection'].id);\r\n                    setCollectionData(collection);\r\n                } else {\r\n                    setCollectionId(null);\r\n                    setCollectionData({});\r\n                }\r\n            })();\r\n        }, [movieId]\r\n    );\r\n\r\n    return (\r\n\r\n        <div>\r\n            <VSelectedMoviePage {...props} movieId={+movieId}/>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: CombinedStateType): MapState => ({\r\n    selectedMovieData: state.MoviePageReducer.selectedMovieData,\r\n    similarMoviesData: state.MoviePageReducer.similarMoviesData,\r\n    collection: state.MoviePageReducer.collection,\r\n    movieCast: state.MoviePageReducer.movieCast,\r\n    reviews: state.MoviePageReducer.reviews,\r\n    favouritesMovies: state.FavouriteMoviesReducer.favouritesMovies\r\n});\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {...actions, ...FMactions}),\r\n)(VSelectedMoviePageContainer)","import {Navigation} from \"./components/Header\";\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {VMoviePage} from \"./pages/MoviePage\";\nimport {Auth} from \"./pages/Auth\";\nimport {BodySC, ContentSC, NavigationWrapperSC} from \"./styles/AppSC\";\nimport FavouriteMoviesPageContainer from \"./pages/FavouritesMoviesPage/FavouriteMoviesPageContainer\";\nimport  VSelectedMoviePageContainer from \"./pages/MoviePage/VSelectedMoviePage/VSelectedMoviePageContainer\";\n\nfunction App() {\n    return (\n        <BodySC>\n            <NavigationWrapperSC>\n                <Navigation/>\n            </NavigationWrapperSC>\n            <ContentSC>\n                <Switch>\n                    <Route path='/Auth' render={() => <Auth/>}/>\n                    <Route exact path='/Vapi' render={() => <VMoviePage/>}/>\n                    <Route path='/home' render={() => <div>home</div>}/>\n                    <Route path='/about' render={() => <div>about</div>}/>\n                    <Route path='/Vapi/movie/:movieId?' render={() => <VSelectedMoviePageContainer/>}/>\n                    <Route path='/favourite' render={() => <FavouriteMoviesPageContainer/>}/>\n                    <Route path=\"/404\" render={() => <div>not found 404</div>}/>\n                    <Redirect exact from=\"/\" to=\"/home\" />\n                    <Redirect to=\"/404\"/>\n                </Switch>\n            </ContentSC>\n        </BodySC>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport MoviePageReducer from \"./MoviePageReducer\";\r\nimport AuthPageReducer from \"./AuthPageReducer\"\r\nimport FavouriteMoviesReducer from \"./FavouriteMoviesReducer\";\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type CombinedStateType = ReturnType<RootReducerType>\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    MoviePageReducer,\r\n    AuthPageReducer,\r\n    FavouriteMoviesReducer\r\n});\r\nexport type InferActionsTypes<T> = T extends { [key: string]: (...args: any[]) => infer U} ? U : never\r\n\r\nexport const store = createStore(rootReducer);\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {store} from \"./redux-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n\r\n    <BrowserRouter>\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </React.StrictMode>\r\n    </BrowserRouter>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}