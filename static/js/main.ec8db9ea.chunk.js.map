{"version":3,"sources":["styles/Loader.module.css","components/Header/styles.js","components/Header/index.jsx","pages/MoviePage/VMoviePageHeader/index.tsx","redux-store/MoviePageReducer.ts","VMoviePageApi/index.ts","pages/MoviePage/VMoviePageHeader/VMoviePageHeaderContainer/index.tsx","pages/MoviePage/VMoviePageBodyContainer/VMoviePageBody/VMoviePageItem/styles.js","pages/MoviePage/VMoviePageBodyContainer/VMoviePageBody/VMoviePageItem/index.tsx","pages/MoviePage/VMoviePageBodyContainer/VMoviePageBody/styles.js","pages/MoviePage/VMoviePageBodyContainer/VMoviePageBody/index.tsx","pages/MoviePage/styles.js","pages/MoviePage/index.js","fire.js","redux-store/AuthPageReducer.ts","components/User/index.jsx","components/Login/index.jsx","components/AuthForm/index.jsx","pages/Auth/index.jsx","pages/MoviePage/VSelectedMoviePage/styles.js","pages/MoviePage/VSelectedMoviePage/VSimilarMovieItem.tsx","pages/MoviePage/VSelectedMoviePage/VModalVideo.tsx","pages/MoviePage/VSelectedMoviePage/CastSC.js","pages/MoviePage/VSelectedMoviePage/VCast.tsx","pages/MoviePage/VSelectedMoviePage/ReviewsSC.js","pages/MoviePage/VSelectedMoviePage/VReviews.tsx","pages/MoviePage/VSelectedMoviePage/VSelectedMoviePage.tsx","redux-store/FavouriteMoviesReducer.ts","pages/MoviePage/VSelectedMoviePage/VSelectedMoviePageContainer.js","styles/AppSC.js","styles/FavouriteMoviesSC.js","pages/FavouritesMoviesPage/FavouriteMovieItem.tsx","pages/FavouritesMoviesPage/FavouriteMoviesPage.tsx","components/Loader/Loader.tsx","pages/FavouritesMoviesPage/FavouriteMoviesPageContainer.tsx","App.js","reportWebVitals.js","redux-store/index.ts","index.js"],"names":["module","exports","NavSC","styled","nav","NavItemSC","NavLink","SpanSC","span","Navigation","to","React","Component","VMoviePageHeader","props","onSearch","searchMovie","searchedMovie","type","onChange","event","target","value","onKeyPress","key","onClick","ON_SEARCH_MOVIE","SET_MOVIES","SET_TOTAL_PAGES","SET_CURRENT_PAGE","SET_CURRENT_MOVIE","SET_SIMILAR_MOVIES","SET_VIDEO_KEY","SET_COLLECTION_ID","SET_COLLECTION_DATA","TOGGLE_VIDEO","SET_CAST","SET_REVIEWS","SET_CURRENT_REVIEW_PAGE","initialState","resultMoviesData","selectedMovieData","similarMoviesData","currentPage","totalPages","videoKey","isTrailerOpen","collection","id","data","movieCast","reviews","setMovieData","movieData","setCurrentPage","page","openModuleVideo","MoviePageReducer","state","action","searchedText","selectedMovie","similarMovieData","collectionId","collectionData","castData","reviewsData","reviewsTotalPages","reviewPage","API_KEY","instance","axios","create","baseURL","list","headers","movie","get","then","res","movieId","listName","post","listId","MovieId","items","delete","compose","connect","setTotalPages","response","results","VMovieItemSC","div","VTitleSC","VMoviePageItem","poster","url","title","src","alt","height","width","VMoviesListSC","VMoviesPagesSC","isActive","VMoviePageBodyContainer","resultMoviesDataArr","map","item","index","poster_path","selectPage","range","totalPagesArr","i","push","mapping","arr","extremePages","num","neighbours","rightLimit","length","filter","pagination","VWrapperSC","VMoviePageContainer","withRouter","match","fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ON_AUTH","OFF_AUTH","isAuth","AuthPageReducer","something","UserContainer","authFlag","onAuth","offAuth","handleLogout","useEffect","Login","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","autoFocus","required","e","AuthForm","useState","user","setUser","setEmailError","setPasswordError","clearErrors","authListener","auth","onAuthStateChanged","signOut","signInWithEmailAndPassword","catch","err","code","message","createUserWithEmailAndPassword","Auth","VWrapperSPSC","VMainMoviePageTitleSC","h1","VSubMoviePageTitleSC","VBackDropSC","InfoSC","InfoContentSC","VGradientSC","WatchMovieSC","button","DescriptionSC","BackdropSectionSC","VoteAvarageSC","VoteScoreCS","score","GenresSC","GenreSC","ProductionSC","ProductionsSC","RecommendedMoviesListSC","SimilarMoviesItemSC","RecommendedTitleSC","ModalWrappSC","VideoFrameSC","VideoCloseSC","CollectionContainerSC","FooterSC","SocialSC","LinkSC","a","FooterWrapperSC","FooterInfoSC","CreatedSC","MailSC","VSimilarMovieItem","setSimilarMovieData","setCurrentMovie","similar","splice","VModalVideoContainer","isTrailer","setVideoKey","video","sort","name","includes","alert","frameBorder","allow","allowFullScreen","CastAvatarSC","AvatarsListSC","CastItemSC","NameSC","CharacterSC","CastTitleSC","CastWrapperSC","VCast","setCast","cast","movieCastArr","character","VCastItem","WrapperSC","AvatarSC","img","attrs","BodySC","DateSC","ContentSC","isHidden","ToggleSC","ReviewSectionSC","ReviewTitleSC","PaginationSC","PaginationItemSC","NoCommSC","VReviews","setReviews","setCurrentReviewPage","reviewsList","ReviewItem","author","date","author_details","content","myRef","useRef","current","scrollIntoView","ref","VReviewsMemo","memo","avatar_path","noSrc","isOpen","setStyle","slice","indexOf","VSelectedMoviePage","original_title","vote_average","overview","backdrop_path","status","genres","production_companies","release_date","favouritesMovies","createFavouriteMoviesList","setFavouriteMoviesList","setFavouriteMovie","backdrop","similarMovies","production","forEach","join","split","addToFavourite","listData","localStorage","setItem","releaseDate","genresArr","genresFunc","isFavourite","href","size","CREATE_FAVOURITE_MOVIES_LIST","SET_FAVOURITE_MOVIES_LIST","SET_AS_FAVOURITE","isCreated","FavouriteMoviesReducer","VSelectedMoviePageWithRouter","setCollectionId","setCollectionData","getItem","params","selectedFilm","some","VSelectedMoviePageContainer","NavigationWrapperSC","ListWrapperSC","PageTitleSC","ListSC","BackdropSC","bg","TitleSC","SortSC","WrapperItemSC","HoveredSC","flag","EmptyListSC","p","FavouriteMovieItem","removeFromFavourite","hover","setHover","handler","setHandler","onMouseEnter","onMouseLeave","xmlns","fill","stroke","className","viewBox","d","FavouriteMoviePage","setType","b","popularity","reverse","Loader","s","wrapper","loader","fetching","setFetching","App","path","render","exact","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec8db9ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__3dEX5\",\"loader\":\"Loader_loader__18c6w\",\"lds-ring\":\"Loader_lds-ring__3j2Q3\"};","import styled from 'styled-components';\nimport {NavLink} from \"react-router-dom\";\n\n\nexport const NavSC = styled.nav`\nposition: fixed;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nheight: 100%;\nalign-items: center;\nwidth: 90px;\nborder-right: 1px solid white;\nz-index: 9999;\nbackground: black;\n`;\n\nexport const NavItemSC = styled(NavLink)`\n\n`;\n\nexport const SpanSC = styled.span`\ncolor:#fff\n`;","import React from 'react';\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faAddressCard, faHome} from '@fortawesome/free-solid-svg-icons'\n\n\nimport {} from './styles';\nimport {NavItemSC} from \"./styles\";\nimport {SpanSC} from \"./styles\";\nimport {NavSC} from \"./styles\";\n\n\nexport class Navigation extends React.Component {\n\n    render() {\n\n        return (\n            <NavSC>\n                {/*<NavItemSC to=\"/home\"><FontAwesomeIcon icon={faHome} color='white' /> <SpanSC>Home</SpanSC></NavItemSC>*/}\n                <NavItemSC to=\"/Vapi\"><SpanSC>Main Page</SpanSC></NavItemSC>\n                {/*<NavItemSC to=\"/about\"><FontAwesomeIcon icon={faAddressCard} color='white' /><SpanSC> About</SpanSC></NavItemSC>*/}\n                <NavItemSC to=\"/favourite\"><SpanSC> Favourite Movies</SpanSC></NavItemSC>\n            </NavSC>\n        )\n    }\n}","import React from 'react'\r\n\r\ntype PropsType = {\r\n    onSearch: () => void\r\n    searchMovie: (searchedMovie: string) => void\r\n    searchedMovie: string\r\n}\r\n\r\nexport const VMoviePageHeader: React.FC<PropsType> = (props) => {\r\n\r\n    const {onSearch, searchMovie, searchedMovie} = props;\r\n\r\n    const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        searchMovie(event.target.value)\r\n    };\r\n\r\n    const onKeyHandler = (event: React.KeyboardEvent) => {\r\n        if(event.key === 'Enter') {\r\n            onSearch();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" onChange={onInputChange} onKeyPress={onKeyHandler} value={searchedMovie}/>\r\n            <button onClick={onSearch}>search</button>\r\n        </div>\r\n    )\r\n};","import {\r\n    CastPersonType,\r\n    CollectionType,\r\n    MovieBySearch,\r\n    MovieItemType,\r\n    ReviewDetails,\r\n    SelectedMovieType\r\n} from \"../types/types\";\r\n\r\nconst ON_SEARCH_MOVIE = 'ON_SEARCH_MOVIE';\r\nconst SET_MOVIES = 'SET_MOVIES';\r\nconst SET_TOTAL_PAGES = 'SET_TOTAL_PAGES';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_CURRENT_MOVIE = 'SET_CURRENT_MOVIE';\r\nconst SET_SIMILAR_MOVIES = 'SET_SIMILAR_MOVIES';\r\nconst SET_VIDEO_KEY = 'SET_VIDEO_KEY';\r\nconst SET_COLLECTION_ID = 'SET_COLLECTION_ID';\r\nconst SET_COLLECTION_DATA = 'SET_COLLECTION_DATA';\r\nconst TOGGLE_VIDEO = 'TOGGLE_VIDEO';\r\nconst SET_CAST = 'SET_CAST';\r\nconst SET_REVIEWS = 'SET_REVIEWS';\r\nconst SET_CURRENT_REVIEW_PAGE = 'SET_CURRENT_REVIEW_PAGE';\r\n\r\n\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nlet initialState = {\r\n    searchedMovie: '' as string,\r\n    resultMoviesData: [] as Array<MovieItemType>,\r\n    selectedMovieData: {} as SelectedMovieType,\r\n    similarMoviesData: [] as Array<MovieBySearch>,\r\n    currentPage: null as number | null,\r\n    totalPages: null as number | null,\r\n    videoKey: null as string | null,\r\n    isTrailerOpen: false,\r\n    collection: {\r\n        id: null as number | null,\r\n        data: {} as CollectionType\r\n    },\r\n    movieCast: [] as Array<CastPersonType>,\r\n    reviews: {\r\n        data: [] as Array<ReviewDetails>,\r\n        currentPage: 1,\r\n        totalPages: null as number | null,\r\n    },\r\n\r\n};\r\n\r\n const MoviePageReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ON_SEARCH_MOVIE:\r\n            return {...state, searchedMovie: action.searchedText};\r\n        case SET_MOVIES:\r\n            return {...state, resultMoviesData: action.movieData};\r\n        case SET_CURRENT_MOVIE:\r\n            return {...state, selectedMovieData: action.selectedMovie};\r\n        case SET_TOTAL_PAGES:\r\n            return {...state, totalPages: action.totalPages};\r\n        case SET_SIMILAR_MOVIES:\r\n            return {...state, similarMoviesData: action.similarMovieData};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.page};\r\n        case SET_COLLECTION_ID:\r\n            return {...state, collection: {...state.collection, id: action.collectionId}};\r\n        case SET_COLLECTION_DATA:\r\n            return {...state, collection: {...state.collection, data: action.collectionData}};\r\n        case SET_VIDEO_KEY:\r\n            return {...state, videoKey: action.videoKey};\r\n        case TOGGLE_VIDEO:\r\n            return {...state, isTrailerOpen: !state.isTrailerOpen};\r\n        case SET_CAST:\r\n            return {...state, movieCast: action.castData};\r\n        case SET_REVIEWS:\r\n            return {\r\n                ...state,\r\n                reviews: {\r\n                    ...state.reviews,\r\n                    data: action.reviewsData,\r\n                    totalPages: action.reviewsTotalPages\r\n                }\r\n            };\r\n        case SET_CURRENT_REVIEW_PAGE:\r\n            return {\r\n                ...state,\r\n                reviews: {\r\n                    ...state.reviews,\r\n                    currentPage: action.reviewPage,\r\n                }\r\n            };\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\ntype TSearchMovie = {type: typeof ON_SEARCH_MOVIE, searchedText: string}\r\nexport const searchMovie = (searchedText: string): TSearchMovie => ({type: ON_SEARCH_MOVIE, searchedText});\r\ntype TSetMovieData = {type: typeof SET_MOVIES, movieData: Array<MovieItemType>}\r\nexport const setMovieData = (movieData: Array<MovieItemType>):TSetMovieData  => ({type: SET_MOVIES, movieData});\r\ntype TSetSimilarMovieData = {type: typeof SET_SIMILAR_MOVIES, similarMovieData: Array<MovieBySearch>}\r\nexport const setSimilarMovieData = (similarMovieData: Array<MovieBySearch>): TSetSimilarMovieData => ({type: SET_SIMILAR_MOVIES, similarMovieData});\r\ntype TSetTotalPages = {type: typeof SET_TOTAL_PAGES, totalPages: number}\r\nexport const setTotalPages = (totalPages: number): TSetTotalPages => ({type: SET_TOTAL_PAGES, totalPages});\r\ntype TSetCurrentPage = {type: typeof SET_CURRENT_PAGE, page: number}\r\nexport const setCurrentPage = (page: number): TSetCurrentPage => ({type: SET_CURRENT_PAGE, page});\r\ntype TSetCurrentMovie = {type: typeof SET_CURRENT_MOVIE, selectedMovie: SelectedMovieType}\r\nexport const setCurrentMovie = (selectedMovie: SelectedMovieType):TSetCurrentMovie  => ({type: SET_CURRENT_MOVIE, selectedMovie});\r\ntype TSetCollectionId = {type: typeof SET_COLLECTION_ID, collectionId: number}\r\nexport const setCollectionId = (collectionId: number):TSetCollectionId  => ({type: SET_COLLECTION_ID, collectionId});\r\ntype TSetCollectionData =  {type: typeof SET_COLLECTION_DATA, collectionData: CollectionType}\r\nexport const setCollectionData = (collectionData: CollectionType):TSetCollectionData => ({type: SET_COLLECTION_DATA, collectionData});\r\ntype TSetCast = {type: typeof SET_CAST, castData:Array<CastPersonType>}\r\nexport const setCast = (castData: Array<CastPersonType>): TSetCast => ({type: SET_CAST, castData});\r\ntype TSetReviews = {type: typeof SET_REVIEWS, reviewsData: Array<ReviewDetails>, reviewsTotalPages: number}\r\nexport const setReviews = (reviewsData: Array<ReviewDetails>, reviewsTotalPages: number): TSetReviews=> ({type: SET_REVIEWS, reviewsData, reviewsTotalPages});\r\ntype TSetCurrentReviewPage = {type: typeof SET_CURRENT_REVIEW_PAGE, reviewPage: number}\r\nexport const setCurrentReviewPage = (reviewPage: number): TSetCurrentReviewPage => ({type: SET_CURRENT_REVIEW_PAGE, reviewPage});\r\ntype TSetVideoKey = {type: typeof SET_VIDEO_KEY, videoKey: string | null}\r\nexport const setVideoKey = (videoKey: string | null): TSetVideoKey => ({type: SET_VIDEO_KEY, videoKey});\r\ntype TOpenModuleVideo = {type: typeof TOGGLE_VIDEO}\r\nexport const openModuleVideo = (): TOpenModuleVideo => ({type: TOGGLE_VIDEO});\r\n\r\ntype ActionsType = TSearchMovie | TSetMovieData | TSetSimilarMovieData | TSetTotalPages | TSetCurrentPage | TSetCurrentMovie | TSetCollectionId | TSetCollectionData\r\n| TSetCast | TSetReviews | TSetCurrentReviewPage | TSetVideoKey | TOpenModuleVideo\r\n\r\nexport default MoviePageReducer","import axios from \"axios\";\r\nimport {CastPersonType, CollectionType, MovieBySearch, ReviewDetails, SelectedMovieType} from \"../types/types\";\r\n\r\nconst API_KEY = '5b9377492f02937b4e7cf2b6508ab19f';\r\nconst ACCESS_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYmYiOjE2MTYxNzA1NjEsImF1ZCI6IjViOTM3NzQ5MmYwMjkzN2I0ZTdjZjJiNjUwOGFiMTlmIiwianRpIjoiMjkxNDIzNyIsInNjb3BlcyI6WyJhcGlfcmVhZCIsImFwaV93cml0ZSJdLCJ2ZXJzaW9uIjoxLCJzdWIiOiI2MDJlN2ZiYjIyM2UyMDAwM2U5ODU2ODUifQ.BaLxvYlC7YsKu-tmY6dMv2nYkRzlbTeYElXT4V3e_Rw'\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/',\r\n\r\n});\r\nexport const list = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/4/list/',\r\n    headers: {\r\n        \"authorization\": `Bearer ${ACCESS_KEY}`,\r\n        \"content-type\": \"application/json;charset=utf-8\",\r\n\r\n    }\r\n});\r\n\r\n\r\nexport const movie = {\r\n    getFilmsBySearch(searchedMovie: string, currentPage: number) {\r\n        return instance.get<MoviesBySearchType>(`search/movie?api_key=${API_KEY}&language=en-US&query=${searchedMovie}&page=${currentPage}&include_adult=false`).then(res => res.data)\r\n    },\r\n    getSelectedFilm(movieId: number) {\r\n        return instance.get<SelectedMovieType>(`movie/${movieId}?api_key=${API_KEY}&language=en-US`).then(res => res.data)\r\n    },\r\n\r\n    getSimilarMovies(movieId: number) {\r\n        return instance.get<SimilarMoviesType>(`/movie/${movieId}/recommendations?api_key=${API_KEY}&language=en-US&page=1`).then(res => res.data)\r\n    },\r\n    getVideo(movieId: number) {\r\n        return instance.get<VideoType>(`/movie/${movieId}/videos?api_key=${API_KEY}&language=en-US`).then(res => res.data)\r\n    },\r\n    getCollection(collectionId: number) {\r\n        return instance.get<CollectionType>(`/collection/${collectionId}?api_key=${API_KEY}&language=en-US`).then(res => res.data)\r\n    },\r\n    getCastAndCrew(collectionId: number) {\r\n        return instance.get<CastType>(`/movie/${collectionId}/credits?api_key=${API_KEY}&language=en-US`).then(res => res.data)\r\n    },\r\n    getReviews(movieId: number, currentPage: number) {\r\n        return instance.get<ReviewsType>(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=${currentPage}`).then(res => res.data)\r\n    },\r\n    setList(listName: string) {\r\n        return list.post(`https://api.themoviedb.org/4/list`, {\r\n            \"name\": listName,\r\n            \"iso_639_1\": \"en\"\r\n        })\r\n    },\r\n    getList(listId: number) {\r\n        return list.get<ListType>(`${listId}?page=1&api_key=${API_KEY}`).then(res => res.data)\r\n    },\r\n    updateList(listId: number, MovieId: number) {\r\n        return list.post(`${listId}/items`, {\r\n            items: [\r\n                {\r\n                    \"media_type\": \"movie\",\r\n                    \"media_id\": MovieId\r\n                },\r\n            ]\r\n        })\r\n    },\r\n    removeItems(listId: number, MovieId: number) {\r\n        return list.delete(`${listId}/items`, {\r\n            data: {\r\n                items: [\r\n                    {\r\n                        \"media_type\": \"movie\",\r\n                        \"media_id\": MovieId\r\n                    }\r\n                ]\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport type MoviesBySearchType = {\r\n    page: number\r\n    results: Array<MovieBySearch>\r\n    total_pages: number\r\n    total_results: number\r\n}\r\ntype SimilarMoviesType = {\r\n    page: number\r\n    results: Array<MovieBySearch>\r\n    total_pages: number\r\n    total_results: number\r\n}\r\ntype VideoType = {\r\n    id: number\r\n    results: Array<{\r\n        id: string\r\n        iso_639_1: string\r\n        iso_3166_1: string\r\n        key: string\r\n        name: string\r\n        site: string\r\n        size: number\r\n        type: string\r\n    }>\r\n}\r\ntype CastType = {\r\n    id: number\r\n    cast: Array<CastPersonType>\r\n    crew: Array<object>\r\n}\r\ntype ReviewsType = {\r\n    id: number\r\n    page: number\r\n    results: Array<ReviewDetails>\r\n    total_pages: number\r\n    total_results: number\r\n}\r\ntype ListType = {\r\n    average_rating: number\r\n    backdrop_path: null | string\r\n    comments: object\r\n    created_by: {gravatar_hash: string, id: string, name: string, username: string}\r\n    description: string\r\n    id: number\r\n    iso_639_1: string\r\n    iso_3166_1: string\r\n    name: string\r\n    object_ids: object\r\n    page: number\r\n    poster_path: null | string\r\n    public: boolean\r\n    results: Array<MovieBySearch>\r\n    length: number\r\n    revenue: number\r\n    runtime: number\r\n    sort_by: string\r\n    total_pages: number\r\n    total_results: number\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {VMoviePageHeader} from \"../index\";\r\nimport {searchMovie, setCurrentPage, setMovieData, setTotalPages} from \"../../../../redux-store/MoviePageReducer\";\r\nimport {movie} from \"../../../../VMoviePageApi\";\r\nimport {CombinedStateType} from '../../../../redux-store';\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStatePropsType = {\r\n    searchedMovie: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    setMovieData: (movieData: {}) => void\r\n    setTotalPages: (totalPages: number) => void\r\n    setCurrentPage: (page: number) => void\r\n    searchMovie: (searchedMovie: string) => void\r\n}\r\n\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType\r\n\r\nconst VMoviePageHeaderAPI: React.FC<PropsType> = (props) => {\r\n\r\n    const {searchedMovie, setMovieData, setTotalPages, setCurrentPage} = props;\r\n\r\n   let onSearch = () => {\r\n        movie.getFilmsBySearch(searchedMovie, 1)\r\n            .then(response => {\r\n                setCurrentPage(1);\r\n                setMovieData(response.results);\r\n                setTotalPages(response['total_pages']);\r\n            });\r\n    };\r\n        return (\r\n            <div>\r\n                <VMoviePageHeader {...props} onSearch={onSearch}/>\r\n            </div>\r\n        )\r\n};\r\n\r\nlet mapStateToProps = (state: CombinedStateType):MapStatePropsType => ({\r\n    searchedMovie: state.MoviePageReducer.searchedMovie,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {searchMovie, setMovieData, setTotalPages, setCurrentPage}))\r\n(VMoviePageHeaderAPI as React.FC)\r\n\r\n","import styled from 'styled-components'\r\n\r\nexport const VMovieItemSC = styled.div`\r\n    height: 480px;\r\n    border: 1px solid black;\r\n    position: relative;\r\n    margin: 0 0 45px 0;\r\n    \r\n`;\r\nexport const VTitleSC = styled.div`\r\n    position: absolute;\r\n \r\n`;\r\n","import React from 'react'\r\nimport {VMovieItemSC, VTitleSC} from \"./styles\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    poster: string\r\n    url: string\r\n    id: number\r\n    title: string\r\n}\r\n\r\nexport const VMoviePageItem: React.FC<PropsType> = (props) => {\r\n    const {poster, url, id, title} = props;\r\n\r\n    let src = `https://image.tmdb.org/t/p/w300/${poster}`;\r\n    return (\r\n        <NavLink to={url + '/movie/' + id}>\r\n                <VMovieItemSC src={src}>\r\n                    <img\r\n                        src={poster ? src : 'https://prikolnye-kartinki.ru/img/picture/Sep/23/9d857169c84422fdaa28df62667a1467/8.jpg'}\r\n                        alt=\"\" height='100%' width='300'/>\r\n                    <VTitleSC>{title}</VTitleSC>\r\n                </VMovieItemSC>\r\n        </NavLink>\r\n    )\r\n};","import styled from 'styled-components'\r\n\r\nexport const VMoviesListSC = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    justify-content: space-around;\r\n`;\r\n\r\nexport const VMoviesPagesSC = styled.span`\r\n    font-weight: ${props => props.isActive};\r\n    margin-left: 2px;\r\n    color: #fff;\r\n`;\r\n\r\nexport const Page = styled.span`\r\ncolor: #fff;\r\n`;","import React from 'react'\r\nimport {VMoviePageItem} from \"./VMoviePageItem\";\r\nimport {connect} from \"react-redux\";\r\nimport {VMoviesListSC, VMoviesPagesSC} from \"./styles\";\r\nimport {setCurrentPage, setMovieData} from \"../../../../redux-store/MoviePageReducer\";\r\nimport {movie} from \"../../../../VMoviePageApi\";\r\nimport {CombinedStateType} from \"../../../../redux-store\";\r\nimport { MovieItemType } from '../../../../types/types';\r\n\r\n\r\ntype MapStatePropsType = {\r\n    searchedMovie: string\r\n    totalPages: number | null\r\n    resultMoviesData: Array<MovieItemType>\r\n    currentPage: number | null\r\n\r\n}\r\ntype OwnPropsType = {\r\n    url: string\r\n}\r\ntype MapDispatchPropsType = {\r\n    setCurrentPage: (page: number) => void\r\n    setMovieData: (MovieData: object[]) => void\r\n}\r\n\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType & OwnPropsType\r\n\r\n\r\n\r\nconst VMoviePageBody: React.FC<PropsType> = (props) => {\r\n\r\n    const {totalPages, resultMoviesData, setCurrentPage, searchedMovie, setMovieData, currentPage, url} = props;\r\n\r\n    let resultMoviesDataArr = resultMoviesData.map((item, index) => <VMoviePageItem poster={item.poster_path}\r\n                                                                                    id={item.id}\r\n                                                                                    url={url}\r\n                                                                                    title={item.title}\r\n                                                                                    key={index}\r\n    /> );\r\n\r\n\r\n\r\n    const pagination = (range: number) => {\r\n        const totalPagesArr = [];\r\n        if(totalPages !== null)\r\n        for (let i = 1; i <= totalPages; i++) {\r\n            totalPagesArr.push(i)\r\n        }\r\n        const mapping = (arr: Array<number>) => arr.map(\r\n            (item, index) =>\r\n                <VMoviesPagesSC key={index} onClick={() => selectPage(item)} isActive={item === currentPage ? '800' : '500'}>\r\n                    {item}\r\n                </VMoviesPagesSC>\r\n        );\r\n        const extremePages = (num: number) => <VMoviesPagesSC onClick={() => selectPage(num)}>{num}</VMoviesPagesSC>;\r\n        const neighbours = (range - 1) / 2;\r\n        const rightLimit = totalPagesArr.length - neighbours;\r\n        if(currentPage !== null)\r\n        if (currentPage >= neighbours + 1 && currentPage < rightLimit) {\r\n            return (\r\n                <div>\r\n                    {\r\n                         currentPage >= neighbours + 2 ? extremePages(1) : ''\r\n                    }\r\n                    {\r\n                        mapping(totalPagesArr.filter(i => i >= currentPage - neighbours && i <= currentPage + neighbours))\r\n                    }\r\n                    {extremePages(totalPagesArr.length)}\r\n                </div>\r\n            )\r\n        } else if (currentPage < neighbours + 1) {\r\n            return (\r\n                <div>\r\n                    {\r\n                        mapping(totalPagesArr.filter(i => i <= range))\r\n                    }\r\n                    {currentPage !== null && extremePages(totalPagesArr.length)}\r\n                </div>\r\n            )\r\n        } else if (currentPage >= rightLimit) {\r\n            return (\r\n                <div>\r\n                    {extremePages(1)}\r\n                    {\r\n                        mapping(totalPagesArr.filter(i => i >= (totalPagesArr.length - neighbours * 2) && i <= totalPagesArr.length))\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    let selectPage = (item: number) => {\r\n        setCurrentPage(item);\r\n        movie.getFilmsBySearch(searchedMovie, item)\r\n            .then((response) => {\r\n                setMovieData(response.results);\r\n            })\r\n    };\r\n    return (\r\n        <>\r\n            {\r\n                pagination(9)\r\n            }\r\n            <VMoviesListSC>\r\n                {resultMoviesDataArr}\r\n            </VMoviesListSC>\r\n        </>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state: CombinedStateType): MapStatePropsType => ({\r\n    resultMoviesData: state.MoviePageReducer.resultMoviesData,\r\n    totalPages: state.MoviePageReducer.totalPages,\r\n    searchedMovie: state.MoviePageReducer.searchedMovie,\r\n    currentPage: state.MoviePageReducer.currentPage,\r\n});\r\n\r\nexport const VMoviePageBodyContainer = connect(mapStateToProps, {setCurrentPage, setMovieData})(VMoviePageBody as React.FC);","import styled from 'styled-components'\r\n\r\nexport let VmaxWidth = 100;\r\n\r\nexport const VWrapperSC = styled.div`\r\n    max-width: ${VmaxWidth}%;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n`;\r\n\r\n","import React from 'react';\r\nimport VMoviePageHeaderAPI from \"./VMoviePageHeader/VMoviePageHeaderContainer\";\r\nimport {VMoviePageBodyContainer} from \"./VMoviePageBodyContainer/VMoviePageBody\";\r\nimport {VWrapperSC} from \"./styles\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst VMoviePage = (props) => {\r\n    return (\r\n        <VWrapperSC>\r\n            <VMoviePageHeaderAPI/>\r\n            <VMoviePageBodyContainer url={props.match.url}/>\r\n        </VWrapperSC>\r\n    )\r\n};\r\n\r\n\r\nexport const VMoviePageContainer = withRouter(VMoviePage);","import firebase from 'firebase';\n\n\nlet firebaseConfig = {\n    apiKey: \"AIzaSyAuk10owd8HSTuUHi4Xnwg6oEp7KyfFVnI\",\n    authDomain: \"dva-react-app.firebaseapp.com\",\n    projectId: \"dva-react-app\",\n    storageBucket: \"dva-react-app.appspot.com\",\n    messagingSenderId: \"450946863814\",\n    appId: \"1:450946863814:web:df289356c0822259c97dc7\",\n    measurementId: \"G-HW787PQNGC\"\n\n};\nconst fire = firebase.initializeApp(firebaseConfig);\nexport default fire;","const ON_AUTH = \"ON_AUTH\";\nconst OFF_AUTH = \"OFF_AUTH\";\n\ntype InitialStateType = {\n    isAuth: boolean,\n}\n\nlet initialState: InitialStateType = {\n    isAuth: false,\n\n};\n\nconst AuthPageReducer = (state:InitialStateType = initialState, action: any): InitialStateType => {\n    switch (action.type) {\n        case ON_AUTH:\n            return {...state, isAuth: action.something};\n\n        case OFF_AUTH:\n            return {...state, isAuth: false};\n\n        default:\n            return {...state}\n\n    }\n};\n\ntype OnAuthType = {\n    type: typeof ON_AUTH\n}\n\nexport const onAuth = (): OnAuthType => ({type: ON_AUTH});\n\nexport const offAuth = () => ({type: OFF_AUTH});\n\nexport default AuthPageReducer\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { onAuth, offAuth } from '../../redux-store/AuthPageReducer'\n\n\nconst User = (props) => {\n    const { handleLogout } = props;\n\n\n    useEffect(() => {\n        props.onAuth()\n    }, []\n    )\n    return (\n        <section>\n            <h2>Welcome</h2>\n            <button onClick={() => handleLogout()}>Logout</button>\n        </section>\n    )\n}\nconst mapStateToProps = (state) => ({\n    authFlag: state.AuthPageReducer.isAuth,\n})\nexport const UserContainer = connect(mapStateToProps, { onAuth, offAuth })(User);","import React from 'react';\n\nexport const Login = (props) => {\n\n    const { email, setEmail, password, setPassword, handleLogin, handleSignup, hasAccount, setHasAccount, emailError, passwordError } = props;\n\n    return (\n        <section>\n            <div>\n                <label>Username</label>\n                <input type=\"text\"\n                    autoFocus\n                    required\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)} />\n                <p>{emailError}</p>\n                <label>Password</label>\n                <input\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)} />\n                <p>{passwordError}</p>\n\n                <div>\n                    {hasAccount ? (\n                        <>\n                            <button onClick={handleLogin}>Sign in</button>\n                            <p>\n                                Dont have an account?\n                                    <span onClick={() => setHasAccount(!hasAccount)}>Sign Up</span>\n                            </p>\n                        </>\n                    ) : (\n                            <>\n                                <button onClick={handleSignup}>Sign Up</button>\n                                <p>\n                                    Have an account?\n                                    <span onClick={() => setHasAccount(!hasAccount)}>Sign In</span>\n                                </p>\n                            </>\n                        )\n                    }\n\n                </div>\n            </div>\n        </section>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport fire from '../../fire'\nimport { UserContainer } from '../User'\nimport { Login } from '../Login';\n\nexport const AuthForm = () => {\n    const [user, setUser] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [hasAccount, setHasAccount] = useState('');\n\n\n    const clearInputs = () => {\n        setEmail('');\n        setPassword('');\n    };\n\n    const clearErrors = () => {\n        setEmailError('');\n        setPasswordError('');\n    };\n\n    const handleLogin = () => {\n        clearErrors();\n        fire\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .catch(err => {\n                switch (err.code) {\n                    case \"auth/invalid-email\":\n                    case \"auth/user-disabled\":\n                    case \"auth/user-not-found\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/wrong-password\":\n                        setPasswordError(err.message);\n                }\n            })\n    };\n\n    const handleSignup = () => {\n        clearErrors();\n        fire\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .catch(err => {\n                switch (err.code) {\n                    case \"auth/email-already-in-use\":\n                    case \"auth/invalid-email\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/weak-password\":\n                        setPasswordError(err.message);\n                }\n            })\n\n    };\n\n    const handleLogout = () => {\n        fire.auth().signOut();\n    };\n\n    const authListener = () => {\n        fire.auth().onAuthStateChanged(user => {\n            if (user) {\n                clearInputs();\n                setUser(user)\n            } else {\n                setUser('')\n            }\n        })\n    }\n\n    useEffect(() => {\n        authListener();\n\n    }, []\n\n    );\n\n    return (\n        <div>\n            {user ? (\n                <UserContainer handleLogout={handleLogout} />\n            ) : (\n                    <Login\n                        email={email}\n                        setEmail={setEmail}\n                        password={password}\n                        setPassword={setPassword}\n                        handleLogin={handleLogin}\n                        handleSignup={handleSignup}\n                        hasAccount={hasAccount}\n                        setHasAccount={setHasAccount}\n                        emailError={emailError}\n                        passwordError={passwordError}\n                    />\n                )}\n        </div>\n    )\n};\n\n","import React from 'react';\nimport { AuthForm } from '../../components/AuthForm';\n\nexport class Auth extends React.Component {\n    render() {\n\n        return (\n            <div>\n                <AuthForm />\n            </div>\n        )\n    }\n} ","import styled from 'styled-components'\r\nimport {VWrapperSC} from \"../styles\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nexport const VWrapperSPSC = styled(VWrapperSC)`\r\n    box-shadow: 1px 1px 50px 20px #000000;\r\n    border-radius: 15px 15px 0 0;\r\n    background: linear-gradient(270deg, rgba(20,20,20,1) 0%, rgba(0,0,0,1) 100%);\r\n    \r\n`;\r\n\r\nexport const VMainMoviePageTitleSC = styled.h1`\r\n    color: #fff;\r\n    margin: 20px 0 2px 0;\r\n    padding: 0;\r\n`;\r\nexport const VSubMoviePageTitleSC = styled.div`\r\n    font-size: 18px;\r\n    color: #fff;\r\n    opacity: 80%;\r\n    padding-left: 5px;\r\n    \r\n`;\r\n\r\nexport const VBackDropSC = styled.div`\r\n    border-radius: 2px 15px 0 0;\r\n    background: url(${props => props.src}) center center;\r\n    height: 700px;\r\n    background-size: cover;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    position: relative;\r\n    box-shadow: inset 4px -36px 6px -30px #000000;\r\n`;\r\nexport const InfoSC = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 470px;\r\n    background: black;\r\n    position: relative;\r\n    z-index: 999;\r\n    \r\n`;\r\n\r\nexport const InfoContentSC = styled.div`\r\n    position: absolute;\r\n    padding: 20px;\r\n    width: 600px;\r\n    margin: 0;\r\n    \r\n`;\r\nexport const VGradientSC = styled.div`\r\n    background: rgb(0,0,0);\r\n    background: linear-gradient(90deg, rgba(0, 0, 0, 1) 20%, rgba(255, 255, 255, 0) 60%);\r\n    height: 100%;\r\n    width: 900px;   \r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n`;\r\nexport const WatchMovieSC = styled.button`\r\n    width: 150px;\r\n    background: transparent;\r\n    outline: none;\r\n    border: 1px solid ${`#a90000`};\r\n    color: white;\r\n    height: 45px;\r\n    margin-top: 40px;\r\n    margin-left: 40px;\r\n    position: relative;\r\n    border-radius: 5px;\r\n    &:before {\r\n    content:'';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 0;\r\n    height: 42px;\r\n    background: rgba(255,255,255,0.1);\r\n    border-radius: 3px;\r\n    transition: all .5s ease;\r\n    }\r\n    &:hover:before {\r\n    width: 100%;\r\n    }\r\n    &:hover {\r\n      cursor: pointer; \r\n    }\r\n`;\r\nexport const DescriptionSC = styled.div`\r\n      color: #fff;  \r\n      font-size: 20px;\r\n      text-shadow: 5px 3px 9px rgba(0, 0, 0, 1);\r\n      padding-left: 5px;\r\n      font-weight: 500;\r\n`;\r\nexport const BackdropSectionSC = styled.div`\r\n    display: flex;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    box-shadow: 1px 13px 20px 5px #000000;\r\n`;\r\nexport const VoteAvarageSC = styled.div`\r\n    margin: 10px 0;\r\n    color: white;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    padding-left: 5px;\r\n\r\n`;\r\nexport const VoteScoreCS = styled.span`\r\n\r\n    color: ${props => {\r\n    if (props.score <= 3.9) {\r\n        return '#FF0000'\r\n    } else if (props.score >= 4 && props.score <= 5.9) {\r\n        return '#FF6600'\r\n    } else if (props.score >= 6 && props.score <= 7.9) {\r\n        return '#FFFF00'\r\n    } else if (props.score >= 8 && props.score <= 9.9) {\r\n        return '#66E100'\r\n    } else {\r\n        return '#00CC00'\r\n    }\r\n}}\r\n`;\r\n\r\nexport const GenresSC = styled.div`\r\n    padding-left: 5px;\r\n    margin-top: 10px;\r\n`;\r\nexport const GenreSC = styled(NavLink)`\r\n    opacity: 80%;\r\n    padding-left: 5px;\r\n    color: #ffffff;\r\n    &:hover {\r\n    opacity: 100%;\r\n    color: ${`#a90000`};\r\n    }\r\n`;\r\nexport const ProductionSC = styled.span`\r\n    font-size: 12px;\r\n    margin-left: 4px;\r\n    color: #fff;\r\n    opacity: 80%;\r\n`;\r\nexport const ProductionsSC = styled(GenresSC)`\r\n    margin-bottom: 10px;\r\n`;\r\nexport const RecommendedMoviesListSC = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin-top: 20px;\r\n    max-width: 1700px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const SimilarMoviesItemSC = styled(NavLink)`\r\n    margin: 4px 12px;\r\n    background-image: url(${props => props.poster}); \r\n    background-size: cover;\r\n    height: 270px;\r\n    width: 180px;\r\n    &:hover {\r\n    transform: scale(1.1,1.1);\r\n    transition: .2s ease;\r\n    }\r\n    transition: .2s ease;\r\n\r\n`;\r\nexport const RecommendedTitleSC = styled.div`\r\n    color: #ffffff;\r\n    font-size: 24px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-weight: 500;\r\n    margin-bottom: 30px;\r\n`;\r\n\r\n\r\n//video\r\nexport const ModalWrappSC = styled.div`\r\n    top: 0;\r\n    position: fixed;\r\n    height: 100vh;\r\n    width: 100%;\r\n    z-index: 999999;\r\n    background: rgba(0,0,0, 0.9);\r\n`;\r\nexport const VideoFrameSC = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin-right: -50%;\r\n    transform: translate(-50%, -50%)\r\n`;\r\nexport const VideoCloseSC = styled.div`\r\n    top: 14px;\r\n    right: -54px;\r\n   width: 32px;\r\n   height: 32px;\r\n   position: absolute;\r\n   opacity: 70%;\r\n   &:before {\r\n        content: '';\r\n        width: 2px;\r\n        height: 33px;\r\n        background: white;\r\n        left: 15px;\r\n        position: absolute;\r\n        transform: rotate(45deg);\r\n   }\r\n   &:after {\r\n        content: '';\r\n        width: 2px;\r\n        height: 33px;\r\n                left: 15px;\r\n        background: white;\r\n        position: absolute;\r\n        transform: rotate(-45deg);\r\n   }\r\n   &:hover{\r\n    opacity: 1;\r\n    }\r\n`;\r\n\r\nexport const CollectionContainerSC = styled.div`\r\n        color: white;\r\n        padding-left: 10px;\r\n        margin-top: 4px;\r\n        font-size: 16px;\r\n        opacity: 0.8;\r\n    `;\r\n// FOOTER\r\n\r\nexport const FooterSC = styled.div`\r\n    background: ${`#292828`};\r\n    padding: 20px;\r\n\r\n`;\r\nexport const SocialSC = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100%;\r\n    color: white;\r\n    max-width: 100px;\r\n    width: 100%;\r\n    justify-content: space-around;\r\n`;\r\nexport const LinkSC = styled.a`\r\n    color: white;\r\n    display: block;\r\n`;\r\nexport const FooterWrapperSC = styled.div`\r\n    max-width: 1400px;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\nexport const FooterInfoSC = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\nexport const CreatedSC = styled.span`\r\n    color: white;\r\n    opacity: 80%;\r\n    font-weight: 500;\r\n    margin: 4px 0;\r\n`;\r\nexport const MailSC = styled.span`\r\n    color: white;\r\n    font-weight: 500;\r\n`;","import React from 'react'\r\nimport {SimilarMoviesItemSC} from \"./styles\";\r\nimport {movie} from \"../../../VMoviePageApi\";\r\n\r\ntype PropsType = {\r\n    poster: string\r\n    movieId: number\r\n    setSimilarMovieData: (data: Array<object>) => void\r\n    setCurrentMovie: (data: Array<object>) => void\r\n}\r\n\r\nexport const VSimilarMovieItem: React.FC<PropsType> = (props) => {\r\n    const {poster, movieId, setSimilarMovieData, setCurrentMovie} = props;\r\n\r\n    const src: string = `https://image.tmdb.org/t/p/w300/${poster}`;\r\n\r\n    let func = () => {\r\n        movie.getSelectedFilm(movieId)\r\n            .then((response: any) => setCurrentMovie(response))\r\n            .then(() => {\r\n                movie.getSimilarMovies(movieId)\r\n                    .then((similar: any) => setSimilarMovieData((similar.results).splice(0,8)))\r\n            })\r\n};\r\n    return (\r\n        <SimilarMoviesItemSC to={`${movieId}`} poster={src} onClick={() => func()}/>\r\n    )\r\n};\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {ModalWrappSC, VideoCloseSC, VideoFrameSC} from \"./styles\";\r\nimport {movie} from \"../../../VMoviePageApi\";\r\nimport {openModuleVideo, setVideoKey} from \"../../../redux-store/MoviePageReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {CombinedStateType} from \"../../../redux-store\";\r\n\r\ntype MapDispatchPropsType = {\r\n    setVideoKey: (videoKey: string) => void\r\n    openModuleVideo: () => void\r\n}\r\ntype MapStatePropsType = {\r\n    isTrailer: boolean,\r\n    videoKey: string | null\r\n}\r\ntype OwnPropsType = {\r\n    movieId: number\r\n}\r\n\r\ntype PropsType = OwnPropsType & MapStatePropsType & MapDispatchPropsType\r\n\r\nconst VModalVideo: React.FC<PropsType> = (props) => {\r\n    const {setVideoKey, videoKey, openModuleVideo, isTrailer, movieId} = props;\r\n\r\n\r\n    useEffect(() => {\r\n        (async ()=>{\r\n            try {\r\n                const video = await movie.getVideo(movieId);\r\n                    setVideoKey(video.results\r\n                        .sort(item => item.name.includes('Trailer') ? -1 : 1)[0].key)\r\n            } catch(e) {\r\n                alert(e)\r\n            }\r\n        })()\r\n        }, [movieId]\r\n    );\r\n   const src = `https://www.youtube.com/embed/${videoKey}?mute=1&autoplay=1`;\r\n    return (\r\n        isTrailer ?\r\n            <ModalWrappSC onClick={openModuleVideo}>\r\n                <VideoFrameSC>\r\n                    <iframe width='1300' height='700' src={src}\r\n                            frameBorder=\"0\"\r\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                            allowFullScreen>\r\n                    </iframe>\r\n                    <VideoCloseSC/>\r\n                </VideoFrameSC>\r\n\r\n            </ModalWrappSC>\r\n        : <></>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state: CombinedStateType): MapStatePropsType => ({\r\n    isTrailer: state.MoviePageReducer.isTrailerOpen,\r\n    videoKey: state.MoviePageReducer.videoKey\r\n});\r\n\r\n\r\nexport const VModalVideoContainer = connect(mapStateToProps, {setVideoKey, openModuleVideo})(VModalVideo);","import styled from 'styled-components'\r\n\r\n\r\nexport const CastAvatarSC = styled.div`\r\n  width: 140px;\r\n  border-radius: 50%;\r\n  height: 140px;\r\n  background: url(${props => props.src}) center center;\r\n  background-size: cover;\r\n`;\r\n\r\nexport const AvatarsListSC = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n`;\r\nexport const CastItemSC = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 20px;\r\n    width: 140px;\r\n    align-items: center;\r\n`;\r\nexport const NameSC = styled.div`\r\n    color: #ffffff;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    padding-top: 3px;\r\n`;\r\nexport const CharacterSC = styled.div`\r\n    color: #ffffff;\r\n    width: 120px;\r\n    font-size: 14px;\r\n    text-align: center;\r\n    opacity: 0.8;\r\n`;\r\nexport const CastTitleSC = styled.div`\r\n    color: #ffffff;\r\n    font-size: 24px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-weight: 500;\r\n    margin-bottom: 30px;\r\n`;\r\nexport const CastWrapperSC = styled.div`\r\n    padding: 50px 0;\r\n    max-width: 1500px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    `;","import React, {useEffect} from 'react'\r\nimport {movie} from \"../../../VMoviePageApi\";\r\nimport {AvatarsListSC, CastAvatarSC, CastItemSC, CastTitleSC, CastWrapperSC, CharacterSC, NameSC} from \"./CastSC\";\r\n\r\ntype MovieCastObjType = {\r\n    id: number,\r\n    profile_path: string,\r\n    character: string,\r\n    name: string\r\n}\r\n\r\ntype PropsType = {\r\n    movieCast: Array<MovieCastObjType>,\r\n    setCast: (data: Array<object>) => void,\r\n    movieId: number\r\n}\r\n\r\nexport const VCast: React.FC<PropsType> = (props) => {\r\n    const {movieCast, setCast, movieId} = props;\r\n\r\n    useEffect(() => {\r\n            (async () => {\r\n                let castData = await movie.getCastAndCrew(movieId);\r\n                setCast(castData.cast.splice(0, 8));\r\n            })()\r\n        }, [movieId]\r\n    );\r\n\r\n    const movieCastArr = movieCast.map(item => <VCastItem\r\n        key={item.id}\r\n        src={'https://image.tmdb.org/t/p/w500' + item['profile_path']}\r\n        character={item.character}\r\n        name={item.name}\r\n    />);\r\n\r\n    return (\r\n        <CastWrapperSC>\r\n            <CastTitleSC>MOVIE CAST</CastTitleSC>\r\n            <AvatarsListSC>\r\n                {movieCastArr}\r\n            </AvatarsListSC>\r\n        </CastWrapperSC>\r\n    )\r\n\r\n};\r\n\r\ntype PropsItemType = {\r\n    src: string,\r\n    character: string,\r\n    name: string\r\n}\r\n\r\nconst VCastItem: React.FC<PropsItemType> = (props) => {\r\n\r\n    const {src, character, name} = props;\r\n\r\n\r\n    return (\r\n        <CastItemSC>\r\n            <CastAvatarSC src={src}/>\r\n            <NameSC>{name}</NameSC>\r\n            <CharacterSC>{character}</CharacterSC>\r\n        </CastItemSC>\r\n    )\r\n};\r\n\r\n","import styled from 'styled-components'\r\nimport {CastTitleSC} from \"./CastSC\";\r\n\r\nexport const WrapperSC = styled.div`\r\n     background: ${`rgba(24,23,25,1)`};\r\n    width: 100%;\r\n    display: flex;\r\n    margin: 8px 0;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const AvatarSC = styled.img.attrs(props => ({\r\n    src: props.src,\r\n}))`\r\n    height: 32px;\r\n    min-width: 32px;\r\n    background-size: contain;\r\n    border-radius: 50%;\r\n`;\r\n\r\nexport const BodySC = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    width: 100%;\r\n    margin-left: 15px;\r\n`;\r\nexport const InfoSC = styled.div`\r\n    display: flex;\r\n`;\r\nexport const NameSC = styled.div`\r\n    margin-right: 8px;\r\n    font-weight: 700;\r\n    color: #ffffff;\r\n`;\r\nexport const DateSC = styled.div`\r\n    color: #ffffff;\r\n    opacity: 80%;\r\n\r\n`;\r\nexport const ContentSC = styled.div`\r\n    padding-top: 10px;\r\n    color: #ffffff;\r\n    opacity: 80%;\r\n    font-weight: 500;\r\n    line-height: 22px;\r\n    max-height: ${props => props.isHidden ? '100%' : '220px'};\r\n    overflow: hidden;\r\n`;\r\nexport const ToggleSC = styled.div`\r\n    padding: 5px 0;\r\n    margin-right: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    font-weight: 500;\r\n    color: ${`#cbcbcb`};\r\n    &:hover {\r\n        color: #fff;\r\n        cursor: pointer;        \r\n    }\r\n    background: ${`#2e2d2d`};\r\n`;\r\nexport const ReviewSectionSC = styled.div`\r\n    padding: 50px 0;\r\n    width: 700px;\r\n    margin: 0 auto;\r\n`;\r\nexport const ReviewTitleSC = styled(CastTitleSC)`\r\n`;\r\nexport const PaginationSC = styled.div`\r\n    height: 50px;\r\n    width: 100%;\r\n`;\r\nexport const PaginationItemSC = styled.span`\r\n    height: 50px;\r\n    color: ${props => props.isActive};\r\n    font-size: 18px;\r\n    margin: 0 1px;\r\n    font-weight: 500;\r\n`;\r\n\r\nexport const NoCommSC = styled.div`\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 20px;\r\n    color: #fff;\r\n`;\r\n","import React, {useEffect, useRef, useState} from 'react'\r\nimport {AuthorDetailsType, ReviewDetails, ReviewsType } from '../../../types/types';\r\nimport { movie, } from \"../../../VMoviePageApi\";\r\nimport {\r\n    AvatarSC,\r\n    BodySC,\r\n    ContentSC,\r\n    DateSC,\r\n    InfoSC,\r\n    NameSC, NoCommSC, PaginationItemSC, PaginationSC,\r\n    ReviewSectionSC,\r\n    ReviewTitleSC,\r\n    ToggleSC,\r\n    WrapperSC\r\n} from \"./ReviewsSC\";\r\n\r\ntype PropsReviewsType = {\r\n    setReviews: (reviews: Array<ReviewDetails>, totalPages: number) => void\r\n    reviews: ReviewsType\r\n    movieId: number\r\n    setCurrentReviewPage: (page: number) => void\r\n}\r\n\r\nconst VReviews: React.FC<PropsReviewsType> = (props) => {\r\n    const {setReviews, reviews, movieId, setCurrentReviewPage} = props;\r\n    useEffect(() => {\r\n            movie.getReviews(movieId, reviews.currentPage)\r\n                .then(response => {\r\n                    setReviews(response.results, response['total_pages']);\r\n                })\r\n        }, [movieId]\r\n    );\r\n\r\n\r\n    const reviewsList = reviews.data.map((item, index) => <ReviewItem key={index}\r\n                                                                      author={item.author}\r\n                                                                      date={item['created_at']}\r\n                                                                      author_details={item.author_details}\r\n                                                                      content={item.content}\r\n    />);\r\n\r\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n    const myRef = useRef(null as any);\r\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n    const scrollTo = (): void => myRef.current.scrollIntoView();\r\n\r\n    const selectPage = (page: number): void => {\r\n        scrollTo();\r\n        setCurrentReviewPage(page);\r\n        reviews.currentPage !== page &&\r\n        movie.getReviews(movieId, page)\r\n            .then(response => {\r\n                setReviews(response.results, response['total_pages']);\r\n            })\r\n    };\r\n    let totalPagesArr = [];\r\n    const totalPages = reviews.totalPages;\r\n    for (let i = 1; i <= totalPages; i++) {\r\n        totalPagesArr.push(i)\r\n    }\r\n    totalPagesArr = totalPagesArr.map((item, index) =>\r\n        <PaginationItemSC key={index}\r\n                          onClick={() => selectPage(item)}\r\n                          isActive={item === reviews.currentPage ? 'red' : 'white'}>\r\n            {item}\r\n        </PaginationItemSC>);\r\n\r\n    return (\r\n        <ReviewSectionSC>\r\n            <ReviewTitleSC ref={myRef}>\r\n                COMMENTARIES\r\n            </ReviewTitleSC>\r\n            {reviews.data.length !== 0 ? <>{reviewsList}\r\n                <PaginationSC>\r\n                    {totalPagesArr}\r\n                </PaginationSC>\r\n            </> : <NoCommSC>\r\n                No Commentaries :(\r\n            </NoCommSC>}\r\n\r\n        </ReviewSectionSC>\r\n    )\r\n};\r\n\r\nexport const VReviewsMemo = React.memo(VReviews);\r\n\r\ntype ItemPropsType = {\r\n    author: string\r\n    date: string\r\n    author_details: AuthorDetailsType\r\n    content: string\r\n}\r\n\r\nconst ReviewItem: React.FC<ItemPropsType> = React.memo(props => {\r\n    const {author, date, author_details, content} = props;\r\n    const src = 'https://image.tmdb.org/t/p/original/' + author_details.avatar_path;\r\n    const noSrc = 'https://socpartnerstvo.org/img/avatar_male.png';\r\n\r\n    const [isOpen, setStyle] = useState(false);\r\n\r\n    return (\r\n        <WrapperSC>\r\n            <AvatarSC src={author_details.avatar_path && author_details.avatar_path.includes('.com') ?\r\n                noSrc : author_details.avatar_path ? src : noSrc}/>\r\n            <BodySC>\r\n                <InfoSC>\r\n                    <NameSC>\r\n                        {author}\r\n                    </NameSC>\r\n                    <DateSC>\r\n                        {date.slice(0, date.indexOf('T'))}\r\n                    </DateSC>\r\n                </InfoSC>\r\n                <ContentSC isHidden={isOpen}>\r\n                    {content}\r\n                </ContentSC>\r\n                {\r\n                    content.length > 1500 ?\r\n                        <ToggleSC onClick={() => setStyle(!isOpen)}>\r\n                            {isOpen ? 'Hide' : 'Show more'}\r\n                        </ToggleSC> : ''\r\n                }\r\n            </BodySC>\r\n        </WrapperSC>\r\n    )\r\n});\r\n\r\n","import React from 'react'\r\nimport {\r\n    BackdropSectionSC,\r\n    CollectionContainerSC,\r\n    CreatedSC,\r\n    DescriptionSC,\r\n    FooterInfoSC,\r\n    FooterSC,\r\n    FooterWrapperSC,\r\n    GenreSC,\r\n    GenresSC,\r\n    InfoContentSC,\r\n    InfoSC,\r\n    LinkSC,\r\n    MailSC,\r\n    ProductionSC,\r\n    ProductionsSC,\r\n    RecommendedMoviesListSC,\r\n    RecommendedTitleSC,\r\n    SocialSC,\r\n    VBackDropSC,\r\n    VGradientSC,\r\n    VMainMoviePageTitleSC,\r\n    VoteAvarageSC,\r\n    VoteScoreCS,\r\n    VSubMoviePageTitleSC,\r\n    VWrapperSPSC,\r\n    WatchMovieSC\r\n} from \"./styles\";\r\nimport {VSimilarMovieItem} from \"./VSimilarMovieItem\";\r\nimport { VModalVideoContainer } from \"./VModalVideo\";\r\nimport {VCast} from \"./VCast\";\r\nimport {VReviewsMemo} from \"./VReviews\";\r\nimport {FaGithub, FaInstagram, FaLinkedin} from 'react-icons/fa';\r\nimport { movie} from \"../../../VMoviePageApi\";\r\nimport {CastPersonType,\r\n    CollectionType,\r\n    GenresType, MovieBySearch, ProdactionCompaniesType, ReviewsType, SelectedMovieType} from '../../../types/types';\r\n\r\ntype PropsType = {\r\n    selectedMovieData: SelectedMovieType\r\n    similarMoviesData: Array<MovieBySearch>\r\n    movieCast: Array<CastPersonType>\r\n    movieId: number\r\n    reviews: ReviewsType\r\n    collection: CollectionType\r\n    favouritesMovies: {\r\n        listId: number | null,\r\n        listData: Array<MovieBySearch>\r\n        isFavourite: boolean\r\n    }\r\n    openModuleVideo: () => void\r\n    setCurrentMovie: () => void\r\n    setSimilarMovieData: () => void\r\n    setCast: () => void\r\n    setReviews: () => void\r\n    setCurrentReviewPage: () => void\r\n    createFavouriteMoviesList: (listId: number) => void\r\n    setFavouriteMovie: (flag: boolean) => void\r\n    setFavouriteMoviesList: (favouriteData: Array<MovieBySearch>) => void\r\n}\r\n\r\nexport const VSelectedMoviePage: React.FC<PropsType> = (props) => {\r\n    const {\r\n        title, original_title, vote_average, overview, backdrop_path, status,\r\n        genres, production_companies, release_date\r\n    } = props.selectedMovieData;\r\n    const {\r\n        similarMoviesData, openModuleVideo, setCurrentMovie, setSimilarMovieData,\r\n        collection, movieId, setCast, movieCast, setReviews, reviews, setCurrentReviewPage,\r\n        favouritesMovies, createFavouriteMoviesList, setFavouriteMoviesList, setFavouriteMovie\r\n    } = props;\r\n    const baseSrc = 'https://image.tmdb.org/t/p/original/';\r\n    const backdrop = `${baseSrc}${backdrop_path}`;\r\n\r\n    const similarMovies = similarMoviesData.map((item, index) => <VSimilarMovieItem\r\n        poster={item['poster_path']}\r\n        key={index}\r\n        movieId={item.id}\r\n        setSimilarMovieData={setSimilarMovieData}\r\n        setCurrentMovie={setCurrentMovie}\r\n    />);\r\n\r\n    let genresFunc = (data = [] as GenresType): React.ReactNode => {\r\n        let genresArr: Array<string> = [];\r\n        data.forEach(item => genresArr.push(item.name));\r\n        return genresArr.join(', ').split(' ').map((item, index) => <GenreSC key={index} to={`/${item}`}>{item}</GenreSC>);\r\n    };\r\n    let production = (data = [] as ProdactionCompaniesType): React.ReactNode => {\r\n        let arr:Array<string> = [];\r\n        data.forEach(item => arr.push(item.name));\r\n        return arr.join(', ').split(' ').map((item, index) => <ProductionSC key={index} to='/'>{item}</ProductionSC>);\r\n    };\r\n    let releaseDate = (releaseDate = ''): string => releaseDate.slice(0, 4);\r\n\r\n    const createList = (): void => {\r\n        (async () => {\r\n            const listId = await movie.setList('test');\r\n            createFavouriteMoviesList(listId.data.id);\r\n            localStorage.setItem('Favourite Movies list id', listId.data.id)\r\n        })();\r\n\r\n    };\r\n    const addToFavourite = (listId = favouritesMovies.listId): void => {\r\n        favouritesMovies.listId ?\r\n            (async () => {\r\n                if (listId) {\r\n                    await movie.updateList(listId, +movieId);\r\n                    const listData = await movie.getList(listId);\r\n                    setFavouriteMoviesList(listData.results);\r\n                    setFavouriteMovie(true)\r\n                }\r\n            })() :\r\n            (async () => {\r\n                const list = await movie.setList('test');\r\n                createFavouriteMoviesList(list.data.id);\r\n                const listId = await list.data.id;\r\n                localStorage.setItem('Favourite Movies list id', list.data.id);\r\n                addToFavourite(listId)\r\n            })()\r\n    };\r\n    const removeFromFavourite = (): void => {\r\n        (async () => {\r\n            if (favouritesMovies.listId) {\r\n                await movie.removeItems(favouritesMovies.listId, +movieId);\r\n                const listData = await movie.getList(favouritesMovies.listId);\r\n                setFavouriteMoviesList(listData.results);\r\n                setFavouriteMovie(false)\r\n            }\r\n        })()\r\n    };\r\n\r\n    return (\r\n        <VWrapperSPSC>\r\n            <VModalVideoContainer movieId={movieId}/>\r\n            <BackdropSectionSC>\r\n                <InfoSC>\r\n                    <InfoContentSC>\r\n                        <VMainMoviePageTitleSC>\r\n                            {title}\r\n                        </VMainMoviePageTitleSC>\r\n                        <VSubMoviePageTitleSC>\r\n                            {releaseDate(release_date)}, {original_title}\r\n                        </VSubMoviePageTitleSC>\r\n                        {status === 'Released' ?\r\n                            <VoteAvarageSC>\r\n                                VOTE AVERAGE: <VoteScoreCS score={vote_average}>{vote_average}</VoteScoreCS>\r\n                            </VoteAvarageSC>\r\n                            : <VoteAvarageSC>{status}</VoteAvarageSC>\r\n                        }\r\n                        {\r\n                            production(production_companies) ? <ProductionsSC>\r\n                                {production(production_companies)}\r\n                            </ProductionsSC> : ''\r\n                        }\r\n                        <DescriptionSC>\r\n                            {overview}\r\n                        </DescriptionSC>\r\n                        <CollectionContainerSC>\r\n                        </CollectionContainerSC>\r\n                        <GenresSC>\r\n                            {collection.id ? <GenreSC to='/'>{collection.name}</GenreSC> : ''}\r\n                            {genresFunc(genres)}\r\n                        </GenresSC>\r\n                        <WatchMovieSC onClick={openModuleVideo}>\r\n                            WATCH TRAILER\r\n                        </WatchMovieSC>\r\n                        <WatchMovieSC onClick={() => createList()}>\r\n                            create\r\n                        </WatchMovieSC>\r\n                        <WatchMovieSC onClick={() => addToFavourite()}>\r\n                            add\r\n                        </WatchMovieSC>\r\n                        {favouritesMovies.isFavourite ?\r\n                            <button onClick={() => removeFromFavourite()}>remove from favourite</button> :\r\n                            <button onClick={() => addToFavourite()}>add to favourite</button>}\r\n                    </InfoContentSC>\r\n                </InfoSC>\r\n\r\n                <VBackDropSC src={backdrop}>\r\n                    <VGradientSC>\r\n                    </VGradientSC>\r\n                </VBackDropSC>\r\n            </BackdropSectionSC>\r\n            <VCast movieId={+movieId}\r\n                   setCast={setCast}\r\n                   movieCast={movieCast}\r\n            />\r\n            <RecommendedMoviesListSC>\r\n                <RecommendedTitleSC>\r\n                    RECOMMENDED MOVIES\r\n                </RecommendedTitleSC>\r\n                {similarMovies}\r\n            </RecommendedMoviesListSC>\r\n            <VReviewsMemo movieId={+movieId} setReviews={setReviews} reviews={reviews}\r\n                          setCurrentReviewPage={setCurrentReviewPage}/>\r\n            <FooterSC>\r\n                <FooterWrapperSC>\r\n                    <FooterInfoSC>\r\n                        <SocialSC>\r\n                            <LinkSC target=\"_blank\" href={'https://github.com/crazze16'}>\r\n                                <FaGithub size={'24px'}/>\r\n                            </LinkSC>\r\n                            <LinkSC target=\"_blank\" href={'https://www.instagram.com/because_nekoz/'}>\r\n                                <FaInstagram size={'24px'}/>\r\n                            </LinkSC>\r\n                            <LinkSC target=\"_blank\" href={'https://www.linkedin.com/in/vladimir-nekoz-099173204/'}>\r\n                                <FaLinkedin size={'24px'}/>\r\n                            </LinkSC>\r\n                        </SocialSC>\r\n                        <CreatedSC>created by</CreatedSC>\r\n                        <MailSC>vladimirnekoz16@gmail.com</MailSC>\r\n                    </FooterInfoSC>\r\n                </FooterWrapperSC>\r\n            </FooterSC>\r\n        </VWrapperSPSC>\r\n    )\r\n};","import {MovieBySearch} from \"../types/types\";\r\n\r\nconst CREATE_FAVOURITE_MOVIES_LIST = 'CREATE_FAVOURITE_MOVIES_LIST';\r\nconst SET_FAVOURITE_MOVIES_LIST = 'SET_FAVOURITE_MOVIES_LIST';\r\nconst SET_AS_FAVOURITE = 'SET_AS_FAVOURITE';\r\n\r\n\r\ntype InitialStateType = typeof initialState\r\nconst initialState = {\r\n    favouritesMovies: {\r\n        listId: null as number | null,\r\n        listData: [] as Array<MovieBySearch>,\r\n        isFavourite: false,\r\n        isCreated: false,\r\n    },\r\n};\r\n\r\n const FavouriteMoviesReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case CREATE_FAVOURITE_MOVIES_LIST:\r\n            return {\r\n                ...state,\r\n                favouritesMovies: {\r\n                    ...state.favouritesMovies,\r\n                    listId: action.listId,\r\n                    isCreated: true\r\n                }\r\n            };\r\n        case SET_FAVOURITE_MOVIES_LIST:\r\n            return {\r\n                ...state,\r\n                favouritesMovies: {\r\n                    ...state.favouritesMovies,\r\n                    listData: action.listData,\r\n                }\r\n            };\r\n        case SET_AS_FAVOURITE:\r\n            return {\r\n                ...state,\r\n                favouritesMovies: {\r\n                    ...state.favouritesMovies,\r\n                    isFavourite: action.isFavourite,\r\n                }\r\n            };\r\n        default: return {...state}\r\n    }\r\n};\r\n\r\ntype TCreateFavouriteMoviesList = {type: typeof CREATE_FAVOURITE_MOVIES_LIST, listId: number}\r\nexport const createFavouriteMoviesList = (listId: number): TCreateFavouriteMoviesList => ({type: CREATE_FAVOURITE_MOVIES_LIST, listId});\r\ntype TSetFavouriteMoviesList = {type: typeof SET_FAVOURITE_MOVIES_LIST, listData: Array<MovieBySearch>}\r\nexport const setFavouriteMoviesList = (listData: Array<MovieBySearch>): TSetFavouriteMoviesList => ({type: SET_FAVOURITE_MOVIES_LIST, listData});\r\ntype TSetFavouriteMovie = {type: typeof SET_AS_FAVOURITE, isFavourite: boolean}\r\nexport const setFavouriteMovie = (isFavourite: boolean): TSetFavouriteMovie => ({type: SET_AS_FAVOURITE, isFavourite});\r\n\r\ntype ActionsType = TCreateFavouriteMoviesList | TSetFavouriteMoviesList | TSetFavouriteMovie\r\n\r\nexport default FavouriteMoviesReducer","import React, {useEffect} from 'react'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {movie} from \"../../../VMoviePageApi\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    openModuleVideo,\r\n    setCast,\r\n    setCollectionData,\r\n    setCollectionId,\r\n    setCurrentMovie,\r\n    setCurrentReviewPage,\r\n    setReviews,\r\n    setSimilarMovieData,\r\n} from \"../../../redux-store/MoviePageReducer\";\r\nimport {VSelectedMoviePage} from \"./VSelectedMoviePage\";\r\nimport {\r\n    createFavouriteMoviesList,\r\n    setFavouriteMovie,\r\n    setFavouriteMoviesList\r\n} from \"../../../redux-store/FavouriteMoviesReducer\";\r\n\r\nconst VSelectedMoviePageAPI = (props) => {\r\n\r\n    const {setCurrentMovie, setCollectionId, setCollectionData, setSimilarMovieData, setFavouriteMoviesList, setFavouriteMovie,createFavouriteMoviesList} = props;\r\n\r\n    useEffect(() => {\r\n        const listId = +localStorage.getItem('Favourite Movies list id');\r\n            (async () => {\r\n                const movieId = +props.match.params.movieId;\r\n\r\n                //set selected data\r\n                const selectedFilm = await movie.getSelectedFilm(movieId);\r\n                setCurrentMovie(selectedFilm);\r\n\r\n                //set similar data\r\n                const similar = await movie.getSimilarMovies(movieId);\r\n                setSimilarMovieData((similar.results).splice(0, 8));\r\n\r\n                //set favourite data\r\n                createFavouriteMoviesList(listId);\r\n                const listData = await movie.getList(listId);\r\n                setFavouriteMoviesList(listData.results);\r\n\r\n                if (listData.results.some(id => id.id === movieId)) {\r\n                    setFavouriteMovie(true);\r\n                } else {\r\n                    setFavouriteMovie(false);\r\n                }\r\n                //set collection\r\n                if (selectedFilm['belongs_to_collection']) {\r\n                    setCollectionId(selectedFilm['belongs_to_collection'].id);\r\n                    const collection = await movie.getCollection(selectedFilm['belongs_to_collection'].id);\r\n                    setCollectionData(collection);\r\n                } else {\r\n                    setCollectionId(null);\r\n                    setCollectionData([]);\r\n                }\r\n            })();\r\n        }, [props.match.params.movieId]\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <VSelectedMoviePage {...props} movieId={+props.match.params.movieId}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst VSelectedMoviePageWithRouter = withRouter(VSelectedMoviePageAPI);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    selectedMovieData: state.MoviePageReducer.selectedMovieData,\r\n    similarMoviesData: state.MoviePageReducer.similarMoviesData,\r\n    collection: state.MoviePageReducer.collection,\r\n    movieCast: state.MoviePageReducer.movieCast,\r\n    reviews: state.MoviePageReducer.reviews,\r\n    favouritesMovies: state.FavouriteMoviesReducer.favouritesMovies\r\n});\r\n\r\n\r\nexport const VSelectedMoviePageContainer = connect(mapStateToProps, {\r\n    setCurrentMovie,\r\n    setSimilarMovieData,\r\n    openModuleVideo,\r\n    setCollectionId,\r\n    setCollectionData,\r\n    setCast,\r\n    setReviews,\r\n    setCurrentReviewPage,\r\n    createFavouriteMoviesList,\r\n    setFavouriteMoviesList,\r\n    setFavouriteMovie,\r\n})(VSelectedMoviePageWithRouter);\r\n","import styled from 'styled-components'\r\n\r\nexport const BodySC = styled.div`\r\ndisplay: flex;\r\nwidth: 100%;\r\nheight: 100%;\r\nposition: relative;\r\n`;\r\nexport const ContentSC = styled.div`\r\nwidth: 100%;\r\n\r\n`;\r\nexport const NavigationWrapperSC = styled.div`\r\nposition: relative;\r\nmin-width: 90px;\r\n`;\r\n","import styled from 'styled-components'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const ListWrapperSC = styled.div`\r\n    padding: 0 15px;\r\n`;\r\nexport const PageTitleSC = styled.h1`\r\ncolor: white;\r\nmargin: 0;\r\npadding: 0;\r\nfont-weight: 300;\r\n`;\r\nexport const ListSC = styled.div`\r\ndisplay: flex;\r\nmax-width: 1700px;\r\nmargin: 0 auto;\r\nflex-wrap: wrap;\r\n// justify-content: center;\r\nflex-start: left;\r\n`;\r\nexport const BackdropSC = styled(NavLink)`\r\n    display: block;\r\n    width: 400px;\r\n    height: 220px;\r\n    background: url(${props => props.bg});\r\n    background-size: cover;\r\n`;\r\nexport const TitleSC = styled.div`\r\ncolor: white;\r\n`;\r\nexport const WrapperSC = styled.div`\r\n\r\n`;\r\nexport const SortSC = styled.div`\r\n    color: #fff;\r\n`;\r\nexport const WrapperItemSC = styled.div`\r\n    display: block;\r\n    margin: 20px 2px;\r\n    color: #fff;    \r\n    position: relative;\r\n`;\r\nexport const HoveredSC = styled.div`\r\n    display: ${props => props.flag ? 'block' : 'none'};\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 2px;\r\n    opacity: 80%;\r\n    &:hover {\r\n    opacity: 100%;\r\n    cursor: pointer;\r\n    }\r\n    &:hover::before{\r\n        top: -30px;\r\n        display: block;\r\n        background: #2e2d2d;\r\n        width: 150px;\r\n        text-align: center;\r\n        border-radius: 4px; \r\n        content: '${props => props.content ? 'Remove from the list' : 'Add to the list'}';\r\n        position: absolute;\r\n    } \r\n    &:hover::after{\r\n        top: -12px;\r\n        left: 3px;\r\n        display: block;\r\n        width: 0;\r\n        height: 0;\r\n        border-style: solid;\r\n        border-width: 9px 8px 0 8px;\r\n        border-color: #2e2d2d transparent transparent transparent;\r\n        content: '';\r\n        position: absolute;\r\n    }\r\n`;\r\nexport const EmptyListSC = styled.p`\r\ncolor: white;\r\n`;","import React, {useState} from 'react'\r\nimport {BackdropSC, HoveredSC, TitleSC, WrapperItemSC} from '../../styles/FavouriteMoviesSC';\r\n\r\ntype PropsType = {\r\n    id: number\r\n    title: string\r\n    poster: string\r\n    removeFromFavourite: (flag: boolean, movieId: number) => void\r\n}\r\n\r\nexport const FavouriteMovieItem: React.FC<PropsType> = (props) => {\r\n\r\n    const {id, title, poster, removeFromFavourite} = props;\r\n    const [hover, setHover] = useState(false);\r\n    const [handler, setHandler] = useState(true);\r\n\r\n    const favouriteMovieToggle = (flag: boolean) => {\r\n        setHandler(flag);\r\n        removeFromFavourite(handler, id);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <WrapperItemSC onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} >\r\n\r\n                    <BackdropSC bg={`https://image.tmdb.org/t/p/w780` + poster} to={`/Vapi/movie/${id}`}>\r\n                    </BackdropSC>\r\n                    <TitleSC>\r\n                        {title}\r\n                    </TitleSC>\r\n\r\n                    <HoveredSC flag={hover} content={handler} to={`/Vapi/movie/${id}`} onClick={() => favouriteMovieToggle(!handler)}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"33\" height=\"33\" fill={handler ? `white` : 'transparent'}\r\n                             stroke=\"white\"\r\n                             className=\"bi bi-bookmark-fill\" viewBox=\"0 0 16 16\">\r\n                            <path\r\n                                d=\"M2 2v13.5a.5.5 0 0 0 .74.439L8 13.069l5.26 2.87A.5.5 0 0 0 14 15.5V2a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2z\"/>\r\n                        </svg>\r\n                    </HoveredSC>\r\n            </WrapperItemSC>\r\n\r\n        </>\r\n    )\r\n};","import React, {ReactNode, useState} from 'react'\r\nimport {ListSC, ListWrapperSC, PageTitleSC, SortSC} from \"../../styles/FavouriteMoviesSC\";\r\nimport {FavouriteMoviesType, MovieBySearch} from '../../types/types';\r\nimport { FavouriteMovieItem } from './FavouriteMovieItem';\r\n\r\ntype PropsType = {\r\n    favouritesMovies: FavouriteMoviesType\r\n    removeFromFavourite: (flag: boolean, movieId: number) => void\r\n}\r\n\r\nexport const FavouriteMoviePage: React.FC<PropsType> = (props) => {\r\n\r\n    const {favouritesMovies, removeFromFavourite} = props;\r\n    let listData = [...favouritesMovies.listData];\r\n\r\n    const [type, setType] = useState('default')\r\n\r\n        const sort = ():Array<MovieBySearch> => {\r\n            switch (type) {\r\n                case \"popularity\":\r\n                    return listData.sort((a:MovieBySearch,b:MovieBySearch) => b.popularity - a.popularity);\r\n                case \"vote\":\r\n                    return listData.sort((a:MovieBySearch,b:MovieBySearch) => b.vote_average - a.vote_average);\r\n                case \"reverse\":\r\n                    return listData.reverse();\r\n                default:\r\n                    return [...favouritesMovies.listData]\r\n            }\r\n        };\r\n    const arr: Array<ReactNode> =  sort().map(i => <FavouriteMovieItem key={`key_${i.id}`}\r\n                                                                         id={i.id}\r\n                                                                         title={i.title}\r\n                                                                         poster={i.backdrop_path}\r\n                                                                         removeFromFavourite={removeFromFavourite}\r\n    />);\r\n\r\n    return (\r\n        <ListWrapperSC>\r\n            <div>\r\n                <PageTitleSC>Your Picked Movies:</PageTitleSC>\r\n                <SortSC>Sorted by: <select onChange={(e) => setType(e.target.value)}>\r\n                    <option value='default'>Newest</option>\r\n                    <option value='reverse'>Oldest</option>\r\n                    <option value='popularity'>Most popular</option>\r\n                    <option value='vote'>Votes</option>\r\n                </select></SortSC>\r\n            </div>\r\n            <ListSC>\r\n                {arr}\r\n            </ListSC>\r\n        </ListWrapperSC>\r\n    )\r\n};","import React from 'react'\r\nimport s from '../../styles/Loader.module.css'\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.loader}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {FavouriteMoviePage} from \"./FavouriteMoviesPage\";\r\nimport {movie} from \"../../VMoviePageApi\";\r\nimport {createFavouriteMoviesList, setFavouriteMoviesList} from \"../../redux-store/FavouriteMoviesReducer\";\r\nimport {CombinedStateType} from \"../../redux-store\";\r\nimport {FavouriteMoviesType, MovieBySearch} from \"../../types/types\";\r\nimport {Loader} from '../../components/Loader/Loader';\r\nimport {EmptyListSC, WrapperSC } from '../../styles/FavouriteMoviesSC';\r\n\r\ntype MapState = {\r\n    favouritesMovies: FavouriteMoviesType\r\n}\r\ntype MapDispatch = {\r\n    setFavouriteMoviesList: (moviesData: Array<MovieBySearch>) => void\r\n    createFavouriteMoviesList: (listId: number) => void\r\n}\r\ntype PropsType = MapState & MapDispatch\r\n\r\nconst FavouriteMoviesPageContainer: React.FC<PropsType> = (props) => {\r\n\r\n    const {createFavouriteMoviesList, setFavouriteMoviesList, favouritesMovies} = props;\r\n\r\n    const [fetching, setFetching] = useState(false);\r\n\r\n    useEffect(() => {\r\n            if (+localStorage.getItem('Favourite Movies list id')!) {\r\n                setFetching(true);\r\n                const listId: number = +localStorage.getItem('Favourite Movies list id')!;\r\n                (async () => {\r\n                    createFavouriteMoviesList(listId);\r\n                    const listData = await movie.getList(listId);\r\n                    setFavouriteMoviesList(listData.results);\r\n                    setFetching(false);\r\n                })();\r\n            }\r\n        },\r\n        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n        []\r\n        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n    );\r\n\r\n    const removeFromFavourite = (flag: boolean, id: number):void => {\r\n        flag ?\r\n        (async () => {\r\n           await movie.removeItems(favouritesMovies.listId!, id);\r\n        })() :\r\n            (async () => {\r\n                await movie.updateList(favouritesMovies.listId!, id);\r\n            })()\r\n    };\r\n\r\n    return (\r\n        fetching ?\r\n            <Loader/> :\r\n            favouritesMovies.listData.length > 0 ?\r\n                <WrapperSC>\r\n                    <FavouriteMoviePage {...props} removeFromFavourite={removeFromFavourite}/>\r\n                </WrapperSC> : <EmptyListSC>you haven't added anything to your favorite movies list</EmptyListSC>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state: CombinedStateType): MapState => ({\r\n    favouritesMovies: state.FavouriteMoviesReducer.favouritesMovies\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setFavouriteMoviesList, createFavouriteMoviesList}),\r\n)(FavouriteMoviesPageContainer)","import {Navigation} from \"./components/Header\";\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {VMoviePageContainer} from \"./pages/MoviePage\";\nimport {Auth} from \"./pages/Auth\";\nimport {VSelectedMoviePageContainer} from \"./pages/MoviePage/VSelectedMoviePage/VSelectedMoviePageContainer\";\nimport {BodySC, ContentSC, NavigationWrapperSC} from \"./styles/AppSC\";\nimport FavouriteMoviesPageContainer from \"./pages/FavouritesMoviesPage/FavouriteMoviesPageContainer\";\n\nfunction App() {\n\n\n    return (\n        <BodySC>\n            <NavigationWrapperSC>\n                <Navigation/>\n            </NavigationWrapperSC>\n            <ContentSC>\n                <Switch>\n                    <Route path='/Auth' render={() => <Auth/>}/>\n                    <Route exact path='/Vapi' render={() => <VMoviePageContainer/>}/>\n                    <Route path='/home' render={() => <div>home</div>}/>\n                    <Route path='/about' render={() => <div>about</div>}/>\n                    <Route path='/Vapi/movie/:movieId?' render={() => <VSelectedMoviePageContainer/>}/>\n                    <Route path='/favourite' render={() => <FavouriteMoviesPageContainer/>}/>\n                    <Route path=\"/404\" render={() => <div>not found 404</div>}/>\n                    <Redirect exact from=\"/\" to=\"/home\" />\n                    <Redirect to=\"/404\"/>\n                </Switch>\n            </ContentSC>\n        </BodySC>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport MoviePageReducer from \"./MoviePageReducer\";\r\nimport AuthPageReducer from \"./AuthPageReducer\"\r\nimport FavouriteMoviesReducer from \"./FavouriteMoviesReducer\";\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type CombinedStateType = ReturnType<RootReducerType>\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    MoviePageReducer,\r\n    AuthPageReducer,\r\n    FavouriteMoviesReducer\r\n});\r\nexport const store = createStore(rootReducer);\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {store} from \"./redux-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n\r\n    <BrowserRouter>\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </React.StrictMode>\r\n    </BrowserRouter>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}